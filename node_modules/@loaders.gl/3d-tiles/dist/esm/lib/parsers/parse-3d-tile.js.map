{"version":3,"sources":["../../../../src/lib/parsers/parse-3d-tile.js"],"names":["TILE3D_TYPE","getMagicString","parsePointCloud3DTile","parseBatchedModel3DTile","parseInstancedModel3DTile","parseComposite3DTile","parse3DTile","arrayBuffer","byteOffset","options","context","tile","type","COMPOSITE","BATCHED_3D_MODEL","INSTANCED_3D_MODEL","POINT_CLOUD","Error"],"mappings":";;AAGA,SAAQA,WAAR,QAA0B,cAA1B;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AAEA,SAAQC,qBAAR,QAAoC,6BAApC;AACA,SAAQC,uBAAR,QAAsC,+BAAtC;AACA,SAAQC,yBAAR,QAAwC,iCAAxC;AACA,SAAQC,oBAAR,QAAmC,2BAAnC;AAGA,gBAAsBC,WAAtB;AAAA;AAAA;;;4DAAO,iBAA2BC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwCC,YAAAA,UAAxC,2DAAqD,CAArD;AAAwDC,YAAAA,OAAxD;AAAiEC,YAAAA,OAAjE;AAA0EC,YAAAA,IAA1E,2DAAiF,EAAjF;AACLA,YAAAA,IAAI,CAACH,UAAL,GAAkBA,UAAlB;AACAG,YAAAA,IAAI,CAACC,IAAL,GAAYX,cAAc,CAACM,WAAD,EAAcC,UAAd,CAA1B;AAFK,0BAIGG,IAAI,CAACC,IAJR;AAAA,4CAKEZ,WAAW,CAACa,SALd,uBAgBEb,WAAW,CAACc,gBAhBd,wBAmBEd,WAAW,CAACe,kBAnBd,wBAsBEf,WAAW,CAACgB,WAtBd;AAAA;;AAAA;AAAA;AAAA,mBAOYX,oBAAoB,CAC/BM,IAD+B,EAE/BJ,WAF+B,EAG/BC,UAH+B,EAI/BC,OAJ+B,EAK/BC,OAL+B,EAM/BJ,WAN+B,CAPhC;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAiBYH,uBAAuB,CAACQ,IAAD,EAAOJ,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,OAAzC,CAjBnC;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAoBYN,yBAAyB,CAACO,IAAD,EAAOJ,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,OAAzC,CApBrC;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAuBYR,qBAAqB,CAACS,IAAD,EAAOJ,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,OAAzC,CAvBjC;;AAAA;AAAA;;AAAA;AAAA,kBA0BK,IAAIO,KAAJ,sCAAwCN,IAAI,CAACC,IAA7C,EA1BL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {getMagicString} from './helpers/parse-utils';\n\nimport {parsePointCloud3DTile} from './parse-3d-tile-point-cloud';\nimport {parseBatchedModel3DTile} from './parse-3d-tile-batched-model';\nimport {parseInstancedModel3DTile} from './parse-3d-tile-instanced-model';\nimport {parseComposite3DTile} from './parse-3d-tile-composite';\n\n// Extracts\nexport async function parse3DTile(arrayBuffer, byteOffset = 0, options, context, tile = {}) {\n  tile.byteOffset = byteOffset;\n  tile.type = getMagicString(arrayBuffer, byteOffset);\n\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      // Note: We pass this function as argument so that embedded tiles can be parsed recursively\n      return await parseComposite3DTile(\n        tile,\n        arrayBuffer,\n        byteOffset,\n        options,\n        context,\n        parse3DTile\n      );\n\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return await parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return await parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.POINT_CLOUD:\n      return await parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    default:\n      throw new Error(`3DTileLoader: unknown type ${tile.type}`); // eslint-disable-line\n  }\n}\n"],"file":"parse-3d-tile.js"}