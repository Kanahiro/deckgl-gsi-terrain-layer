import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import { TILE3D_TYPE } from '../constants';
import { getMagicString } from './helpers/parse-utils';
import { parsePointCloud3DTile } from './parse-3d-tile-point-cloud';
import { parseBatchedModel3DTile } from './parse-3d-tile-batched-model';
import { parseInstancedModel3DTile } from './parse-3d-tile-instanced-model';
import { parseComposite3DTile } from './parse-3d-tile-composite';
export function parse3DTile(_x) {
  return _parse3DTile.apply(this, arguments);
}

function _parse3DTile() {
  _parse3DTile = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer) {
    var byteOffset,
        options,
        context,
        tile,
        _args = arguments;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            byteOffset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;
            options = _args.length > 2 ? _args[2] : undefined;
            context = _args.length > 3 ? _args[3] : undefined;
            tile = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};
            tile.byteOffset = byteOffset;
            tile.type = getMagicString(arrayBuffer, byteOffset);
            _context.t0 = tile.type;
            _context.next = _context.t0 === TILE3D_TYPE.COMPOSITE ? 9 : _context.t0 === TILE3D_TYPE.BATCHED_3D_MODEL ? 12 : _context.t0 === TILE3D_TYPE.INSTANCED_3D_MODEL ? 15 : _context.t0 === TILE3D_TYPE.POINT_CLOUD ? 18 : 21;
            break;

          case 9:
            _context.next = 11;
            return parseComposite3DTile(tile, arrayBuffer, byteOffset, options, context, parse3DTile);

          case 11:
            return _context.abrupt("return", _context.sent);

          case 12:
            _context.next = 14;
            return parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);

          case 14:
            return _context.abrupt("return", _context.sent);

          case 15:
            _context.next = 17;
            return parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);

          case 17:
            return _context.abrupt("return", _context.sent);

          case 18:
            _context.next = 20;
            return parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);

          case 20:
            return _context.abrupt("return", _context.sent);

          case 21:
            throw new Error("3DTileLoader: unknown type ".concat(tile.type));

          case 22:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _parse3DTile.apply(this, arguments);
}
//# sourceMappingURL=parse-3d-tile.js.map