{"version":3,"sources":["../../../../src/lib/classes/tile-3d-feature-table.js"],"names":["GL","GLType","Tile3DFeatureTable","featureTableJson","featureTableBinary","json","buffer","featuresLength","_cachedTypedArrays","extensionName","extensions","propertyName","Boolean","componentType","UNSIGNED_INT","componentLength","jsonValue","Number","isFinite","byteOffset","_getTypedArrayFromBinary","fromName","_getTypedArrayFromArray","featureId","result","typedArray","getPropertyArray","i","count","cachedTypedArrays","createTypedArray","array"],"mappings":"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","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL, GLType} from '@loaders.gl/math';\n\n// Reference:\n// https://github.com/AnalyticalGraphicsInc/cesium/blob/1de96d087f0b17575eb1a3f736407b348c765d59/Source/Scene/Cesium3DTileFeatureTable.js\nexport default class Tile3DFeatureTable {\n  constructor(featureTableJson, featureTableBinary) {\n    this.json = featureTableJson;\n    this.buffer = featureTableBinary;\n    this.featuresLength = 0;\n    this._cachedTypedArrays = {};\n  }\n\n  getExtension(extensionName) {\n    return this.json.extensions && this.json.extensions[extensionName];\n  }\n\n  hasProperty(propertyName) {\n    return Boolean(this.json[propertyName]);\n  }\n\n  getGlobalProperty(propertyName, componentType = GL.UNSIGNED_INT, componentLength = 1) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        1,\n        jsonValue.byteOffset\n      );\n    }\n\n    return jsonValue;\n  }\n\n  getPropertyArray(propertyName, componentType, componentLength) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      if ('componentType' in jsonValue) {\n        componentType = GLType.fromName(jsonValue.componentType);\n      }\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        this.featuresLength,\n        jsonValue.byteOffset\n      );\n    }\n\n    return this._getTypedArrayFromArray(propertyName, componentType, jsonValue);\n  }\n\n  getProperty(propertyName, componentType, componentLength, featureId, result) {\n    const jsonValue = this.json[propertyName];\n    if (!jsonValue) {\n      return jsonValue;\n    }\n\n    const typedArray = this.getPropertyArray(propertyName, componentType, componentLength);\n\n    if (componentLength === 1) {\n      return typedArray[featureId];\n    }\n\n    for (let i = 0; i < componentLength; ++i) {\n      result[i] = typedArray[componentLength * featureId + i];\n    }\n\n    return result;\n  }\n\n  // HELPERS\n\n  _getTypedArrayFromBinary(propertyName, componentType, componentLength, count, byteOffset) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(\n        componentType,\n        this.buffer.buffer,\n        this.buffer.byteOffset + byteOffset,\n        count * componentLength\n      );\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n\n  _getTypedArrayFromArray(propertyName, componentType, array) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(componentType, array);\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n}\n"],"file":"tile-3d-feature-table.js"}