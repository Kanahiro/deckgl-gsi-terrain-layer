{"version":3,"sources":["../../../../src/lib/mapbox-vector-tile/vector-tile-feature.js"],"names":["Point","VectorTileFeature","types","constructor","pbf","end","extent","keys","values","properties","type","_pbf","_geometry","_keys","_values","readFields","readFeature","loadGeometry","pos","readVarint","cmd","length","x","y","lines","line","cmdLen","readSVarint","push","clone","Error","bbox","x1","Infinity","x2","y1","y2","toGeoJSON","z","size","Math","pow","x0","y0","coords","i","j","project","p","PI","atan","exp","points","classifyRings","result","geometry","coordinates","rings","len","polygons","polygon","ccw","area","signedArea","undefined","ring","sum","p1","p2","tag","feature","id","readTag","key","value"],"mappings":"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","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n/* eslint-disable */\nimport Point from '@mapbox/point-geometry';\n\nexport default class VectorTileFeature {\n  static get types() {\n    return ['Unknown', 'Point', 'LineString', 'Polygon'];\n  }\n\n  constructor(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  loadGeometry() {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    const lines = [];\n    let line;\n\n    while (pbf.pos < end) {\n      if (length <= 0) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (line) lines.push(line);\n          line = [];\n        }\n        // @ts-ignore\n        line.push(new Point(x, y));\n      } else if (cmd === 7) {\n        // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n        if (line) {\n          line.push(line[0].clone()); // closePolygon\n        }\n      } else {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n  }\n\n  // eslint-disable-next-line max-statements\n  bbox() {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let x1 = Infinity;\n    let x2 = -Infinity;\n    let y1 = Infinity;\n    let y2 = -Infinity;\n\n    while (pbf.pos < end) {\n      if (length <= 0) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n        if (x < x1) x1 = x;\n        if (x > x2) x2 = x;\n        if (y < y1) y1 = y;\n        if (y > y2) y2 = y;\n      } else if (cmd !== 7) {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    return [x1, y1, x2, y2];\n  }\n\n  toGeoJSON(x, y, z) {\n    const size = this.extent * Math.pow(2, z);\n    const x0 = this.extent * x;\n    const y0 = this.extent * y;\n    let coords = this.loadGeometry();\n    let type = VectorTileFeature.types[this.type];\n    let i;\n    let j;\n\n    function project(line) {\n      for (let j = 0; j < line.length; j++) {\n        const p = line[j];\n        const y2 = 180 - ((p.y + y0) * 360) / size;\n        line[j] = [\n          ((p.x + x0) * 360) / size - 180,\n          (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90\n        ];\n      }\n    }\n\n    switch (this.type) {\n      case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n          points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n      case 2:\n        for (i = 0; i < coords.length; i++) {\n          project(coords[i]);\n        }\n        break;\n\n      case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n          for (j = 0; j < coords[i].length; j++) {\n            project(coords[i][j]);\n          }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n      coords = coords[0];\n    } else {\n      type = `Multi${type}`;\n    }\n\n    const result = {\n      type: 'Feature',\n      geometry: {\n        type,\n        coordinates: coords\n      },\n      properties: this.properties\n    };\n\n    if ('id' in this) {\n      // @ts-igore\n      // result.id = this.id;\n    }\n\n    return result;\n  }\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n */\n\nfunction classifyRings(rings) {\n  const len = rings.length;\n\n  if (len <= 1) return [rings];\n\n  const polygons = [];\n  let polygon;\n  let ccw;\n\n  for (let i = 0; i < len; i++) {\n    const area = signedArea(rings[i]);\n    if (area === 0) continue;\n\n    if (ccw === undefined) ccw = area < 0;\n\n    if (ccw === area < 0) {\n      if (polygon) polygons.push(polygon);\n      polygon = [rings[i]];\n    } else {\n      // @ts-ignore\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) polygons.push(polygon);\n\n  return polygons;\n}\n\nfunction signedArea(ring) {\n  let sum = 0;\n  for (let i = 0, j = ring.length - 1, p1, p2; i < ring.length; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2.x - p1.x) * (p1.y + p2.y);\n  }\n  return sum;\n}\n\nfunction readFeature(tag, feature, pbf) {\n  if (tag === 1) feature.id = pbf.readVarint();\n  else if (tag === 2) readTag(pbf, feature);\n  else if (tag === 3) feature.type = pbf.readVarint();\n  else if (tag === 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const key = feature._keys[pbf.readVarint()];\n    const value = feature._values[pbf.readVarint()];\n    feature.properties[key] = value;\n  }\n}\n"],"file":"vector-tile-feature.js"}