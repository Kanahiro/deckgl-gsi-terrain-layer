{"version":3,"sources":["../../../../src/lib/mapbox-vector-tile/vector-tile-layer.js"],"names":["VectorTileFeature","VectorTileLayer","pbf","end","version","name","extent","length","_pbf","_keys","_values","_features","readFields","readLayer","i","Error","pos","readVarint","tag","layer","readString","push","readValueMessage","value","readFloat","readDouble","readVarint64","readSVarint","readBoolean"],"mappings":"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","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileFeature from './vector-tile-feature.js';\n\nexport default class VectorTileLayer {\n  constructor(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n  }\n\n  // return feature `i` from this layer as a `VectorTileFeature`\n  feature(i) {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n  }\n}\n\nfunction readLayer(tag, layer, pbf) {\n  if (tag === 15) layer.version = pbf.readVarint();\n  else if (tag === 1) layer.name = pbf.readString();\n  else if (tag === 5) layer.extent = pbf.readVarint();\n  else if (tag === 2) layer._features.push(pbf.pos);\n  else if (tag === 3) layer._keys.push(pbf.readString());\n  else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n  let value = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n\n    value =\n      tag === 1\n        ? pbf.readString()\n        : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n            ? pbf.readDouble()\n            : tag === 4\n              ? pbf.readVarint64()\n              : tag === 5\n                ? pbf.readVarint()\n                : tag === 6\n                  ? pbf.readSVarint()\n                  : tag === 7\n                    ? pbf.readBoolean()\n                    : null;\n  }\n\n  return value;\n}\n"],"file":"vector-tile-layer.js"}