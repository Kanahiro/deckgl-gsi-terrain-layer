{"version":3,"sources":["../../../../src/geometry/attributes/get-attribute-from-geometry.js"],"names":["isGeometry","assert","getPositions","geometry","attributes","position","POSITION","positions","ArrayBuffer","isView","values","size"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAErC,MAAIH,UAAU,CAACG,QAAD,CAAd,EAA0B;AAAA,QACjBC,UADiB,GACHD,QADG,CACjBC,UADiB;AAExB,QAAMC,QAAQ,GAAGD,UAAU,CAACE,QAAX,IAAuBF,UAAU,CAACG,SAAnD;AACAN,IAAAA,MAAM,CAACI,QAAD,CAAN;AACA,WAAOA,QAAP;AACD;;AAGD,MAAIG,WAAW,CAACC,MAAZ,CAAmBN,QAAnB,CAAJ,EAAkC;AAChC,WAAO;AAACO,MAAAA,MAAM,EAAEP,QAAT;AAAmBQ,MAAAA,IAAI,EAAE;AAAzB,KAAP;AACD;;AAGD,MAAIR,QAAJ,EAAc;AACZF,IAAAA,MAAM,CAACE,QAAQ,CAACO,MAAV,CAAN;AACA,WAAOP,QAAP;AACD;;AAED,SAAOF,MAAM,CAAC,KAAD,CAAb;AACD","sourcesContent":["import isGeometry from '../is-geometry';\nimport assert from '../utils/assert';\n\nexport function getPositions(geometry) {\n  // If geometry, extract positions\n  if (isGeometry(geometry)) {\n    const {attributes} = geometry;\n    const position = attributes.POSITION || attributes.positions;\n    assert(position);\n    return position;\n  }\n\n  // If arraybuffer, assume 3 components\n  if (ArrayBuffer.isView(geometry)) {\n    return {values: geometry, size: 3};\n  }\n\n  // Else assume accessor object\n  if (geometry) {\n    assert(geometry.values);\n    return geometry;\n  }\n\n  return assert(false);\n}\n"],"file":"get-attribute-from-geometry.js"}