import _regeneratorRuntime from "@babel/runtime/regenerator";

var _marked = _regeneratorRuntime.mark(makeAttributeIterator);

export function makeAttributeIterator(_ref) {
  var values, size, ArrayType, element, i, j;
  return _regeneratorRuntime.wrap(function makeAttributeIterator$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          values = _ref.values, size = _ref.size;
          ArrayType = values.constructor;
          element = new ArrayType(size);
          i = 0;

        case 4:
          if (!(i < values.length)) {
            _context.next = 11;
            break;
          }

          for (j = 0; j < size; j++) {
            element[j] = element[i + j];
          }

          _context.next = 8;
          return element;

        case 8:
          i += size;
          _context.next = 4;
          break;

        case 11:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
//# sourceMappingURL=attribute-iterator.js.map