{"version":3,"sources":["../../../../src/geometry/primitives/modes.js"],"names":["getPrimitiveModeType","mode","GL","POINTS","LINES","LINE_STRIP","LINE_LOOP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","isPrimitiveModeExpandable","getPrimitiveModeExpandedLength","length"],"mappings":";;;;;;;;;;;AACA;;AACA;;AAGO,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;AACzC,UAAQA,IAAR;AACE,SAAKC,cAAGC,MAAR;AACE,aAAOD,cAAGC,MAAV;;AACF,SAAKD,cAAGE,KAAR;AACA,SAAKF,cAAGG,UAAR;AACA,SAAKH,cAAGI,SAAR;AACE,aAAOJ,cAAGE,KAAV;;AACF,SAAKF,cAAGK,SAAR;AACA,SAAKL,cAAGM,cAAR;AACA,SAAKN,cAAGO,YAAR;AACE,aAAOP,cAAGK,SAAV;;AACF;AAEE,aAAO,wBAAO,KAAP,CAAP;AAbJ;AAeD;;AAGM,SAASG,yBAAT,CAAmCT,IAAnC,EAAyC;AAC9C,UAAQA,IAAR;AACE,SAAKC,cAAGG,UAAR;AACA,SAAKH,cAAGI,SAAR;AACA,SAAKJ,cAAGM,cAAR;AACA,SAAKN,cAAGO,YAAR;AACE,aAAO,IAAP;;AACF;AACE,aAAO,KAAP;AAPJ;AASD;;AAGM,SAASE,8BAAT,CAAwCV,IAAxC,EAA8CW,MAA9C,EAAsD;AAC3D,UAAQX,IAAR;AACE,SAAKC,cAAGC,MAAR;AACE,aAAOS,MAAP;;AACF,SAAKV,cAAGE,KAAR;AACE,aAAOQ,MAAP;;AACF,SAAKV,cAAGG,UAAR;AACE,aAAOO,MAAP;;AACF,SAAKV,cAAGI,SAAR;AACE,aAAOM,MAAM,GAAG,CAAhB;;AACF,SAAKV,cAAGK,SAAR;AACE,aAAOK,MAAP;;AACF,SAAKV,cAAGM,cAAR;AACA,SAAKN,cAAGO,YAAR;AACE,aAAO,CAACG,MAAM,GAAG,CAAV,IAAe,CAAtB;;AACF;AAEE,aAAO,wBAAO,KAAP,CAAP;AAhBJ;AAkBD","sourcesContent":["/** @typedef {import('./modes')} types */\nimport {GL} from '../constants';\nimport assert from '../utils/assert';\n\n/** @type {types['getPrimitiveModeType']} */\nexport function getPrimitiveModeType(mode) {\n  switch (mode) {\n    case GL.POINTS: // draw single points.\n      return GL.POINTS;\n    case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n    case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n      return GL.LINES;\n    case GL.TRIANGLES:\n    case GL.TRIANGLE_STRIP:\n    case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n      return GL.TRIANGLES;\n    default:\n      // @ts-ignore\n      return assert(false);\n  }\n}\n\n/** @type {types['isPrimitiveModeExpandable']} */\nexport function isPrimitiveModeExpandable(mode) {\n  switch (mode) {\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n    case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n    case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n    case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/** @type {types['getPrimitiveModeExpandedLength']} */\nexport function getPrimitiveModeExpandedLength(mode, length) {\n  switch (mode) {\n    case GL.POINTS: // draw single points.\n      return length;\n    case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n      return length;\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n      return length;\n    case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n      return length + 1;\n    case GL.TRIANGLES: // draw triangles. Each set of three vertices creates a separate triangle.\n      return length;\n    case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n    case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n      return (length - 2) * 3;\n    default:\n      // @ts-ignore\n      return assert(false);\n  }\n}\n"],"file":"modes.js"}