"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makePrimitiveIterator = makePrimitiveIterator;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _constants = require("../constants");

var _modes = require("../primitives/modes");

var _loaderUtils = require("@loaders.gl/loader-utils");

var _marked = _regenerator["default"].mark(makePrimitiveIterator);

function makePrimitiveIterator(_ref) {
  var indices, attributes, mode, _ref$start, start, end, info, i;

  return _regenerator["default"].wrap(function makePrimitiveIterator$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          indices = _ref.indices, attributes = _ref.attributes, mode = _ref.mode, _ref$start = _ref.start, start = _ref$start === void 0 ? 0 : _ref$start, end = _ref.end;

          if (indices) {
            indices = indices.values || indices.value || indices;
          }

          if (end === undefined) {
            end = indices ? indices.length : start;
          }

          info = {
            attributes: attributes,
            type: (0, _modes.getPrimitiveModeType)(mode),
            i1: 0,
            i2: 0,
            i3: 0
          };
          i = start;

        case 5:
          if (!(i < end)) {
            _context.next = 44;
            break;
          }

          _context.t0 = mode;
          _context.next = _context.t0 === _constants.GL.POINTS ? 9 : _context.t0 === _constants.GL.LINES ? 12 : _context.t0 === _constants.GL.LINE_STRIP ? 16 : _context.t0 === _constants.GL.LINE_LOOP ? 20 : _context.t0 === _constants.GL.TRIANGLES ? 24 : _context.t0 === _constants.GL.TRIANGLE_STRIP ? 29 : _context.t0 === _constants.GL.TRIANGLE_FAN ? 33 : 38;
          break;

        case 9:
          info.i1 = i;
          i += 1;
          return _context.abrupt("break", 39);

        case 12:
          info.i1 = i;
          info.i2 = i + 1;
          i += 2;
          return _context.abrupt("break", 39);

        case 16:
          info.i1 = i;
          info.i2 = i + 1;
          i += 1;
          return _context.abrupt("break", 39);

        case 20:
          info.i1 = i;
          info.i2 = i + 1;
          i += 1;
          return _context.abrupt("break", 39);

        case 24:
          info.i1 = i;
          info.i2 = i + 1;
          info.i3 = i + 2;
          i += 3;
          return _context.abrupt("break", 39);

        case 29:
          info.i1 = i;
          info.i2 = i + 1;
          i += 1;
          return _context.abrupt("break", 39);

        case 33:
          info.i1 = 1;
          info.i2 = i;
          info.i3 = i + 1;
          i += 1;
          return _context.abrupt("break", 39);

        case 38:
          (0, _loaderUtils.assert)(false);

        case 39:
          if (indices) {
            if ('i1' in info) {
              info.i1 = indices[info.i1];
              info.i2 = indices[info.i2];
              info.i3 = indices[info.i3];
            }
          }

          _context.next = 42;
          return info;

        case 42:
          _context.next = 5;
          break;

        case 44:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
//# sourceMappingURL=primitive-iterator.js.map