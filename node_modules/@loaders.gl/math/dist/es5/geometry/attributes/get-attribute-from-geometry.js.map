{"version":3,"sources":["../../../../src/geometry/attributes/get-attribute-from-geometry.js"],"names":["getPositions","geometry","attributes","position","POSITION","positions","ArrayBuffer","isView","values","size"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAErC,MAAI,4BAAWA,QAAX,CAAJ,EAA0B;AAAA,QACjBC,UADiB,GACHD,QADG,CACjBC,UADiB;AAExB,QAAMC,QAAQ,GAAGD,UAAU,CAACE,QAAX,IAAuBF,UAAU,CAACG,SAAnD;AACA,4BAAOF,QAAP;AACA,WAAOA,QAAP;AACD;;AAGD,MAAIG,WAAW,CAACC,MAAZ,CAAmBN,QAAnB,CAAJ,EAAkC;AAChC,WAAO;AAACO,MAAAA,MAAM,EAAEP,QAAT;AAAmBQ,MAAAA,IAAI,EAAE;AAAzB,KAAP;AACD;;AAGD,MAAIR,QAAJ,EAAc;AACZ,4BAAOA,QAAQ,CAACO,MAAhB;AACA,WAAOP,QAAP;AACD;;AAED,SAAO,wBAAO,KAAP,CAAP;AACD","sourcesContent":["import isGeometry from '../is-geometry';\nimport assert from '../utils/assert';\n\nexport function getPositions(geometry) {\n  // If geometry, extract positions\n  if (isGeometry(geometry)) {\n    const {attributes} = geometry;\n    const position = attributes.POSITION || attributes.positions;\n    assert(position);\n    return position;\n  }\n\n  // If arraybuffer, assume 3 components\n  if (ArrayBuffer.isView(geometry)) {\n    return {values: geometry, size: 3};\n  }\n\n  // Else assume accessor object\n  if (geometry) {\n    assert(geometry.values);\n    return geometry;\n  }\n\n  return assert(false);\n}\n"],"file":"get-attribute-from-geometry.js"}