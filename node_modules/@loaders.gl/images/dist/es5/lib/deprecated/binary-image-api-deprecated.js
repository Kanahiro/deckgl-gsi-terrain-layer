"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBinaryImage = isBinaryImage;
exports.getBinaryImageMIMEType = getBinaryImageMIMEType;
exports.getBinaryImageSize = getBinaryImageSize;

var _binaryImageApi = require("../category-api/binary-image-api");

function isBinaryImage(arrayBuffer, mimeType) {
  var metadata = (0, _binaryImageApi.getBinaryImageMetadata)(arrayBuffer);

  if (mimeType) {
    return Boolean(metadata && metadata.mimeType === mimeType);
  }

  return Boolean(metadata);
}

function getBinaryImageMIMEType(arrayBuffer) {
  var metadata = (0, _binaryImageApi.getBinaryImageMetadata)(arrayBuffer);
  return metadata ? metadata.mimeType : null;
}

function getBinaryImageSize(arrayBuffer) {
  var mimeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var metadata = (0, _binaryImageApi.getBinaryImageMetadata)(arrayBuffer);

  if (metadata) {
    return {
      width: metadata.width,
      height: metadata.height
    };
  }

  mimeType = mimeType || 'unknown';
  throw new Error("invalid image data for type: ".concat(mimeType));
}
//# sourceMappingURL=binary-image-api-deprecated.js.map