{"version":3,"sources":["../../../../src/lib/deprecated/binary-image-api-deprecated.js"],"names":["getBinaryImageMetadata","isBinaryImage","arrayBuffer","mimeType","metadata","Boolean","getBinaryImageMIMEType","getBinaryImageSize","width","height","Error"],"mappings":"AAAA,SAAQA,sBAAR,QAAqC,kCAArC;AAGA,OAAO,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,QAApC,EAA8C;AACnD,MAAMC,QAAQ,GAAGJ,sBAAsB,CAACE,WAAD,CAAvC;;AACA,MAAIC,QAAJ,EAAc;AACZ,WAAOE,OAAO,CAACD,QAAQ,IAAIA,QAAQ,CAACD,QAAT,KAAsBA,QAAnC,CAAd;AACD;;AAED,SAAOE,OAAO,CAACD,QAAD,CAAd;AACD;AAGD,OAAO,SAASE,sBAAT,CAAgCJ,WAAhC,EAA6C;AAClD,MAAME,QAAQ,GAAGJ,sBAAsB,CAACE,WAAD,CAAvC;AACA,SAAOE,QAAQ,GAAGA,QAAQ,CAACD,QAAZ,GAAuB,IAAtC;AACD;AAED,OAAO,SAASI,kBAAT,CAA4BL,WAA5B,EAA0D;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;AAC/D,MAAMC,QAAQ,GAAGJ,sBAAsB,CAACE,WAAD,CAAvC;;AAEA,MAAIE,QAAJ,EAAc;AACZ,WAAO;AACLI,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KADX;AAELC,MAAAA,MAAM,EAAEL,QAAQ,CAACK;AAFZ,KAAP;AAID;;AAEDN,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,SAAvB;AACA,QAAM,IAAIO,KAAJ,wCAA0CP,QAA1C,EAAN;AACD","sourcesContent":["import {getBinaryImageMetadata} from '../category-api/binary-image-api';\n\n// Supported image types are PNG, JPEG, GIF and BMP.\nexport function isBinaryImage(arrayBuffer, mimeType) {\n  const metadata = getBinaryImageMetadata(arrayBuffer);\n  if (mimeType) {\n    return Boolean(metadata && metadata.mimeType === mimeType);\n  }\n  // return true if any known type\n  return Boolean(metadata);\n}\n\n// Sniffs the contents of a file to attempt to deduce the image type\nexport function getBinaryImageMIMEType(arrayBuffer) {\n  const metadata = getBinaryImageMetadata(arrayBuffer);\n  return metadata ? metadata.mimeType : null;\n}\n\nexport function getBinaryImageSize(arrayBuffer, mimeType = null) {\n  const metadata = getBinaryImageMetadata(arrayBuffer);\n\n  if (metadata) {\n    return {\n      width: metadata.width,\n      height: metadata.height\n    };\n  }\n\n  mimeType = mimeType || 'unknown';\n  throw new Error(`invalid image data for type: ${mimeType}`);\n}\n"],"file":"binary-image-api-deprecated.js"}