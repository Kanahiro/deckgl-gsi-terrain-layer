{"version":3,"sources":["../../../../src/lib/extensions/KHR_lights_punctual.js"],"names":["decode","gltfData","options","gltfScenegraph","GLTFScenegraph","json","extension","getExtension","KHR_LIGHTS_PUNCTUAL","lights","removeExtension","nodes","node","nodeExtension","getObjectExtension","light","removeObjectExtension","encode","addExtension","addObjectExtension"],"mappings":";;;;;;;;;;AAGA;;AACA;;AACA;;;;;;;;AAEO,SAASA,MAAT,CAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;AACxC,MAAMC,cAAc,GAAG,IAAIC,0BAAJ,CAAmBH,QAAnB,CAAvB;AADwC,MAEjCI,IAFiC,GAEzBF,cAFyB,CAEjCE,IAFiC;AAKxC,MAAMC,SAAS,GAAGH,cAAc,CAACI,YAAf,CAA4BC,kCAA5B,CAAlB;;AACA,MAAIF,SAAJ,EAAe;AAEbH,IAAAA,cAAc,CAACE,IAAf,CAAoBI,MAApB,GAA6BH,SAAS,CAACG,MAAvC;AACAN,IAAAA,cAAc,CAACO,eAAf,CAA+BF,kCAA/B;AACD;;AAVuC,6CAcrBH,IAAI,CAACM,KAAL,IAAc,EAdO;AAAA;;AAAA;AAcxC,wDAAqC;AAAA,UAA1BC,IAA0B;AACnC,UAAMC,aAAa,GAAGV,cAAc,CAACW,kBAAf,CAAkCF,IAAlC,EAAwCJ,kCAAxC,CAAtB;;AACA,UAAIK,aAAJ,EAAmB;AAEjBD,QAAAA,IAAI,CAACG,KAAL,GAAaF,aAAa,CAACE,KAA3B;AACD;;AACDZ,MAAAA,cAAc,CAACa,qBAAf,CAAqCJ,IAArC,EAA2CJ,kCAA3C;AACD;AArBuC;AAAA;AAAA;AAAA;AAAA;AAsBzC;;AAGM,SAASS,MAAT,CAAgBhB,QAAhB,EAA0BC,OAA1B,EAAmC;AACxC,MAAMC,cAAc,GAAG,IAAIC,0BAAJ,CAAmBH,QAAnB,CAAvB;AADwC,MAEjCI,IAFiC,GAEzBF,cAFyB,CAEjCE,IAFiC;;AAIxC,MAAIA,IAAI,CAACI,MAAT,EAAiB;AACf,QAAMH,SAAS,GAAGH,cAAc,CAACe,YAAf,CAA4BV,kCAA5B,CAAlB;AAEA,4BAAO,CAACF,SAAS,CAACG,MAAlB;AAEAH,IAAAA,SAAS,CAACG,MAAV,GAAmBJ,IAAI,CAACI,MAAxB;AACA,WAAOJ,IAAI,CAACI,MAAZ;AACD;;AAID,MAAIN,cAAc,CAACE,IAAf,CAAoBI,MAAxB,EAAgC;AAAA,gDACVN,cAAc,CAACE,IAAf,CAAoBI,MADV;AAAA;;AAAA;AAC9B,6DAAgD;AAAA,YAArCM,KAAqC;AAC9C,YAAMH,IAAI,GAAGG,KAAK,CAACH,IAAnB;AACAT,QAAAA,cAAc,CAACgB,kBAAf,CAAkCP,IAAlC,EAAwCJ,kCAAxC,EAA6DO,KAA7D;AACD;AAJ6B;AAAA;AAAA;AAAA;AAAA;;AAK9B,WAAOZ,cAAc,CAACE,IAAf,CAAoBI,MAA3B;AACD;AACF","sourcesContent":["// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport assert from '../utils/assert';\nimport GLTFScenegraph from '../gltf-scenegraph';\nimport {KHR_LIGHTS_PUNCTUAL} from '../gltf-constants';\n\nexport function decode(gltfData, options) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport function encode(gltfData, options) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  if (gltfScenegraph.json.lights) {\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    delete gltfScenegraph.json.lights;\n  }\n}\n"],"file":"KHR_lights_punctual.js"}