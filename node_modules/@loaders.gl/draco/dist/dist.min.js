!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)("object"==typeof exports?exports:t)[n]=r[n]}}(window,(function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=3)}([function(t,e,r){"use strict";(function(t,n){r.d(e,"a",(function(){return a})),r.d(e,"b",(function(){return i})),r.d(e,"c",(function(){return s}));const o={self:"undefined"!=typeof self&&self,window:"undefined"!=typeof window&&window,global:void 0!==t&&t,document:"undefined"!=typeof document&&document},a=o.global||o.self||o.window,i="object"!=typeof n||"[object process]"!==String(n)||n.browser,s="function"==typeof importScripts,c=void 0!==n&&n.version&&n.version.match(/v([0-9]*)/);c&&parseFloat(c[1])}).call(this,r(2),r(5))},function(t,e){},function(t,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(t){"object"==typeof window&&(r=window)}t.exports=r},function(t,e,r){(function(e){const n=r(6),o="undefined"==typeof window?e:window;o.loaders=o.loaders||{},t.exports=Object.assign(o.loaders,n)}).call(this,r(2))},,function(t,e){var r,n,o=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function s(t){if(r===setTimeout)return setTimeout(t,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(t,0);try{return r(t,0)}catch(e){try{return r.call(null,t,0)}catch(e){return r.call(this,t,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:a}catch(t){r=a}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(t){n=i}}();var c,d=[],u=!1,l=-1;function h(){u&&c&&(u=!1,c.length?d=c.concat(d):l=-1,d.length&&f())}function f(){if(!u){var t=s(h);u=!0;for(var e=d.length;e;){for(c=d,d=[];++l<e;)c&&c[l].run();l=-1,e=d.length}c=null,u=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function y(t,e){this.fun=t,this.array=e}function b(){}o.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];d.push(new y(t,e)),1!==d.length||u||s(f)},y.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=b,o.addListener=b,o.once=b,o.off=b,o.removeListener=b,o.removeAllListeners=b,o.emit=b,o.prependListener=b,o.prependOnceListener=b,o.listeners=function(t){return[]},o.binding=function(t){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(t,e,r){"use strict";r.r(e),r.d(e,"DracoLoader",(function(){return p})),r.d(e,"DracoWorkerLoader",(function(){return A})),r.d(e,"DracoWriter",(function(){return I}));var n=r(0),o=r(1);const a={};async function i(t,e=null,r={}){return e&&(t=function(t,e,r){const o=r.modules||{};if(o[t])return o[t];if(!n.b)return`modules/${e}/dist/libs/${t}`;if(r.CDN)return function(t,e){if(!t)throw new Error(e||"loader assertion failed.")}(r.CDN.startsWith("http")),`${r.CDN}/${e}@2.3.1/dist/libs/${t}`;if(n.c)return"../src/libs/"+t;return`modules/${e}/src/libs/${t}`}(t,e,r)),a[t]=a[t]||async function(t){if(t.endsWith("wasm")){const e=await fetch(t);return await e.arrayBuffer()}if(!n.b)return o.requireFromFile&&o.requireFromFile(t);if(n.c)return importScripts(t);const e=await fetch(t);return function(t,e){if(!n.b)return o.requireFromString&&o.requireFromString(t,e);if(n.c)return eval.call(n.a,t),null;const r=document.createElement("script");r.id=e;try{r.appendChild(document.createTextNode(t))}catch(e){r.text=t}return document.body.appendChild(r),null}(await e.text(),t)}(t),await a[t]}let s,c;async function d(t){const e=t.modules||{};return s=e.draco3d?s||new Promise(t=>{const r=e.draco3d.createDecoderModule({onModuleLoaded(){t({draco:r})}})}):s||async function(t){let e,r;switch(t.draco&&t.draco.decoderType){case"js":e=await i("draco_decoder.js","draco",t);break;case"wasm":default:[e,r]=await Promise.all([await i("draco_wasm_wrapper.js","draco",t),await i("draco_decoder.wasm","draco",t)])}return e=e||n.a.DracoDecoderModule,await function(t,e){const r={};e&&(r.wasmBinary=e);return new Promise(e=>{t({...r,onModuleLoaded:t=>e({draco:t})})})}(e,r)}(t),await s}async function u(t){const e=t.modules||{};return c=e.draco3d?c||new Promise(t=>{const r=e.draco3d.createEncoderModule({onModuleLoaded(){t({draco:r})}})}):c||async function(t){let e=await i("draco_encoder.js","draco",t);return e=e||n.a.DracoEncoderModule,new Promise(t=>{e({onModuleLoaded:e=>t({draco:e})})})}(t),await c}function l(t){if(!t||!t.POSITION)return null;let e=1/0,r=1/0,n=1/0,o=-1/0,a=-1/0,i=-1/0;const s=t.POSITION.value,c=s&&s.length;if(!c)return null;for(let t=0;t<c;t+=3){const c=s[t],d=s[t+1],u=s[t+2];e=c<e?c:e,r=d<r?d:r,n=u<n?u:n,o=c>o?c:o,a=d>a?d:a,i=u>i?u:i}return[[e,r,n],[o,a,i]]}const h=0,f=1,y={POSITION:"POSITION",NORMAL:"NORMAL",COLOR:"COLOR_0",TEX_COORD:"TEXCOORD_0"},b={1:Int8Array,2:Uint8Array,3:Int16Array,4:Uint16Array,5:Int32Array,6:Uint32Array,9:Float32Array};class m{constructor(t){this.draco=t,this.drawMode="TRIANGLE",this.metadataQuerier={}}destroy(){}destroyGeometry(t){t&&this.draco.destroy(t.dracoGeometry)}parseSync(t,e={}){this.metadataQuerier=new this.draco.MetadataQuerier;const r=new this.draco.DecoderBuffer;r.Init(new Int8Array(t),t.byteLength);const n=new this.draco.Decoder,o={};let a,i,s;try{const t=n.GetEncodedGeometryType(r);switch(t){case this.draco.TRIANGULAR_MESH:i=new this.draco.Mesh,a=n.DecodeBufferToMesh(r,i),s={type:h,faceCount:i.num_faces(),attributeCount:i.num_attributes(),vertexCount:i.num_points()};break;case this.draco.POINT_CLOUD:i=new this.draco.PointCloud,a=n.DecodeBufferToPointCloud(r,i),s={type:f,attributeCount:i.num_attributes(),vertexCount:i.num_points()};break;default:throw new Error("Unknown DRACO geometry type.")}if(!a.ok()||!i.ptr){const t="DRACO decompression failed: "+a.error_msg();throw i&&this.draco.destroy(i),new Error(t)}o.loaderData={header:s},this._extractDRACOGeometry(n,i,t,o,e);const c=this._getGeometryMetadata(n,i);o.header={vertexCount:s.vertexCount,boundingBox:l(o.attributes),metadata:c}}finally{this.draco.destroy(n),this.draco.destroy(r),this.draco.destroy(i),this.draco.destroy(this.metadataQuerier)}return o}_extractDRACOGeometry(t,e,r,n,o){const a=this._getAttributes(t,e,o);if(!a.POSITION)throw new Error("DRACO decompressor: No position attribute found.");return r===this.draco.TRIANGULAR_MESH?(a.indices="TRIANGLE_STRIP"===this.drawMode?this._getMeshStripIndices(t,e):this._getMeshFaceIndices(t,e),n.mode="TRIANGLE_STRIP"===this.drawMode?5:4):n.mode=0,a.indices&&(n.indices={value:a.indices,size:1},delete a.indices),n.attributes=a,n}getPositionAttributeMetadata(t){this.metadata=this.metadata||{},this.metadata.attributes=this.metadata.attributes||{};const e=new this.draco.AttributeQuantizationTransform;if(e.InitFromAttribute(t)){this.metadata.attributes.position.isQuantized=!0,this.metadata.attributes.position.maxRange=e.range(),this.metadata.attributes.position.numQuantizationBits=e.quantization_bits(),this.metadata.attributes.position.minValues=new Float32Array(3);for(let t=0;t<3;++t)this.metadata.attributes.position.minValues[t]=e.min_value(t)}this.draco.destroy(e)}_getAttributes(t,e,r){const n={},o=e.num_points();for(let a=0;a<e.num_attributes();a++){const i=t.GetAttribute(e,a),s=this._getAttributeMetadata(t,e,a),c={uniqueId:i.unique_id(),attributeType:i.attribute_type(),dataType:b[i.data_type()],size:i.size(),numComponents:i.num_components(),byteOffset:i.byte_offset(),byteStride:i.byte_stride(),normalized:i.normalized(),metadata:s},d=this._deduceAttributeName(c,r),{typedArray:u}=this._getAttributeTypedArray(t,e,i,d);n[d]={value:u,size:u.length/o,metadata:s}}return n}_getMeshFaceIndices(t,e){const r=e.num_faces(),n=new Uint32Array(3*r),o=new this.draco.DracoInt32Array;for(let a=0;a<r;++a){t.GetFaceFromMesh(e,a,o);const r=3*a;n[r]=o.GetValue(0),n[r+1]=o.GetValue(1),n[r+2]=o.GetValue(2)}return this.draco.destroy(o),n}_getMeshStripIndices(t,e){const r=new this.draco.DracoInt32Array;t.GetTriangleStripsFromMesh(e,r);const n=new Uint32Array(r.size());for(let t=0;t<r.size();++t)n[t]=r.GetValue(t);return this.draco.destroy(r),n}_getAttributeTypedArray(t,e,r,n){if(0===r.ptr){throw new Error("DRACO decode bad attribute "+n)}const o=b[r.data_type()],a=r.num_components(),i=e.num_points()*a;let s,c;switch(o){case Float32Array:s=new this.draco.DracoFloat32Array,t.GetAttributeFloatForAllPoints(e,r,s),c=new Float32Array(i);break;case Int8Array:s=new this.draco.DracoInt8Array,t.GetAttributeInt8ForAllPoints(e,r,s),c=new Int8Array(i);break;case Int16Array:s=new this.draco.DracoInt16Array,t.GetAttributeInt16ForAllPoints(e,r,s),c=new Int16Array(i);break;case Int32Array:s=new this.draco.DracoInt32Array,t.GetAttributeInt32ForAllPoints(e,r,s),c=new Int32Array(i);break;case Uint8Array:s=new this.draco.DracoUInt8Array,t.GetAttributeUInt8ForAllPoints(e,r,s),c=new Uint8Array(i);break;case Uint16Array:s=new this.draco.DracoUInt16Array,t.GetAttributeUInt16ForAllPoints(e,r,s),c=new Uint16Array(i);break;case Uint32Array:s=new this.draco.DracoUInt32Array,t.GetAttributeUInt32ForAllPoints(e,r,s),c=new Uint32Array(i);break;default:throw new Error("DRACO decoder: unexpected attribute type.")}for(let t=0;t<i;t++)c[t]=s.GetValue(t);return this.draco.destroy(s),{typedArray:c,components:a}}_deduceAttributeName(t,e){const{extraAttributes:r={}}=e;if(r&&"object"==typeof r)for(const[e,n]of Object.entries(r))if(n===t.uniqueId)return e;for(const e in y){const r=this.draco[e];if(t.attributeType===r)return y[e]}if(t.metadata){const r=e.attributeNameEntry||"name";if(t.metadata[r])return t.metadata[r].string}return"CUSTOM_ATTRIBUTE_"+t.uniqueId}_getGeometryMetadata(t,e){const r=t.GetMetadata(e);return this._queryDracoMetadata(r)}_getAttributeMetadata(t,e,r){const n=t.GetAttributeMetadata(e,r);return this._queryDracoMetadata(n)}_queryDracoMetadata(t){if(!t||!t.ptr)return{};const e={},r=this.metadataQuerier.NumEntries(t);for(let n=0;n<r;n++){const r=this.metadataQuerier.GetEntryName(t,n);e[r]={int:this.metadataQuerier.GetIntEntry(t,r),string:this.metadataQuerier.GetStringEntry(t,r),double:this.metadataQuerier.GetDoubleEntry(t,r),intArray:this.metadataQuerier.GetIntEntryArray(t,r)}}return e}decode(t,e){return this.parseSync(t,e)}}const A={id:"draco",name:"Draco",version:"2.3.1",extensions:["drc"],mimeTypes:["application/octet-stream"],binary:!0,tests:["DRACO"],options:{draco:{decoderType:"object"==typeof WebAssembly?"wasm":"js",libraryPath:"libs/",workerUrl:"https://unpkg.com/@loaders.gl/draco@2.3.1/dist/draco-loader.worker.js",localWorkerUrl:"modules/draco/dist/draco-loader.worker.dev.js",extraAttributes:{}}}},p={...A,parse:async function(t,e,r,n){const{draco:o}=await d(e),a=new m(o);try{return a.parseSync(t,{extraAttributes:e.draco&&e.draco.extraAttributes||null,...e.parseOptions||{}})}finally{a.destroy()}}};const w={POSITION:"POSITION",NORMAL:"NORMAL",COLOR_0:"COLOR",TEXCOORD_0:"TEX_COORD"};function _(){}class M{constructor(t,e={}){this.draco=t,this.dracoEncoder=new this.draco.Encoder,this.dracoMeshBuilder=new this.draco.MeshBuilder,this.dracoMetadataBuilder=new this.draco.MetadataBuilder,this.log=e.log||_}destroy(){this.destroyEncodedObject(this.dracoMeshBuilder),this.destroyEncodedObject(this.dracoEncoder),this.destroyEncodedObject(this.dracoMetadataBuilder),this.dracoMeshBuilder=null,this.dracoEncoder=null,this.draco=null}destroyEncodedObject(t){t&&this.draco.destroy(t)}encodeSync(t,e={}){return this._setOptions(e),e.pointcloud?this._encodePointCloud(t,e):this._encodeMesh(t,e)}_getAttributesFromMesh(t){const e={...t,...t.attributes};return t.indices&&(e.indices=t.indices),e}_encodePointCloud(t,e){const r=new this.draco.PointCloud;e.metadata&&this._addGeometryMetadata(r,e.metadata);const n=this._getAttributesFromMesh(t);this._createDracoPointCloud(r,n,e);const o=new this.draco.DracoInt8Array;try{const t=this.dracoEncoder.EncodePointCloudToDracoBuffer(r,!1,o);if(!(t>0))throw new Error("Draco encoding failed.");return this.log(`DRACO encoded ${r.num_points()} points\n        with ${r.num_attributes()} attributes into ${t} bytes`),O(o)}finally{this.destroyEncodedObject(o),this.destroyEncodedObject(r)}}_encodeMesh(t,e){const r=new this.draco.Mesh;e.metadata&&this._addGeometryMetadata(r,e.metadata);const n=this._getAttributesFromMesh(t);this._createDracoMesh(r,n,e);const o=new this.draco.DracoInt8Array;try{const t=this.dracoEncoder.EncodeMeshToDracoBuffer(r,o);if(t<=0)throw new Error("Draco encoding failed.");return this.log(`DRACO encoded ${r.num_points()} points\n        with ${r.num_attributes()} attributes into ${t} bytes`),O(o)}finally{this.destroyEncodedObject(o),this.destroyEncodedObject(r)}}_setOptions(t){if("speed"in t&&this.dracoEncoder.SetSpeedOptions(...t.speed),"method"in t){const e=this.draco[t.method];this.dracoEncoder.SetEncodingMethod(e)}if("quantization"in t)for(const e in t.quantization){const r=t.quantization[e],n=this.draco[e];this.dracoEncoder.SetAttributeQuantization(n,r)}}_createDracoMesh(t,e,r){const n=r.attributesMetadata||{};try{const r=this._getPositionAttribute(e);if(!r)throw new Error("positions");const o=r.length/3;for(let r in e){const a=e[r];r=w[r]||r;const i=this._addAttributeToMesh(t,r,a,o);-1!==i&&this._addAttributeMetadata(t,i,{name:r,...n[r]||{}})}}catch(e){throw this.destroyEncodedObject(t),e}return t}_createDracoPointCloud(t,e,r){const n=r.attributesMetadata||{};try{const r=this._getPositionAttribute(e);if(!r)throw new Error("positions");const o=r.length/3;for(let r in e){const a=e[r];r=w[r]||r;const i=this._addAttributeToMesh(t,r,a,o);-1!==i&&this._addAttributeMetadata(t,i,{name:r,...n[r]||{}})}}catch(e){throw this.destroyEncodedObject(t),e}return t}_addAttributeToMesh(t,e,r,n){if(!ArrayBuffer.isView(r))return-1;const o=this._getDracoAttributeType(e),a=r.length/n;if("indices"===o){const n=r.length/3;return this.log(`Adding attribute ${e}, size ${n}`),this.dracoMeshBuilder.AddFacesToMesh(t,n,r),-1}this.log(`Adding attribute ${e}, size ${a}`);const i=this.dracoMeshBuilder,{buffer:s}=r;switch(r.constructor){case Int8Array:return i.AddInt8Attribute(t,o,n,a,new Int8Array(s));case Int16Array:return i.AddInt16Attribute(t,o,n,a,new Int16Array(s));case Int32Array:return i.AddInt32Attribute(t,o,n,a,new Int32Array(s));case Uint8Array:case Uint8ClampedArray:return i.AddUInt8Attribute(t,o,n,a,new Uint8Array(s));case Uint16Array:return i.AddUInt16Attribute(t,o,n,a,new Uint16Array(s));case Uint32Array:return i.AddUInt32Attribute(t,o,n,a,new Uint32Array(s));case Float32Array:default:return i.AddFloatAttribute(t,o,n,a,new Float32Array(s))}}_getDracoAttributeType(t){switch(t.toLowerCase()){case"indices":return"indices";case"position":case"positions":case"vertices":return this.draco.POSITION;case"normal":case"normals":return this.draco.NORMAL;case"color":case"colors":return this.draco.COLOR;case"texCoord":case"texCoords":return this.draco.TEX_COORD;default:return this.draco.GENERIC}}_getPositionAttribute(t){for(const e in t){const r=t[e];if(this._getDracoAttributeType(e)===this.draco.POSITION)return r}return null}_addGeometryMetadata(t,e){const r=new this.draco.Metadata;this._populateDracoMetadata(r,e),this.dracoMeshBuilder.AddMetadata(t,r)}_addAttributeMetadata(t,e,r){const n=new this.draco.Metadata;this._populateDracoMetadata(n,r),this.dracoMeshBuilder.SetMetadataForAttribute(t,e,n)}_populateDracoMetadata(t,e){for(const[n,o]of(r=e).entries&&!r.hasOwnProperty("entries")?r.entries():Object.entries(r))switch(typeof o){case"number":Math.trunc(o)===o?this.dracoMetadataBuilder.AddIntEntry(t,n,o):this.dracoMetadataBuilder.AddDoubleEntry(t,n,o);break;case"string":default:this.dracoMetadataBuilder.AddStringEntry(t,n,o)}var r}}function O(t){const e=t.size(),r=new ArrayBuffer(e),n=new Int8Array(r);for(let r=0;r<e;++r)n[r]=t.GetValue(r);return r}var I={name:"DRACO",extensions:["drc"],encode:async function(t,e){const r=e&&e.draco||e||{},{draco:n}=await u(e||{}),o=new M(n);try{return o.encodeSync(t,r)}finally{o.destroy()}},options:{draco:{pointcloud:!1}}}}])}));