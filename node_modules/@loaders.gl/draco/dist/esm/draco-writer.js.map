{"version":3,"sources":["../../src/draco-writer.js"],"names":["loadDracoEncoderModule","DRACOBuilder","name","extensions","encode","options","draco","pointcloud","data","dracoOptions","dracoBuilder","encodeSync","destroy"],"mappings":";;AAAA,SAAQA,sBAAR,QAAqC,2BAArC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,OADO;AAEbC,EAAAA,UAAU,EAAE,CAAC,KAAD,CAFC;AAGbC,EAAAA,MAAM,EAANA,MAHa;AAIbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AADP;AADA;AAJI,CAAf;;SAiBeH,M;;;;;uDAAf,iBAAsBI,IAAtB,EAA4BH,OAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEQI,YAAAA,YAFR,GAEwBJ,OAAO,IAAIA,OAAO,CAACC,KAApB,IAA8BD,OAA9B,IAAyC,EAFhE;AAAA;AAAA,mBAKwBL,sBAAsB,CAACK,OAAO,IAAI,EAAZ,CAL9C;;AAAA;AAAA;AAKSC,YAAAA,KALT,yBAKSA,KALT;AAMQI,YAAAA,YANR,GAMuB,IAAIT,YAAJ,CAAiBK,KAAjB,CANvB;AAAA;AAAA,6CASWI,YAAY,CAACC,UAAb,CAAwBH,IAAxB,EAA8BC,YAA9B,CATX;;AAAA;AAAA;AAWIC,YAAAA,YAAY,CAACE,OAAb;AAXJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {loadDracoEncoderModule} from './lib/draco-module-loader';\nimport DRACOBuilder from './lib/draco-builder';\n\nexport default {\n  name: 'DRACO',\n  extensions: ['drc'],\n  encode,\n  options: {\n    draco: {\n      pointcloud: false // Set to true if pointcloud (mode: 0, no indices)\n      // Draco Compression Parameters\n      // method: 'MESH_EDGEBREAKER_ENCODING',\n      // speed: [5, 5],\n      // quantization: {\n      //   POSITION: 10\n      // }\n    }\n  }\n};\n\nasync function encode(data, options) {\n  // DEPRECATED - remove support for options\n  const dracoOptions = (options && options.draco) || options || {};\n\n  // Dynamically load draco\n  const {draco} = await loadDracoEncoderModule(options || {});\n  const dracoBuilder = new DRACOBuilder(draco);\n\n  try {\n    return dracoBuilder.encodeSync(data, dracoOptions);\n  } finally {\n    dracoBuilder.destroy();\n  }\n}\n"],"file":"draco-writer.js"}