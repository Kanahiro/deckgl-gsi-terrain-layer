{"version":3,"sources":["../../../src/tileset/tile-3d.js"],"names":["Vector3","Matrix4","CullingVolume","load","assert","path","TILE_REFINEMENT","TILE_CONTENT_STATE","TILESET_TYPE","createBoundingVolume","getTiles3DScreenSpaceError","getI3ScreenSize","scratchVector","defined","x","undefined","TileHeader","constructor","tileset","header","parentHeader","id","url","parent","refine","_getRefine","type","contentUrl","lodMetricType","lodMetricValue","boundingVolume","content","contentState","UNLOADED","gpuMemoryUsageInBytes","children","depth","_cacheNode","_frameNumber","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","_lodJudge","_expireDate","_expiredContent","_getPriority","bind","Object","seal","destroy","isDestroyed","selected","_selectedFrame","isVisible","_visible","isVisibleAndInRequestVolume","_inRequestVolume","hasRenderContent","hasEmptyContent","hasTilesetContent","hasChildren","length","contentReady","READY","contentAvailable","Boolean","contentFailed","hasUnloadedContent","contentUnloaded","contentExpired","EXPIRED","FAILED","getScreenSpaceError","frameState","useParentLodMetric","I3S","TILES3D","console","error","Math","max","_priority","loadContent","expired","LOADING","requestToken","_requestScheduler","scheduleRequest","getTileUrl","fetchOptions","loader","options","tile","isTileset","isTileHeader","assetGltfUpAxis","asset","gltfUpAxis","_isTileset","_initializeTileHeaders","dirname","_onContentLoaded","done","unloadContent","updateVisibility","frameNumber","parentTransform","computedTransform","modelMatrix","parentVisibilityPlaneMask","_visibilityPlaneMask","MASK_INDETERMINATE","_updateTransform","_distanceToCamera","distanceToTile","_screenSpaceError","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","contentVisibility","sqrt","distanceSquaredTo","camera","position","cameraSpaceZDepth","subVectors","center","direction","dot","viewerRequestVolume","_viewerRequestVolume","distanceToCamera","warn","tileHeader","transform","clone","multiplyRight","parentInitialTransform","_initialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","level","_shouldRefine","_centerZDepth","_stackLength","_selectionDepth","_touchedFrame","_visitedFrame","_requestedFrame","REPLACE","indexOf","traverser","disableSkipLevelOfDetail","didTransformChange","equals","updateExpiration","now","Date","lessThan","extras"],"mappings":"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","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\nimport {assert, path} from '@loaders.gl/loader-utils';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {createBoundingVolume} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getI3ScreenSize} from './helpers/i3s-lod';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n// A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n// the content is loaded on-demand when needed based on the view.\n// Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\nexport default class TileHeader {\n  // eslint-disable-next-line max-statements\n  constructor(tileset, header, parentHeader) {\n    assert(typeof header === 'object');\n\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = header.id;\n    this.url = header.url;\n    // This tile's parent or `undefined` if this tile is the root.\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n    // The error, in meters, introduced if this tile is rendered and its children are not.\n    this.lodMetricType = null;\n    this.lodMetricValue = null;\n    // Specifies the type of refine that is used when traversing this tile for rendering.\n    this.boundingVolume = null;\n    // The tile's content.  This represents the actual tile's payload,\n    // not the content's metadata in the tileset JSON file.\n    this.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    this.gpuMemoryUsageInBytes = 0;\n    // The tile's children - an array of Tile3D objects.\n    this.children = [];\n\n    this.depth = 0;\n\n    // PRIVATE MEMBERS\n    this._cacheNode = null;\n    this._frameNumber = null;\n    this._cacheNode = null;\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    // TODO i3s specific, needs to remove\n    this._lodJudge = null;\n\n    // TODO Cesium 3d tiles specific\n    this._expireDate = null;\n    this._expiredContent = null;\n\n    this._getPriority = this._getPriority.bind(this);\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  // Returns true if tile is not an empty tile and not an external tileset\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  // Determines if the tile's content is ready. This is automatically `true` for\n  // tile's with empty content.\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  // Determines if the tile has available content to render.  `true` if the tile's\n  // content is ready or if it has expired content this renders while new content loads; otherwise,\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  // Returns true if tile has renderable content but it's unloaded\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  // Determines if the tile's content has not be requested. `true` if tile's\n  // content has not be requested; otherwise, `false`.\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  // Determines if the tile's content is expired. `true` if tile's\n  // content is expired; otherwise, `false`.\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  // Get the tile's screen space error.\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getI3ScreenSize(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        console.error('Unsupported tileset type');\n        return null;\n    }\n  }\n\n  _getPriority() {\n    // Check if any reason to abort\n    if (!this.isVisible) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    return Math.max(1e7 - this._priority, 0) || 0;\n  }\n\n  // Requests the tile's content.\n  // The request may not be made if the Request Scheduler can't prioritize it.\n  // eslint-disable-next-line max-statements\n  async loadContent() {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const fetchOptions = this.tileset.fetchOptions;\n      const loader = this.tileset.loader;\n      const options = {\n        ...fetchOptions,\n        [loader.id]: {\n          tile: this.header,\n          tileset: this.tileset.tileset,\n          isTileset: 'auto',\n          isTileHeader: false,\n          assetGltfUpAxis: this.tileset.asset.gltfUpAxis\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this, path.dirname(this.contentUrl));\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  // Update the tile's visibility.\n  updateVisibility(frameState) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    this._updateTransform(parentTransform);\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._priority = this.lodMetricValue;\n    this._frameNumber = frameState.frameNumber;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility(frameState) {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  // Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n  distanceToTile(frameState) {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  // Computes the tile's camera-space z-depth.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Number} The distance, in meters.\n  cameraSpaceZDepth({camera}) {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return !viewerRequestVolume || viewerRequestVolume.distanceToCamera(frameState) === 0.0;\n  }\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        `3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue`\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level;\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = false;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        this.tileset.traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // TODO Cesium specific\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n}\n"],"file":"tile-3d.js"}