{"version":3,"sources":["../../../../src/tileset/helpers/zoom.js"],"names":["Vector3","WGS84_RADIUS_X","WGS84_RADIUS_Y","WGS84_RADIUS_Z","scratchVector","getZoomFromBoundingVolume","boundingVolume","halfAxes","radius","width","height","getColumn","x","len","y","z","halfX","halfY","halfZ","zoomX","Math","log2","zoomY","zoomZ"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AAEA,MAAMC,cAAc,GAAG,SAAvB;AACA,MAAMC,cAAc,GAAG,SAAvB;AACA,MAAMC,cAAc,GAAG,kBAAvB;AAEA,MAAMC,aAAa,GAAG,IAAIJ,OAAJ,EAAtB;AAEA,OAAO,SAASK,yBAAT,CAAmCC,cAAnC,EAAmD;AACxD,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAoCJ,cAA1C;;AAEA,MAAIC,QAAJ,EAAc;AAEZA,IAAAA,QAAQ,CAACI,SAAT,CAAmB,CAAnB,EAAsBP,aAAtB;AACA,UAAMQ,CAAC,GAAGR,aAAa,CAACS,GAAd,EAAV;AACAN,IAAAA,QAAQ,CAACI,SAAT,CAAmB,CAAnB,EAAsBP,aAAtB;AACA,UAAMU,CAAC,GAAGV,aAAa,CAACS,GAAd,EAAV;AACAN,IAAAA,QAAQ,CAACI,SAAT,CAAmB,CAAnB,EAAsBP,aAAtB;AACA,UAAMW,CAAC,GAAGX,aAAa,CAACS,GAAd,EAAV;AAEA,UAAMG,KAAK,GAAGJ,CAAC,GAAG,CAAlB;AACA,UAAMK,KAAK,GAAGH,CAAC,GAAG,CAAlB;AACA,UAAMI,KAAK,GAAGH,CAAC,GAAG,CAAlB;AAEA,UAAMI,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUpB,cAAc,GAAGe,KAA3B,CAAd;AACA,UAAMM,KAAK,GAAGF,IAAI,CAACC,IAAL,CAAUnB,cAAc,GAAGe,KAA3B,CAAd;AACA,UAAMM,KAAK,GAAGH,IAAI,CAACC,IAAL,CAAUlB,cAAc,GAAGe,KAA3B,CAAd;AACA,WAAO,CAACC,KAAK,GAAGG,KAAR,GAAgBC,KAAjB,IAA0B,CAAjC;AACD,GAjBD,MAiBO,IAAIf,MAAJ,EAAY;AAEjB,WAAOY,IAAI,CAACC,IAAL,CAAUlB,cAAc,GAAGK,MAA3B,CAAP;AACD,GAHM,MAGA,IAAIE,MAAM,IAAID,KAAd,EAAqB;AAE1B,UAAMU,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUpB,cAAc,GAAGQ,KAA3B,CAAd;AACA,UAAMa,KAAK,GAAGF,IAAI,CAACC,IAAL,CAAUnB,cAAc,GAAGQ,MAA3B,CAAd;AAEA,WAAO,CAACS,KAAK,GAAGG,KAAT,IAAkB,CAAzB;AACD;;AAED,SAAO,CAAP;AACD","sourcesContent":["import {Vector3} from '@math.gl/core';\n\nconst WGS84_RADIUS_X = 6378137.0;\nconst WGS84_RADIUS_Y = 6378137.0;\nconst WGS84_RADIUS_Z = 6356752.3142451793;\n\nconst scratchVector = new Vector3();\n\nexport function getZoomFromBoundingVolume(boundingVolume) {\n  const {halfAxes, radius, width, height} = boundingVolume;\n\n  if (halfAxes) {\n    // OrientedBoundingBox\n    halfAxes.getColumn(0, scratchVector);\n    const x = scratchVector.len();\n    halfAxes.getColumn(1, scratchVector);\n    const y = scratchVector.len();\n    halfAxes.getColumn(2, scratchVector);\n    const z = scratchVector.len();\n\n    const halfX = x / 2;\n    const halfY = y / 2;\n    const halfZ = z / 2;\n\n    const zoomX = Math.log2(WGS84_RADIUS_X / halfX);\n    const zoomY = Math.log2(WGS84_RADIUS_Y / halfY);\n    const zoomZ = Math.log2(WGS84_RADIUS_Z / halfZ);\n    return (zoomX + zoomY + zoomZ) / 3;\n  } else if (radius) {\n    // BoundingSphere\n    return Math.log2(WGS84_RADIUS_Z / radius);\n  } else if (height && width) {\n    // BoundingRectangle\n    const zoomX = Math.log2(WGS84_RADIUS_X / width);\n    const zoomY = Math.log2(WGS84_RADIUS_Y / height);\n\n    return (zoomX + zoomY) / 2;\n  }\n\n  return 1;\n}\n"],"file":"zoom.js"}