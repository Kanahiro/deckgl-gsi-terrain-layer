{"version":3,"sources":["../../../../src/tileset/helpers/transform-utils.js"],"names":["Ellipsoid","Matrix4","Vector3","assert","calculateTransformProps","tileHeader","tile","rtcCenter","gltfUpAxis","computedTransform","center","boundingVolume","modelMatrix","translate","rotationY","rotateX","Math","PI","multiplyRight","rotationX","rotateY","isQuantized","quantizedVolumeOffset","scale","quantizedVolumeScale","cartesianOrigin","cartesianModelMatrix","cartographicOrigin","WGS84","cartesianToCartographic","fromFixedFrameMatrix","eastNorthUpToFixedFrame","toFixedFrameMatrix","invert","cartographicModelMatrix"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,qBAAxB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,eAA/B;AACA,SAAQC,MAAR,QAAqB,0BAArB;AAEA,OAAO,SAASC,uBAAT,CAAiCC,UAAjC,EAA6CC,IAA7C,EAAmD;AACxDH,EAAAA,MAAM,CAACE,UAAD,CAAN;AACAF,EAAAA,MAAM,CAACG,IAAD,CAAN;AAFwD,MAIjDC,SAJiD,GAIxBD,IAJwB,CAIjDC,SAJiD;AAAA,MAItCC,UAJsC,GAIxBF,IAJwB,CAItCE,UAJsC;AAAA,MAMtDC,iBANsD,GAQpDJ,UARoD,CAMtDI,iBANsD;AAAA,MAOrCC,MAPqC,GAQpDL,UARoD,CAOtDM,cAPsD,CAOrCD,MAPqC;AAUxD,MAAIE,WAAW,GAAG,IAAIX,OAAJ,CAAYQ,iBAAZ,CAAlB;;AAGA,MAAIF,SAAJ,EAAe;AACbK,IAAAA,WAAW,CAACC,SAAZ,CAAsBN,SAAtB;AACD;;AAID,UAAQC,UAAR;AACE,SAAK,GAAL;AACE;;AACF,SAAK,GAAL;AACE,UAAMM,SAAS,GAAG,IAAIb,OAAJ,GAAcc,OAAd,CAAsBC,IAAI,CAACC,EAAL,GAAU,CAAhC,CAAlB;AACAL,MAAAA,WAAW,GAAGA,WAAW,CAACM,aAAZ,CAA0BJ,SAA1B,CAAd;AACA;;AACF,SAAK,GAAL;AACE,UAAMK,SAAS,GAAG,IAAIlB,OAAJ,GAAcmB,OAAd,CAAsB,CAACJ,IAAI,CAACC,EAAN,GAAW,CAAjC,CAAlB;AACAL,MAAAA,WAAW,GAAGA,WAAW,CAACM,aAAZ,CAA0BC,SAA1B,CAAd;AACA;;AACF;AACE;AAZJ;;AAgBA,MAAIb,IAAI,CAACe,WAAT,EAAsB;AACpBT,IAAAA,WAAW,CAACC,SAAZ,CAAsBP,IAAI,CAACgB,qBAA3B,EAAkDC,KAAlD,CAAwDjB,IAAI,CAACkB,oBAA7D;AACD;;AAGD,MAAMC,eAAe,GAAG,IAAIvB,OAAJ,CAAYQ,MAAZ,CAAxB;AAEAJ,EAAAA,IAAI,CAACoB,oBAAL,GAA4Bd,WAA5B;AACAN,EAAAA,IAAI,CAACmB,eAAL,GAAuBA,eAAvB;AAGA,MAAME,kBAAkB,GAAG3B,SAAS,CAAC4B,KAAV,CAAgBC,uBAAhB,CACzBJ,eADyB,EAEzB,IAAIvB,OAAJ,EAFyB,CAA3B;AAIA,MAAM4B,oBAAoB,GAAG9B,SAAS,CAAC4B,KAAV,CAAgBG,uBAAhB,CAAwCN,eAAxC,CAA7B;AACA,MAAMO,kBAAkB,GAAGF,oBAAoB,CAACG,MAArB,EAA3B;AAEA3B,EAAAA,IAAI,CAAC4B,uBAAL,GAA+BF,kBAAkB,CAACd,aAAnB,CAAiCN,WAAjC,CAA/B;AACAN,EAAAA,IAAI,CAACqB,kBAAL,GAA0BA,kBAA1B;AAGArB,EAAAA,IAAI,CAACM,WAAL,GAAmBN,IAAI,CAAC4B,uBAAxB;AACD","sourcesContent":["import {Ellipsoid} from '@math.gl/geospatial';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function calculateTransformProps(tileHeader, tile) {\n  assert(tileHeader);\n  assert(tile);\n\n  const {rtcCenter, gltfUpAxis} = tile;\n  const {\n    computedTransform,\n    boundingVolume: {center}\n  } = tileHeader;\n\n  let modelMatrix = new Matrix4(computedTransform);\n\n  // Translate if appropriate\n  if (rtcCenter) {\n    modelMatrix.translate(rtcCenter);\n  }\n\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  switch (gltfUpAxis) {\n    case 'Z':\n      break;\n    case 'Y':\n      const rotationY = new Matrix4().rotateX(Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationY);\n      break;\n    case 'X':\n      const rotationX = new Matrix4().rotateY(-Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationX);\n      break;\n    default:\n      break;\n  }\n\n  // Scale/offset positions if normalized integers\n  if (tile.isQuantized) {\n    modelMatrix.translate(tile.quantizedVolumeOffset).scale(tile.quantizedVolumeScale);\n  }\n\n  // Option 1: Cartesian matrix and origin\n  const cartesianOrigin = new Vector3(center);\n\n  tile.cartesianModelMatrix = modelMatrix;\n  tile.cartesianOrigin = cartesianOrigin;\n\n  // Option 2: Cartographic matrix and origin\n  const cartographicOrigin = Ellipsoid.WGS84.cartesianToCartographic(\n    cartesianOrigin,\n    new Vector3()\n  );\n  const fromFixedFrameMatrix = Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin);\n  const toFixedFrameMatrix = fromFixedFrameMatrix.invert();\n\n  tile.cartographicModelMatrix = toFixedFrameMatrix.multiplyRight(modelMatrix);\n  tile.cartographicOrigin = cartographicOrigin;\n\n  // Deprecated, drop\n  tile.modelMatrix = tile.cartographicModelMatrix;\n}\n"],"file":"transform-utils.js"}