{"version":3,"sources":["../../../src/utils/managed-array.js"],"names":["assert","ManagedArray","length","_array","Array","_map","Map","_length","index","element","has","set","get","splice","undefined","target"],"mappings":"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","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport default class ManagedArray {\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._map = new Map();\n    this._length = length;\n  }\n\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n\n    this.length = length;\n  }\n\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n\n  find(target) {\n    return this._map.has(target);\n  }\n}\n"],"file":"managed-array.js"}