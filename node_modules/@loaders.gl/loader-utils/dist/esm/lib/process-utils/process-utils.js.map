{"version":3,"sources":["../../../../src/lib/process-utils/process-utils.js"],"names":["ChildProcess","getAvailablePort","defaultPort","Promise","resolve","reject","exec","error","stdout","stderr","portsInUse","regex","split","forEach","line","match","push","Number","port","includes"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AAIA,OAAO,SAASC,gBAAT,GAA8C;AAAA,MAApBC,WAAoB,uEAAN,IAAM;AACnD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEtCL,IAAAA,YAAY,CAACM,IAAb,CAAkB,6BAAlB,EAAiD,UAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AAC1E,UAAIF,KAAJ,EAAW;AAETH,QAAAA,OAAO,CAACF,WAAD,CAAP;AACA;AACD;;AAED,UAAMQ,UAAU,GAAG,EAAnB;AACA,UAAMC,KAAK,GAAG,mBAAd;AACAH,MAAAA,MAAM,CAACI,KAAP,CAAa,IAAb,EAAmBC,OAAnB,CAA2B,UAAAC,IAAI,EAAI;AACjC,YAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAd;;AACA,YAAII,KAAJ,EAAW;AACTL,UAAAA,UAAU,CAACM,IAAX,CAAgBC,MAAM,CAACF,KAAK,CAAC,CAAD,CAAN,CAAtB;AACD;AACF,OALD;AAMA,UAAIG,IAAI,GAAGhB,WAAX;;AACA,aAAOQ,UAAU,CAACS,QAAX,CAAoBD,IAApB,CAAP,EAAkC;AAChCA,QAAAA,IAAI;AACL;;AACDd,MAAAA,OAAO,CAACc,IAAD,CAAP;AACD,KApBD;AAqBD,GAvBM,CAAP;AAwBD","sourcesContent":["import ChildProcess from 'child_process';\n\n// Get an available port\n// Works on Unix systems\nexport function getAvailablePort(defaultPort = 3000) {\n  return new Promise((resolve, reject) => {\n    // Get a list of all ports in use\n    ChildProcess.exec('lsof -i -P -n | grep LISTEN', (error, stdout, stderr) => {\n      if (error) {\n        // likely no permission, e.g. CI\n        resolve(defaultPort);\n        return;\n      }\n\n      const portsInUse = [];\n      const regex = /:(\\d+) \\(LISTEN\\)/;\n      stdout.split('\\n').forEach(line => {\n        const match = line.match(regex);\n        if (match) {\n          portsInUse.push(Number(match[1]));\n        }\n      });\n      let port = defaultPort;\n      while (portsInUse.includes(port)) {\n        port++;\n      }\n      resolve(port);\n    });\n  });\n}\n"],"file":"process-utils.js"}