{"version":3,"sources":["../../../../src/lib/binary-utils/buffer-utils.js"],"names":["node","isBuffer","x","toBuffer","data","bufferToArrayBuffer","toArrayBuffer"],"mappings":"AACA,OAAO,KAAKA,IAAZ,MAAsB,2BAAtB;AAGA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AAC1B,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8BA,CAAC,CAACD,QAAvC;AACD;AAGD,OAAO,SAASE,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,SAAOJ,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACG,QAAL,CAAcC,IAAd,CAAhB,GAAsCA,IAA7C;AACD;AAGD,OAAO,SAASC,mBAAT,CAA6BD,IAA7B,EAAmC;AACxC,MAAIJ,IAAI,CAACM,aAAT,EAAwB;AAEtB,WAAON,IAAI,CAACM,aAAL,CAAmBF,IAAnB,CAAP;AACD;;AACD,SAAOA,IAAP;AACD","sourcesContent":["/** @typedef {import('./buffer-utils')} types */\nimport * as node from '../node/buffer-utils.node';\n\n/** @type {types['isBuffer']} */\nexport function isBuffer(x) {\n  return x && typeof x === 'object' && x.isBuffer;\n}\n\n/** @type {types['toBuffer']} */\nexport function toBuffer(data) {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/** @type {types['bufferToArrayBuffer']} */\nexport function bufferToArrayBuffer(data) {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n"],"file":"buffer-utils.js"}