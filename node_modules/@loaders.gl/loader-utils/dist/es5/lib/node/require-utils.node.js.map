{"version":3,"sources":["../../../../src/lib/node/require-utils.node.js"],"names":["requireFromFile","filename","startsWith","Error","process","cwd","require","requireFromString","code","options","appendPaths","prependPaths","paths","Module","_nodeModulePaths","path","dirname","parent","module","newModule","concat","_compile","children","splice","indexOf","exports"],"mappings":";;;;;;;;;;;;;;AAOA;;AACA;;;;;;AAMO,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;AACxC,MAAIA,QAAQ,CAACC,UAAT,CAAoB,MAApB,CAAJ,EAAiC;AAC/B,UAAM,IAAIC,KAAJ,gEAAkEF,QAAlE,EAAN;AACD;;AACD,MAAI,CAACA,QAAQ,CAACC,UAAT,CAAoB,GAApB,CAAL,EAA+B;AAC7BD,IAAAA,QAAQ,aAAMG,OAAO,CAACC,GAAR,EAAN,cAAuBJ,QAAvB,CAAR;AACD;;AACD,SAAOK,OAAO,CAACL,QAAD,CAAd;AACD;;AAQM,SAASM,iBAAT,CAA2BC,IAA3B,EAA8D;AAAA,MAA7BP,QAA6B,uEAAlB,EAAkB;AAAA,MAAdQ,OAAc,uEAAJ,EAAI;;AACnE,MAAI,yBAAOR,QAAP,MAAoB,QAAxB,EAAkC;AAChCQ,IAAAA,OAAO,GAAGR,QAAV;AACAA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAEDQ,EAAAA,OAAO;AACLC,IAAAA,WAAW,EAAE,EADR;AAELC,IAAAA,YAAY,EAAE;AAFT,KAGFF,OAHE,CAAP;;AAMA,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIL,KAAJ,+DAA+CK,IAA/C,GAAN;AACD;;AAGD,MAAMI,KAAK,GAAGC,mBAAOC,gBAAP,CAAwBC,iBAAKC,OAAL,CAAaf,QAAb,CAAxB,CAAd;;AAEA,MAAMgB,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,MAAME,SAAS,GAAG,IAAIN,kBAAJ,CAAWZ,QAAX,EAAqBgB,MAArB,CAAlB;AACAE,EAAAA,SAAS,CAAClB,QAAV,GAAqBA,QAArB;AACAkB,EAAAA,SAAS,CAACP,KAAV,GAAkB,GACfQ,MADe,CACRX,OAAO,CAACE,YADA,EAEfS,MAFe,CAERR,KAFQ,EAGfQ,MAHe,CAGRX,OAAO,CAACC,WAHA,CAAlB;;AAKAS,EAAAA,SAAS,CAACE,QAAV,CAAmBb,IAAnB,EAAyBP,QAAzB;;AAEA,MAAIgB,MAAM,IAAIA,MAAM,CAACK,QAArB,EAA+B;AAC7BL,IAAAA,MAAM,CAACK,QAAP,CAAgBC,MAAhB,CAAuBN,MAAM,CAACK,QAAP,CAAgBE,OAAhB,CAAwBL,SAAxB,CAAvB,EAA2D,CAA3D;AACD;;AAED,SAAOA,SAAS,CAACM,OAAjB;AACD","sourcesContent":["// Fork of https://github.com/floatdrop/require-from-string/blob/master/index.js\n// Copyright (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop)\n// MIT license\n\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\n\n/* global process */\nimport Module from 'module';\nimport path from 'path';\n\n// Node.js Dynamically require from file\n// Relative names are resolved relative to cwd\n// This indirect function is provided because webpack will try to bundle `module.require`.\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\nexport function requireFromFile(filename) {\n  if (filename.startsWith('http')) {\n    throw new Error(`require from remote script not supported in Node.js: ${filename}`);\n  }\n  if (!filename.startsWith('/')) {\n    filename = `${process.cwd()}/${filename}`;\n  }\n  return require(filename);\n}\n\n// Dynamically require from string\n// - `code` - Required - Type: string - Module code.\n// - `filename` - Type: string - Default: '' - Optional filename.\n// - `options.appendPaths` Type: Array List of paths, that will be appended to module paths.\n// Useful, when you want to be able require modules from these paths.\n// - `options.prependPaths` Type: Array Same as appendPaths, but paths will be prepended.\nexport function requireFromString(code, filename = '', options = {}) {\n  if (typeof filename === 'object') {\n    options = filename;\n    filename = '';\n  }\n\n  options = {\n    appendPaths: [],\n    prependPaths: [],\n    ...options\n  };\n\n  if (typeof code !== 'string') {\n    throw new Error(`code must be a string, not ${typeof code}`);\n  }\n\n  // @ts-ignore\n  const paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const parent = module.parent;\n  // @ts-ignore\n  const newModule = new Module(filename, parent);\n  newModule.filename = filename;\n  newModule.paths = []\n    .concat(options.prependPaths)\n    .concat(paths)\n    .concat(options.appendPaths);\n  // @ts-ignore\n  newModule._compile(code, filename);\n\n  if (parent && parent.children) {\n    parent.children.splice(parent.children.indexOf(newModule), 1);\n  }\n\n  return newModule.exports;\n}\n"],"file":"require-utils.node.js"}