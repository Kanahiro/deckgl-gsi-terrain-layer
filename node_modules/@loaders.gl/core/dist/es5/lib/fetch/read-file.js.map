{"version":3,"sources":["../../../../src/lib/fetch/read-file.js"],"names":["readFileSync","url","options","isBrowser","node"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAGO,SAASA,YAAT,CAAsBC,GAAtB,EAAyC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC9CD,EAAAA,GAAG,GAAG,8BAAYA,GAAZ,CAAN;;AACA,MAAI,CAACE,sBAAD,IAAcC,IAAI,CAACJ,YAAvB,EAAqC;AACnC,WAAOI,IAAI,CAACJ,YAAL,CAAkBC,GAAlB,EAAuBC,OAAvB,CAAP;AACD;;AACD,SAAO,mCAAoBD,GAApB,EAAyBC,OAAzB,CAAP;AACD","sourcesContent":["import {isBrowser, resolvePath} from '@loaders.gl/loader-utils';\nimport * as node from '../../node/read-file-sync.node';\nimport {readFileSyncBrowser} from './read-file.browser';\n\n// In a few cases (data URIs, node.js) \"files\" can be read synchronously\nexport function readFileSync(url, options = {}) {\n  url = resolvePath(url);\n  if (!isBrowser && node.readFileSync) {\n    return node.readFileSync(url, options);\n  }\n  return readFileSyncBrowser(url, options);\n}\n"],"file":"read-file.js"}