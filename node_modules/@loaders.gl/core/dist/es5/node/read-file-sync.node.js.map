{"version":3,"sources":["../../../src/node/read-file-sync.node.js"],"names":["DEFAULT_OPTIONS","dataType","nothrow","readFileSync","url","options","getReadFileOptions","fs","buffer","Buffer","responseType","encoding"],"mappings":";;;;;;;;;;;AACA;;AACA;;;;;;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,QAAQ,EAAE,aADY;AAGtBC,EAAAA,OAAO,EAAE;AAHa,CAAxB;;AAOO,SAASC,YAAT,CAAsBC,GAAtB,EAAyC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC9CA,EAAAA,OAAO,GAAGC,kBAAkB,CAACD,OAAD,CAA5B;;AAOA,MAAI,CAACE,cAAD,IAAO,CAACA,eAAGJ,YAAf,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAMK,MAAM,GAAGD,eAAGJ,YAAH,CAAgBC,GAAhB,EAAqBC,OAArB,CAAf;;AACA,SAAOG,MAAM,YAAYC,MAAlB,GAA2B,gCAAcD,MAAd,CAA3B,GAAmDA,MAA1D;AACD;;AAID,SAASF,kBAAT,GAA0C;AAAA,MAAdD,OAAc,uEAAJ,EAAI;AACxCA,EAAAA,OAAO,mCAAOL,eAAP,GAA2BK,OAA3B,CAAP;;AACA,MAAIA,OAAO,CAACK,YAAR,KAAyB,MAAzB,IAAmCL,OAAO,CAACJ,QAAR,KAAqB,MAA5D,EAAoE;AAClEI,IAAAA,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACM,QAAR,IAAoB,MAAvC;AACD;;AACD,SAAON,OAAP;AACD","sourcesContent":["/* global Buffer */\nimport fs from 'fs';\nimport {toArrayBuffer} from '@loaders.gl/loader-utils';\n\nconst DEFAULT_OPTIONS = {\n  dataType: 'arraybuffer',\n  // TODO - this was mostly set to true to make test cases work\n  nothrow: true\n};\n\n// In a few cases (data URIs, node.js) \"files\" can be read synchronously\nexport function readFileSync(url, options = {}) {\n  options = getReadFileOptions(options);\n\n  // Only support this if we can also support sync data URL decoding in browser\n  // if (isDataURL(url)) {\n  //   return decodeDataUri(url);\n  // }\n\n  if (!fs || !fs.readFileSync) {\n    return null; // throw new Error('Cant load URI synchronously');\n  }\n\n  const buffer = fs.readFileSync(url, options);\n  return buffer instanceof Buffer ? toArrayBuffer(buffer) : buffer;\n}\n\n// HELPER FUNCTIONS\n\nfunction getReadFileOptions(options = {}) {\n  options = {...DEFAULT_OPTIONS, ...options};\n  if (options.responseType === 'text' || options.dataType === 'text') {\n    options.encoding = options.encoding || 'utf8';\n  }\n  return options;\n}\n"],"file":"read-file-sync.node.js"}