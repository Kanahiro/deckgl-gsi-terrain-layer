const DEFAULT_CHUNK_SIZE = 1024 * 1024;
export async function* makeBlobIterator(file, options = {}) {
  const chunkSize = options.chunkSize || DEFAULT_CHUNK_SIZE;
  let offset = 0;

  while (offset < file.size) {
    const end = offset + chunkSize;
    const chunk = await readFileSlice(file, offset, end);
    offset = end;
    yield chunk;
  }
}
export async function readFileSlice(file, offset, end) {
  return await new Promise((resolve, reject) => {
    const slice = file.slice(offset, end);
    const fileReader = new FileReader();

    fileReader.onload = event => resolve(event.target && event.target.result);

    fileReader.onerror = error => reject(error);

    fileReader.readAsArrayBuffer(slice);
  });
}
//# sourceMappingURL=blob-iterator.js.map