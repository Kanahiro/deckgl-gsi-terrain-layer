{"version":3,"sources":["../../../../src/lib/fetch/read-file.js"],"names":["isBrowser","resolvePath","node","readFileSyncBrowser","readFileSync","url","options"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,WAAnB,QAAqC,0BAArC;AACA,OAAO,KAAKC,IAAZ,MAAsB,gCAAtB;AACA,SAAQC,mBAAR,QAAkC,qBAAlC;AAGA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,OAAO,GAAG,EAArC,EAAyC;AAC9CD,EAAAA,GAAG,GAAGJ,WAAW,CAACI,GAAD,CAAjB;;AACA,MAAI,CAACL,SAAD,IAAcE,IAAI,CAACE,YAAvB,EAAqC;AACnC,WAAOF,IAAI,CAACE,YAAL,CAAkBC,GAAlB,EAAuBC,OAAvB,CAAP;AACD;;AACD,SAAOH,mBAAmB,CAACE,GAAD,EAAMC,OAAN,CAA1B;AACD","sourcesContent":["import {isBrowser, resolvePath} from '@loaders.gl/loader-utils';\nimport * as node from '../../node/read-file-sync.node';\nimport {readFileSyncBrowser} from './read-file.browser';\n\n// In a few cases (data URIs, node.js) \"files\" can be read synchronously\nexport function readFileSync(url, options = {}) {\n  url = resolvePath(url);\n  if (!isBrowser && node.readFileSync) {\n    return node.readFileSync(url, options);\n  }\n  return readFileSyncBrowser(url, options);\n}\n"],"file":"read-file.js"}