{"version":3,"sources":["../../../../src/lib/fetch/fetch-file.js"],"names":["resolvePath","makeResponse","getErrorMessageFromResponse","fetchFile","url","options","response","fetch","ok","throws","Error"],"mappings":"AACA,SAAQA,WAAR,QAA0B,0BAA1B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,2BAAR,QAA0C,uBAA1C;AAOA,OAAO,eAAeC,SAAf,CAAyBC,GAAzB,EAA8BC,OAAO,GAAG,EAAxC,EAA4C;AACjD,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAO,MAAMH,YAAY,CAACG,GAAD,CAAzB;AACD;;AAEDA,EAAAA,GAAG,GAAGJ,WAAW,CAACI,GAAD,CAAjB;AAEA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;;AACA,MAAI,CAACC,QAAQ,CAACE,EAAV,IAAgBH,OAAO,CAACI,MAA5B,EAAoC;AAClC,UAAM,IAAIC,KAAJ,CAAU,MAAMR,2BAA2B,CAACI,QAAD,CAA3C,CAAN;AACD;;AAED,SAAOA,QAAP;AACD","sourcesContent":["/* global fetch */\nimport {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\nimport {getErrorMessageFromResponse} from './fetch-error-message';\n\n// As fetch but respects pathPrefix and file aliases\n// Reads file data from:\n// * data urls\n// * http/http urls\n// * File/Blob objects\nexport async function fetchFile(url, options = {}) {\n  if (typeof url !== 'string') {\n    return await makeResponse(url);\n  }\n\n  url = resolvePath(url);\n\n  const response = await fetch(url, options);\n  if (!response.ok && options.throws) {\n    throw new Error(await getErrorMessageFromResponse(response));\n  }\n\n  return response;\n}\n"],"file":"fetch-file.js"}