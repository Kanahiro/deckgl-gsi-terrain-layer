{"version":3,"sources":["../../../../src/lib/fetch/fetch-file.js"],"names":["resolvePath","makeResponse","getErrorMessageFromResponse","fetchFile","url","options","fetch","response","ok","Error"],"mappings":";;AACA,SAAQA,WAAR,QAA0B,0BAA1B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,2BAAR,QAA0C,uBAA1C;AAOA,gBAAsBC,SAAtB;AAAA;AAAA;;;0DAAO,iBAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BC,YAAAA,OAA9B,2DAAwC,EAAxC;;AAAA,kBACD,OAAOD,GAAP,KAAe,QADd;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEUH,YAAY,CAACG,GAAD,CAFtB;;AAAA;AAAA;;AAAA;AAKLA,YAAAA,GAAG,GAAGJ,WAAW,CAACI,GAAD,CAAjB;AALK;AAAA,mBAOkBE,KAAK,CAACF,GAAD,EAAMC,OAAN,CAPvB;;AAAA;AAOCE,YAAAA,QAPD;;AAAA,kBAQD,CAACA,QAAQ,CAACC,EAAV,IAAgBH,OAAO,UARtB;AAAA;AAAA;AAAA;;AAAA,0BASOI,KATP;AAAA;AAAA,mBASmBP,2BAA2B,CAACK,QAAD,CAT9C;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAYEA,QAZF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/* global fetch */\nimport {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\nimport {getErrorMessageFromResponse} from './fetch-error-message';\n\n// As fetch but respects pathPrefix and file aliases\n// Reads file data from:\n// * data urls\n// * http/http urls\n// * File/Blob objects\nexport async function fetchFile(url, options = {}) {\n  if (typeof url !== 'string') {\n    return await makeResponse(url);\n  }\n\n  url = resolvePath(url);\n\n  const response = await fetch(url, options);\n  if (!response.ok && options.throws) {\n    throw new Error(await getErrorMessageFromResponse(response));\n  }\n\n  return response;\n}\n"],"file":"fetch-file.js"}