{"version":3,"sources":["../../../../src/lib/loader-utils/option-utils.js"],"names":["global","isPureObject","isObject","fetchFile","NullLog","ConsoleLog","DEFAULT_LOADER_OPTIONS","fetch","CDN","worker","log","metadata","transforms","DEPRECATED_LOADER_OPTIONS","dataType","uri","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","integrity","keepalive","signal","getGlobalLoaderState","loaders","_state","getGlobalLoaderOptions","state","globalOptions","setGlobalOptions","options","normalizeOptionsInternal","normalizeOptions","loader","url","Array","isArray","validateOptions","getFetchFunction","context","console","validateOptionsObject","idOptions","id","loaderOptions","deprecatedOptions","defaultOptions","loaderName","prefix","key","isSubOptions","warn","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","toLowerCase","bestSuggestion","lowerCaseKey","isPartialMatch","startsWith","loaderDefaultOptions","mergedOptions","addUrlOptions","mergeNestedFields","value","baseUri"],"mappings":"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","sourcesContent":["import {global} from '@loaders.gl/loader-utils';\nimport {isPureObject, isObject} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {NullLog, ConsoleLog} from './loggers';\n\nconst DEFAULT_LOADER_OPTIONS = {\n  // baseUri\n  fetch: null,\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true, // By default, use worker if provided by loader\n  log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n  metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n  transforms: []\n};\n\nconst DEPRECATED_LOADER_OPTIONS = {\n  dataType: '(no longer used)',\n  uri: 'baseUri',\n  // Warn if fetch options are used on top-level\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};\n\n// Helper to reliably get global loader state\n// Wraps initialization of global variable in function to defeat overly agressive tree-shakers\nexport const getGlobalLoaderState = () => {\n  // @ts-ignore\n  global.loaders = global.loaders || {};\n  // @ts-ignore\n  const {loaders} = global;\n\n  // Add _state object to keep separate from modules added to global.loaders\n  loaders._state = loaders._state || {};\n  return loaders._state;\n};\n\n// Store global loader options on the global object to increase chances of cross loaders-version interoperability\n// NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderOptions = () => {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {...DEFAULT_LOADER_OPTIONS};\n  return state.globalOptions;\n};\n\n// Set global loader options\nexport function setGlobalOptions(options) {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\n\n// Merges options with global opts and loader defaults, also injects baseUri\n// Merges options with global opts and loader defaults, also injects baseUri\nexport function normalizeOptions(options, loader, loaders, url) {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n\nexport function getFetchFunction(options, context) {\n  const globalOptions = getGlobalLoaderOptions();\n\n  const fetch = options.fetch || globalOptions.fetch;\n\n  // options.fetch can be a function\n  if (typeof fetch === 'function') {\n    return fetch;\n  }\n\n  // options.fetch can be an options object\n  if (isObject(fetch)) {\n    return url => fetchFile(url, fetch);\n  }\n\n  // else refer to context (from parent loader) if available\n  if (context && context.fetch) {\n    return context.fetch;\n  }\n\n  // else return the default fetch function\n\n  // TODO DEPRECATED, support for root level fetch options will be removed in 3.0\n  return url => fetchFile(url, options);\n\n  // return fetchFile;\n}\n\n// VALIDATE OPTIONS\n\n/**\n * Warn for unsupported options\n * @param {object} options\n * @param {*} loaders\n * @param {*} log\n */\nfunction validateOptions(\n  options,\n  loaders,\n  // eslint-disable-next-line\n  log = console\n) {\n  // Check top level options\n  validateOptionsObject(\n    options,\n    null,\n    log,\n    DEFAULT_LOADER_OPTIONS,\n    DEPRECATED_LOADER_OPTIONS,\n    loaders\n  );\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = (options && options[loader.id]) || {};\n\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n    const deprecatedOptions = (loader.defaultOptions && loader.defaultOptions[loader.id]) || {};\n\n    // Validate loader specific options\n    validateOptionsObject(idOptions, loader.id, log, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction validateOptionsObject(options, id, log, defaultOptions, deprecatedOptions, loaders) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    if (!(key in defaultOptions)) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        log.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' deprecated, use \\'${\n            deprecatedOptions[key]\n          }\\'`\n        );\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        log.warn(`${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`);\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch =\n        lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url) {\n  const loaderDefaultOptions = loader.options || {};\n\n  const mergedOptions = {...loaderDefaultOptions};\n\n  addUrlOptions(mergedOptions, url);\n\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n\n  return mergedOptions;\n}\n\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n\n// Harvest information from the url\n// TODO - baseUri should be a directory, i.e. remove file component from baseUri\n// TODO - extract extension?\n// TODO - extract query parameters?\n// TODO - should these be injected on context instead of options?\nfunction addUrlOptions(options, url) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}\n"],"file":"option-utils.js"}