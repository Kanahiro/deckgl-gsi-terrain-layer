{"version":3,"sources":["../../../src/utils/hammer-overrides.js"],"names":["INPUT_START","INPUT_MOVE","INPUT_END","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","some","array","predict","i","length","enhancePointerEventInput","PointerEventInput","oldHandler","prototype","handler","ev","store","button","e","pointerId","push","call","enhanceMouseInput","MouseInput","eventType","type","pressed","which","callback","manager","pointers","changedPointers","pointerType","srcEvent"],"mappings":";;;;;;;AAMA,IAAMA,WAAW,GAAG,CAApB;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,SAAS,GAAG,CAAlB;AACA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAEJ,WADW;AAEtBK,EAAAA,SAAS,EAAEJ,UAFW;AAGtBK,EAAAA,OAAO,EAAEJ;AAHa,CAAxB;;AAYA,SAASK,IAAT,CAAcC,KAAd,EAAqBC,OAArB,EAA8B;AAC5B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAID,OAAO,CAACD,KAAK,CAACE,CAAD,CAAN,CAAX,EAAuB;AACrB,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAGM,SAASE,wBAAT,CAAkCC,iBAAlC,EAAqD;AAC1D,MAAMC,UAAU,GAAGD,iBAAiB,CAACE,SAAlB,CAA4BC,OAA/C;;AAGAH,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BC,OAA5B,GAAsC,SAASA,OAAT,CAAiBC,EAAjB,EAAqB;AACzD,QAAMC,KAAK,GAAG,KAAKA,KAAnB;;AAGA,QAAID,EAAE,CAACE,MAAH,GAAY,CAAhB,EAAmB;AACjB,UAAI,CAACZ,IAAI,CAACW,KAAD,EAAQ,UAAAE,CAAC;AAAA,eAAIA,CAAC,CAACC,SAAF,KAAgBJ,EAAE,CAACI,SAAvB;AAAA,OAAT,CAAT,EAAqD;AACnDH,QAAAA,KAAK,CAACI,IAAN,CAAWL,EAAX;AACD;AACF;;AAEDH,IAAAA,UAAU,CAACS,IAAX,CAAgB,IAAhB,EAAsBN,EAAtB;AACD,GAXD;AAYD;;AAGM,SAASO,iBAAT,CAA2BC,UAA3B,EAAuC;AAC5CA,EAAAA,UAAU,CAACV,SAAX,CAAqBC,OAArB,GAA+B,SAASA,OAAT,CAAiBC,EAAjB,EAAqB;AAClD,QAAIS,SAAS,GAAGvB,eAAe,CAACc,EAAE,CAACU,IAAJ,CAA/B;;AAGA,QAAID,SAAS,GAAG1B,WAAZ,IAA2BiB,EAAE,CAACE,MAAH,IAAa,CAA5C,EAA+C;AAC7C,WAAKS,OAAL,GAAe,IAAf;AACD;;AAED,QAAIF,SAAS,GAAGzB,UAAZ,IAA0BgB,EAAE,CAACY,KAAH,KAAa,CAA3C,EAA8C;AAC5CH,MAAAA,SAAS,GAAGxB,SAAZ;AACD;;AAGD,QAAI,CAAC,KAAK0B,OAAV,EAAmB;AACjB;AACD;;AAED,QAAIF,SAAS,GAAGxB,SAAhB,EAA2B;AACzB,WAAK0B,OAAL,GAAe,KAAf;AACD;;AAED,SAAKE,QAAL,CAAc,KAAKC,OAAnB,EAA4BL,SAA5B,EAAuC;AACrCM,MAAAA,QAAQ,EAAE,CAACf,EAAD,CAD2B;AAErCgB,MAAAA,eAAe,EAAE,CAAChB,EAAD,CAFoB;AAGrCiB,MAAAA,WAAW,EAAE,OAHwB;AAIrCC,MAAAA,QAAQ,EAAElB;AAJ2B,KAAvC;AAMD,GA3BD;AA4BD","sourcesContent":["/**\n * This file contains overrides the default\n * hammer.js functions to add our own utility\n */\n\n/* Hammer.js constants */\nconst INPUT_START = 1;\nconst INPUT_MOVE = 2;\nconst INPUT_END = 4;\nconst MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\n\n/**\n * Helper function that returns true if any element in an array meets given criteria.\n * Because older browsers do not support `Array.prototype.some`\n * @params array {Array}\n * @params predict {Function}\n */\nfunction some(array, predict) {\n  for (let i = 0; i < array.length; i++) {\n    if (predict(array[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/* eslint-disable no-invalid-this */\nexport function enhancePointerEventInput(PointerEventInput) {\n  const oldHandler = PointerEventInput.prototype.handler;\n\n  // overrides PointerEventInput.handler to accept right mouse button\n  PointerEventInput.prototype.handler = function handler(ev) {\n    const store = this.store;\n\n    // Allow non-left mouse buttons through\n    if (ev.button > 0) {\n      if (!some(store, e => e.pointerId === ev.pointerId)) {\n        store.push(ev);\n      }\n    }\n\n    oldHandler.call(this, ev);\n  };\n}\n\n// overrides MouseInput.handler to accept right mouse button\nexport function enhanceMouseInput(MouseInput) {\n  MouseInput.prototype.handler = function handler(ev) {\n    let eventType = MOUSE_INPUT_MAP[ev.type];\n\n    // on start we want to have the mouse button down\n    if (eventType & INPUT_START && ev.button >= 0) {\n      this.pressed = true;\n    }\n\n    if (eventType & INPUT_MOVE && ev.which === 0) {\n      eventType = INPUT_END;\n    }\n\n    // mouse must be down\n    if (!this.pressed) {\n      return;\n    }\n\n    if (eventType & INPUT_END) {\n      this.pressed = false;\n    }\n\n    this.callback(this.manager, eventType, {\n      pointers: [ev],\n      changedPointers: [ev],\n      pointerType: 'mouse',\n      srcEvent: ev\n    });\n  };\n}\n"],"file":"hammer-overrides.js"}