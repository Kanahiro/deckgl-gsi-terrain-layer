{"version":3,"sources":["../../../src/inputs/key-input.js"],"names":["KEY_EVENTS","INPUT_EVENT_TYPES","DOWN_EVENT_TYPE","UP_EVENT_TYPE","KeyInput","element","callback","options","Object","assign","enable","enableDownEvent","enableUpEvent","events","concat","handleEvent","bind","tabIndex","style","outline","forEach","event","addEventListener","removeEventListener","eventType","enabled","targetElement","target","srcElement","tagName","type","srcEvent","key"],"mappings":";;;;;;;;;;;;;AAoBA;;IAEOA,U,GAAcC,4B,CAAdD,U;AACP,IAAME,eAAe,GAAG,SAAxB;AACA,IAAMC,aAAa,GAAG,OAAtB;;IAEqBC,Q;AACnB,oBAAYC,OAAZ,EAAqBC,QAArB,EAA6C;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;AAC3C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AAEA,SAAKC,OAAL,GAAeC,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAd,EAA8BH,OAA9B,CAAf;AACA,SAAKI,eAAL,GAAuB,KAAKJ,OAAL,CAAaG,MAApC;AACA,SAAKE,aAAL,GAAqB,KAAKL,OAAL,CAAaG,MAAlC;AAEA,SAAKG,MAAL,GAAcb,UAAU,CAACc,MAAX,CAAkBP,OAAO,CAACM,MAAR,IAAkB,EAApC,CAAd;AAEA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AAEAX,IAAAA,OAAO,CAACY,QAAR,GAAmBV,OAAO,CAACU,QAAR,IAAoB,CAAvC;AACAZ,IAAAA,OAAO,CAACa,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACA,SAAKN,MAAL,CAAYO,OAAZ,CAAoB,UAAAC,KAAK;AAAA,aAAIhB,OAAO,CAACiB,gBAAR,CAAyBD,KAAzB,EAAgC,KAAI,CAACN,WAArC,CAAJ;AAAA,KAAzB;AACD;;;;8BAES;AAAA;;AACR,WAAKF,MAAL,CAAYO,OAAZ,CAAoB,UAAAC,KAAK;AAAA,eAAI,MAAI,CAAChB,OAAL,CAAakB,mBAAb,CAAiCF,KAAjC,EAAwC,MAAI,CAACN,WAA7C,CAAJ;AAAA,OAAzB;AACD;;;oCAMeS,S,EAAWC,O,EAAS;AAClC,UAAID,SAAS,KAAKtB,eAAlB,EAAmC;AACjC,aAAKS,eAAL,GAAuBc,OAAvB;AACD;;AACD,UAAID,SAAS,KAAKrB,aAAlB,EAAiC;AAC/B,aAAKS,aAAL,GAAqBa,OAArB;AACD;AACF;;;gCAEWJ,K,EAAO;AAEjB,UAAMK,aAAa,GAAGL,KAAK,CAACM,MAAN,IAAgBN,KAAK,CAACO,UAA5C;;AACA,UACGF,aAAa,CAACG,OAAd,KAA0B,OAA1B,IAAqCH,aAAa,CAACI,IAAd,KAAuB,MAA7D,IACAJ,aAAa,CAACG,OAAd,KAA0B,UAF5B,EAGE;AACA;AACD;;AAED,UAAI,KAAKlB,eAAL,IAAwBU,KAAK,CAACS,IAAN,KAAe,SAA3C,EAAsD;AACpD,aAAKxB,QAAL,CAAc;AACZwB,UAAAA,IAAI,EAAE5B,eADM;AAEZ6B,UAAAA,QAAQ,EAAEV,KAFE;AAGZW,UAAAA,GAAG,EAAEX,KAAK,CAACW,GAHC;AAIZL,UAAAA,MAAM,EAAEN,KAAK,CAACM;AAJF,SAAd;AAMD;;AAED,UAAI,KAAKf,aAAL,IAAsBS,KAAK,CAACS,IAAN,KAAe,OAAzC,EAAkD;AAChD,aAAKxB,QAAL,CAAc;AACZwB,UAAAA,IAAI,EAAE3B,aADM;AAEZ4B,UAAAA,QAAQ,EAAEV,KAFE;AAGZW,UAAAA,GAAG,EAAEX,KAAK,CAACW,GAHC;AAIZL,UAAAA,MAAM,EAAEN,KAAK,CAACM;AAJF,SAAd;AAMD;AACF","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {INPUT_EVENT_TYPES} from '../constants';\n\nconst {KEY_EVENTS} = INPUT_EVENT_TYPES;\nconst DOWN_EVENT_TYPE = 'keydown';\nconst UP_EVENT_TYPE = 'keyup';\n\nexport default class KeyInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n\n    this.options = Object.assign({enable: true}, options);\n    this.enableDownEvent = this.options.enable;\n    this.enableUpEvent = this.options.enable;\n\n    this.events = KEY_EVENTS.concat(options.events || []);\n\n    this.handleEvent = this.handleEvent.bind(this);\n\n    element.tabIndex = options.tabIndex || 0;\n    element.style.outline = 'none';\n    this.events.forEach(event => element.addEventListener(event, this.handleEvent));\n  }\n\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === DOWN_EVENT_TYPE) {\n      this.enableDownEvent = enabled;\n    }\n    if (eventType === UP_EVENT_TYPE) {\n      this.enableUpEvent = enabled;\n    }\n  }\n\n  handleEvent(event) {\n    // Ignore if focused on text input\n    const targetElement = event.target || event.srcElement;\n    if (\n      (targetElement.tagName === 'INPUT' && targetElement.type === 'text') ||\n      targetElement.tagName === 'TEXTAREA'\n    ) {\n      return;\n    }\n\n    if (this.enableDownEvent && event.type === 'keydown') {\n      this.callback({\n        type: DOWN_EVENT_TYPE,\n        srcEvent: event,\n        key: event.key,\n        target: event.target\n      });\n    }\n\n    if (this.enableUpEvent && event.type === 'keyup') {\n      this.callback({\n        type: UP_EVENT_TYPE,\n        srcEvent: event,\n        key: event.key,\n        target: event.target\n      });\n    }\n  }\n}\n"],"file":"key-input.js"}