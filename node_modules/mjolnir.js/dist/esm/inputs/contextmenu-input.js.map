{"version":3,"sources":["../../../src/inputs/contextmenu-input.js"],"names":["EVENT_TYPE","ContextmenuInput","element","callback","options","Object","assign","enable","handleEvent","bind","addEventListener","removeEventListener","eventType","enabled","event","type","center","x","clientX","y","clientY","srcEvent","pointerType","target"],"mappings":";;AAoBA,IAAMA,UAAU,GAAG,aAAnB;;IAEqBC,gB;AACnB,4BAAYC,OAAZ,EAAqBC,QAArB,EAA6C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAC3C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AAEA,SAAKC,OAAL,GAAeC,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAd,EAA8BH,OAA9B,CAAf;AAEA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACAP,IAAAA,OAAO,CAACQ,gBAAR,CAAyB,aAAzB,EAAwC,KAAKF,WAA7C;AACD;;;;8BAES;AACR,WAAKN,OAAL,CAAaS,mBAAb,CAAiC,aAAjC,EAAgD,KAAKH,WAArD;AACD;;;oCAMeI,S,EAAWC,O,EAAS;AAClC,UAAID,SAAS,KAAKZ,UAAlB,EAA8B;AAC5B,aAAKI,OAAL,CAAaG,MAAb,GAAsBM,OAAtB;AACD;AACF;;;gCAEWC,K,EAAO;AACjB,UAAI,CAAC,KAAKV,OAAL,CAAaG,MAAlB,EAA0B;AACxB;AACD;;AAED,WAAKJ,QAAL,CAAc;AACZY,QAAAA,IAAI,EAAEf,UADM;AAEZgB,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAEH,KAAK,CAACI,OADH;AAENC,UAAAA,CAAC,EAAEL,KAAK,CAACM;AAFH,SAFI;AAMZC,QAAAA,QAAQ,EAAEP,KANE;AAOZQ,QAAAA,WAAW,EAAE,OAPD;AAQZC,QAAAA,MAAM,EAAET,KAAK,CAACS;AARF,OAAd;AAUD;;;;;;SAxCkBtB,gB","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst EVENT_TYPE = 'contextmenu';\n\nexport default class ContextmenuInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n\n    this.options = Object.assign({enable: true}, options);\n\n    this.handleEvent = this.handleEvent.bind(this);\n    element.addEventListener('contextmenu', this.handleEvent);\n  }\n\n  destroy() {\n    this.element.removeEventListener('contextmenu', this.handleEvent);\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === EVENT_TYPE) {\n      this.options.enable = enabled;\n    }\n  }\n\n  handleEvent(event) {\n    if (!this.options.enable) {\n      return;\n    }\n\n    this.callback({\n      type: EVENT_TYPE,\n      center: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      srcEvent: event,\n      pointerType: 'mouse',\n      target: event.target\n    });\n  }\n}\n"],"file":"contextmenu-input.js"}