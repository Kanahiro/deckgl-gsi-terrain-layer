{"version":3,"sources":["../../../src/utils/hammer.js"],"names":["HammerManagerMock","m","instance","chainedNoop","get","set","on","off","destroy","emit","Manager"],"mappings":"AAqBA,SAASA,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5B,MAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,QAAN;AAAA,GAApB;;AACAA,EAAAA,QAAQ,CAACE,GAAT,GAAe;AAAA,WAAM,IAAN;AAAA,GAAf;;AACAF,EAAAA,QAAQ,CAACG,GAAT,GAAeF,WAAf;AACAD,EAAAA,QAAQ,CAACI,EAAT,GAAcH,WAAd;AACAD,EAAAA,QAAQ,CAACK,GAAT,GAAeJ,WAAf;AACAD,EAAAA,QAAQ,CAACM,OAAT,GAAmBL,WAAnB;AACAD,EAAAA,QAAQ,CAACO,IAAT,GAAgBN,WAAhB;AACA,SAAOD,QAAP;AACD;;AAED,OAAO,IAAMQ,OAAO,GAAGV,iBAAhB;AAEP,eAAe,IAAf","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Hammer.Manager mock for use in environments without `document` / `window`.\nfunction HammerManagerMock(m) {\n  const instance = {};\n  const chainedNoop = () => instance;\n  instance.get = () => null;\n  instance.set = chainedNoop;\n  instance.on = chainedNoop;\n  instance.off = chainedNoop;\n  instance.destroy = chainedNoop;\n  instance.emit = chainedNoop;\n  return instance;\n}\n\nexport const Manager = HammerManagerMock;\n\nexport default null;\n"],"file":"hammer.js"}