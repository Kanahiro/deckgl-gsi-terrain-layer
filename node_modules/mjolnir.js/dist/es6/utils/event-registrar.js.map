{"version":3,"sources":["../../../src/utils/event-registrar.js"],"names":["whichButtons","getOffsetPosition","DEFAULT_OPTIONS","srcElement","priority","EventRegistrar","constructor","eventManager","handlers","handlersByElement","Map","handleEvent","bind","_active","isEmpty","add","type","handler","opts","once","passive","addEventListener","Object","assign","entries","get","set","entry","push","insertPosition","length","splice","remove","i","indexOf","delete","some","event","mjolnirEvent","_normalizeEvent","target","srcEvent","rootElement","_emit","handled","parentNode","immediatePropagationStopped","stopPropagation","stopImmediatePropagation","entriesToRemove","element"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,iBAAtB,QAA8C,eAA9C;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,UAAU,EAAE,MADU;AAEtBC,EAAAA,QAAQ,EAAE;AAFY,CAAxB;AAKA,eAAe,MAAMC,cAAN,CAAqB;AAClCC,EAAAA,WAAW,CAACC,YAAD,EAAe;AACxB,SAAKA,YAAL,GAAoBA,YAApB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,OAAL,GAAe,KAAf;AACD;;AAGDC,EAAAA,OAAO,GAAG;AACR,WAAO,CAAC,KAAKD,OAAb;AACD;;AAEDE,EAAAA,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,IAAI,GAAG,KAA7B,EAAoCC,OAAO,GAAG,KAA9C,EAAqD;AACtD,UAAM;AAACZ,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAgC,IAAtC;;AAEA,QAAIS,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACG,gBAAtC,CAAR,EAAiE;AAE/DH,MAAAA,IAAI,GAAG;AAACf,QAAAA,UAAU,EAAEe;AAAb,OAAP;AACD;;AACDA,IAAAA,IAAI,GAAGA,IAAI,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,eAAlB,EAAmCgB,IAAnC,CAAH,GAA8ChB,eAAzD;AAEA,QAAIsB,OAAO,GAAGf,iBAAiB,CAACgB,GAAlB,CAAsBP,IAAI,CAACf,UAA3B,CAAd;;AACA,QAAI,CAACqB,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,EAAV;AACAf,MAAAA,iBAAiB,CAACiB,GAAlB,CAAsBR,IAAI,CAACf,UAA3B,EAAuCqB,OAAvC;AACD;;AACD,UAAMG,KAAK,GAAG;AAACX,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBd,MAAAA,UAAU,EAAEe,IAAI,CAACf,UAAjC;AAA6CC,MAAAA,QAAQ,EAAEc,IAAI,CAACd;AAA5D,KAAd;;AACA,QAAIe,IAAJ,EAAU;AACRQ,MAAAA,KAAK,CAACR,IAAN,GAAa,IAAb;AACD;;AACD,QAAIC,OAAJ,EAAa;AACXO,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACD;;AACDZ,IAAAA,QAAQ,CAACoB,IAAT,CAAcD,KAAd;AACA,SAAKd,OAAL,GAAe,KAAKA,OAAL,IAAgB,CAACc,KAAK,CAACP,OAAtC;AAIA,QAAIS,cAAc,GAAGL,OAAO,CAACM,MAAR,GAAiB,CAAtC;;AACA,WAAOD,cAAc,IAAI,CAAzB,EAA4B;AAC1B,UAAIL,OAAO,CAACK,cAAD,CAAP,CAAwBzB,QAAxB,IAAoCuB,KAAK,CAACvB,QAA9C,EAAwD;AACtD;AACD;;AACDyB,MAAAA,cAAc;AACf;;AACDL,IAAAA,OAAO,CAACO,MAAR,CAAeF,cAAc,GAAG,CAAhC,EAAmC,CAAnC,EAAsCF,KAAtC;AACD;;AAEDK,EAAAA,MAAM,CAAChB,IAAD,EAAOC,OAAP,EAAgB;AACpB,UAAM;AAACT,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAgC,IAAtC;;AAEA,SAAK,IAAIwB,CAAC,GAAGzB,QAAQ,CAACsB,MAAT,GAAkB,CAA/B,EAAkCG,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7C,YAAMN,KAAK,GAAGnB,QAAQ,CAACyB,CAAD,CAAtB;;AAEA,UAAIN,KAAK,CAACX,IAAN,KAAeA,IAAf,IAAuBW,KAAK,CAACV,OAAN,KAAkBA,OAA7C,EAAsD;AACpDT,QAAAA,QAAQ,CAACuB,MAAT,CAAgBE,CAAhB,EAAmB,CAAnB;AACA,cAAMT,OAAO,GAAGf,iBAAiB,CAACgB,GAAlB,CAAsBE,KAAK,CAACxB,UAA5B,CAAhB;AACAqB,QAAAA,OAAO,CAACO,MAAR,CAAeP,OAAO,CAACU,OAAR,CAAgBP,KAAhB,CAAf,EAAuC,CAAvC;;AACA,YAAIH,OAAO,CAACM,MAAR,KAAmB,CAAvB,EAA0B;AACxBrB,UAAAA,iBAAiB,CAAC0B,MAAlB,CAAyBR,KAAK,CAACxB,UAA/B;AACD;AACF;AACF;;AACD,SAAKU,OAAL,GAAeL,QAAQ,CAAC4B,IAAT,CAAcT,KAAK,IAAI,CAACA,KAAK,CAACP,OAA9B,CAAf;AACD;;AAKDT,EAAAA,WAAW,CAAC0B,KAAD,EAAQ;AACjB,QAAI,KAAKvB,OAAL,EAAJ,EAAoB;AAClB;AACD;;AAED,UAAMwB,YAAY,GAAG,KAAKC,eAAL,CAAqBF,KAArB,CAArB;;AACA,QAAIG,MAAM,GAAGH,KAAK,CAACI,QAAN,CAAeD,MAA5B;;AAEA,WAAOA,MAAM,IAAIA,MAAM,KAAKF,YAAY,CAACI,WAAzC,EAAsD;AACpD,WAAKC,KAAL,CAAWL,YAAX,EAAyBE,MAAzB;;AACA,UAAIF,YAAY,CAACM,OAAjB,EAA0B;AACxB;AACD;;AACDJ,MAAAA,MAAM,GAAGA,MAAM,CAACK,UAAhB;AACD;;AACD,SAAKF,KAAL,CAAWL,YAAX,EAAyB,MAAzB;AACD;;AAKDK,EAAAA,KAAK,CAACN,KAAD,EAAQlC,UAAR,EAAoB;AACvB,UAAMqB,OAAO,GAAG,KAAKf,iBAAL,CAAuBgB,GAAvB,CAA2BtB,UAA3B,CAAhB;;AAEA,QAAIqB,OAAJ,EAAa;AACX,UAAIsB,2BAA2B,GAAG,KAAlC;;AAGA,YAAMC,eAAe,GAAG,MAAM;AAC5BV,QAAAA,KAAK,CAACO,OAAN,GAAgB,IAAhB;AACD,OAFD;;AAIA,YAAMI,wBAAwB,GAAG,MAAM;AACrCX,QAAAA,KAAK,CAACO,OAAN,GAAgB,IAAhB;AACAE,QAAAA,2BAA2B,GAAG,IAA9B;AACD,OAHD;;AAIA,YAAMG,eAAe,GAAG,EAAxB;;AAEA,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACM,MAA5B,EAAoCG,CAAC,EAArC,EAAyC;AACvC,cAAM;AAACjB,UAAAA,IAAD;AAAOC,UAAAA,OAAP;AAAgBE,UAAAA;AAAhB,YAAwBK,OAAO,CAACS,CAAD,CAArC;AACAhB,QAAAA,OAAO,CACLK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBc,KAAlB,EAAyB;AACvBrB,UAAAA,IADuB;AAEvB+B,UAAAA,eAFuB;AAGvBC,UAAAA;AAHuB,SAAzB,CADK,CAAP;;AAOA,YAAI7B,IAAJ,EAAU;AACR8B,UAAAA,eAAe,CAACrB,IAAhB,CAAqBJ,OAAO,CAACS,CAAD,CAA5B;AACD;;AACD,YAAIa,2BAAJ,EAAiC;AAC/B;AACD;AACF;;AAED,WAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,eAAe,CAACnB,MAApC,EAA4CG,CAAC,EAA7C,EAAiD;AAC/C,cAAM;AAACjB,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAkBgC,eAAe,CAAChB,CAAD,CAAvC;AACA,aAAKD,MAAL,CAAYhB,IAAZ,EAAkBC,OAAlB;AACD;AACF;AACF;;AAKDsB,EAAAA,eAAe,CAACF,KAAD,EAAQ;AACrB,UAAMK,WAAW,GAAG,KAAKnC,YAAL,CAAkB2C,OAAtC;AAEA,WAAO5B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBc,KAAlB,EAAyBrC,YAAY,CAACqC,KAAD,CAArC,EAA8CpC,iBAAiB,CAACoC,KAAD,EAAQK,WAAR,CAA/D,EAAqF;AAC1FE,MAAAA,OAAO,EAAE,KADiF;AAE1FF,MAAAA;AAF0F,KAArF,CAAP;AAID;;AAjJiC","sourcesContent":["import {whichButtons, getOffsetPosition} from './event-utils';\n\nconst DEFAULT_OPTIONS = {\n  srcElement: 'root',\n  priority: 0\n};\n\nexport default class EventRegistrar {\n  constructor(eventManager) {\n    this.eventManager = eventManager;\n    this.handlers = [];\n    // Element -> handler map\n    this.handlersByElement = new Map();\n\n    this.handleEvent = this.handleEvent.bind(this);\n    this._active = false;\n  }\n\n  // Returns true if there are no non-passive handlers\n  isEmpty() {\n    return !this._active;\n  }\n\n  add(type, handler, opts, once = false, passive = false) {\n    const {handlers, handlersByElement} = this;\n\n    if (opts && (typeof opts !== 'object' || opts.addEventListener)) {\n      // is DOM element, backward compatibility\n      opts = {srcElement: opts};\n    }\n    opts = opts ? Object.assign({}, DEFAULT_OPTIONS, opts) : DEFAULT_OPTIONS;\n\n    let entries = handlersByElement.get(opts.srcElement);\n    if (!entries) {\n      entries = [];\n      handlersByElement.set(opts.srcElement, entries);\n    }\n    const entry = {type, handler, srcElement: opts.srcElement, priority: opts.priority};\n    if (once) {\n      entry.once = true;\n    }\n    if (passive) {\n      entry.passive = true;\n    }\n    handlers.push(entry);\n    this._active = this._active || !entry.passive;\n\n    // Sort handlers by descending priority\n    // Handlers with the same priority are excuted in the order of registration\n    let insertPosition = entries.length - 1;\n    while (insertPosition >= 0) {\n      if (entries[insertPosition].priority >= entry.priority) {\n        break;\n      }\n      insertPosition--;\n    }\n    entries.splice(insertPosition + 1, 0, entry);\n  }\n\n  remove(type, handler) {\n    const {handlers, handlersByElement} = this;\n\n    for (let i = handlers.length - 1; i >= 0; i--) {\n      const entry = handlers[i];\n\n      if (entry.type === type && entry.handler === handler) {\n        handlers.splice(i, 1);\n        const entries = handlersByElement.get(entry.srcElement);\n        entries.splice(entries.indexOf(entry), 1);\n        if (entries.length === 0) {\n          handlersByElement.delete(entry.srcElement);\n        }\n      }\n    }\n    this._active = handlers.some(entry => !entry.passive);\n  }\n\n  /**\n   * Handles hammerjs event\n   */\n  handleEvent(event) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    const mjolnirEvent = this._normalizeEvent(event);\n    let target = event.srcEvent.target;\n\n    while (target && target !== mjolnirEvent.rootElement) {\n      this._emit(mjolnirEvent, target);\n      if (mjolnirEvent.handled) {\n        return;\n      }\n      target = target.parentNode;\n    }\n    this._emit(mjolnirEvent, 'root');\n  }\n\n  /**\n   * Invoke handlers on a particular element\n   */\n  _emit(event, srcElement) {\n    const entries = this.handlersByElement.get(srcElement);\n\n    if (entries) {\n      let immediatePropagationStopped = false;\n\n      // Prevents the current event from bubbling up\n      const stopPropagation = () => {\n        event.handled = true;\n      };\n      // Prevent any remaining listeners from being called\n      const stopImmediatePropagation = () => {\n        event.handled = true;\n        immediatePropagationStopped = true;\n      };\n      const entriesToRemove = [];\n\n      for (let i = 0; i < entries.length; i++) {\n        const {type, handler, once} = entries[i];\n        handler(\n          Object.assign({}, event, {\n            type,\n            stopPropagation,\n            stopImmediatePropagation\n          })\n        );\n        if (once) {\n          entriesToRemove.push(entries[i]);\n        }\n        if (immediatePropagationStopped) {\n          break;\n        }\n      }\n\n      for (let i = 0; i < entriesToRemove.length; i++) {\n        const {type, handler} = entriesToRemove[i];\n        this.remove(type, handler);\n      }\n    }\n  }\n\n  /**\n   * Normalizes hammerjs and custom events to have predictable fields.\n   */\n  _normalizeEvent(event) {\n    const rootElement = this.eventManager.element;\n\n    return Object.assign({}, event, whichButtons(event), getOffsetPosition(event, rootElement), {\n      handled: false,\n      rootElement\n    });\n  }\n}\n"],"file":"event-registrar.js"}