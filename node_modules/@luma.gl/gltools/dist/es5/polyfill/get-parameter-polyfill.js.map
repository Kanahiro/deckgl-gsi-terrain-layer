{"version":3,"sources":["../../../src/polyfill/get-parameter-polyfill.js"],"names":["OES_element_index","WEBGL_draw_buffers","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_texture_filter_anisotropic","WEBGL_debug_renderer_info","GL_FRAGMENT_SHADER_DERIVATIVE_HINT","GL_DONT_CARE","GL_GPU_DISJOINT_EXT","GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT","GL_UNMASKED_VENDOR_WEBGL","GL_UNMASKED_RENDERER_WEBGL","getWebGL2ValueOrZero","gl","undefined","WEBGL_PARAMETERS","getParameter","ext","getExtension","GPU_DISJOINT_EXT","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","luma","extensions","MAX_TEXTURE_MAX_ANISOTROPY_EXT","MAX_COLOR_ATTACHMENTS_WEBGL","MAX_DRAW_BUFFERS_WEBGL","getParameterPolyfill","originalGetParameter","pname","limit","value","result"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len, camelcase */\nimport GL from '@luma.gl/constants';\nimport {isWebGL2} from '../utils';\n\nconst OES_element_index = 'OES_element_index';\nconst WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nconst EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nconst EXT_disjoint_timer_query_webgl2 = 'EXT_disjoint_timer_query_webgl2';\nconst EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\nconst WEBGL_debug_renderer_info = 'WEBGL_debug_renderer_info';\n\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b;\nconst GL_DONT_CARE = 0x1100;\nconst GL_GPU_DISJOINT_EXT = 0x8fbb;\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff;\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245; // vendor string of the graphics driver.\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246; // renderer string of the graphics driver.\n\nconst getWebGL2ValueOrZero = gl => (!isWebGL2(gl) ? 0 : undefined);\n\n// if a function returns undefined in this table,\n// the original getParameter will be called, defeating the override\nconst WEBGL_PARAMETERS = {\n  [GL.READ_BUFFER]: gl => (!isWebGL2(gl) ? GL.COLOR_ATTACHMENT0 : undefined),\n\n  // WebGL2 context parameters\n  [GL_FRAGMENT_SHADER_DERIVATIVE_HINT]: gl => (!isWebGL2(gl) ? GL_DONT_CARE : undefined),\n\n  [GL.RASTERIZER_DISCARD]: getWebGL2ValueOrZero,\n\n  [GL.SAMPLES]: getWebGL2ValueOrZero,\n\n  // WebGL2 extension context parameters\n  [GL_GPU_DISJOINT_EXT]: (gl, getParameter) => {\n    const ext = isWebGL2(gl)\n      ? gl.getExtension(EXT_disjoint_timer_query_webgl2)\n      : gl.getExtension(EXT_disjoint_timer_query);\n    return ext && ext.GPU_DISJOINT_EXT ? getParameter(ext.GPU_DISJOINT_EXT) : 0;\n  },\n\n  // Extension fixed values\n  [GL_UNMASKED_VENDOR_WEBGL]: (gl, getParameter) => {\n    const ext = gl.getExtension(WEBGL_debug_renderer_info);\n    return getParameter((ext && ext.UNMASKED_VENDOR_WEBGL) || GL.VENDOR);\n  },\n\n  [GL_UNMASKED_RENDERER_WEBGL]: (gl, getParameter) => {\n    const ext = gl.getExtension(WEBGL_debug_renderer_info);\n    return getParameter((ext && ext.UNMASKED_RENDERER_WEBGL) || GL.RENDERER);\n  },\n\n  // Extension LIMITS\n  [GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT]: (gl, getParameter) => {\n    const ext = gl.luma.extensions[EXT_texture_filter_anisotropic];\n    return ext ? getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1.0;\n  },\n\n  // WebGL2 Limits\n  [GL.MAX_3D_TEXTURE_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_ARRAY_TEXTURE_LAYERS]: getWebGL2ValueOrZero,\n  [GL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL]: getWebGL2ValueOrZero,\n  [GL.MAX_COLOR_ATTACHMENTS]: (gl, getParameter) => {\n    if (!isWebGL2(gl)) {\n      const ext = gl.getExtension(WEBGL_draw_buffers);\n      return ext ? getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL) : 0;\n    }\n    return undefined;\n  },\n  [GL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_DRAW_BUFFERS]: gl => {\n    if (!isWebGL2(gl)) {\n      const ext = gl.getExtension(WEBGL_draw_buffers);\n      return ext ? ext.MAX_DRAW_BUFFERS_WEBGL : 0;\n    }\n    return undefined;\n  },\n  [GL.MAX_ELEMENT_INDEX]:\n    // Guess: per webglstats.com 99.6% of webgl2 supports 2147483647\n    gl => (gl.getExtension(OES_element_index) ? 2147483647 : 65535),\n  [GL.MAX_ELEMENTS_INDICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => (gl.getExtension(OES_element_index) ? 16777216 : 65535),\n  [GL.MAX_ELEMENTS_VERTICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => 16777216,\n  [GL.MAX_FRAGMENT_INPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_SAMPLES]: getWebGL2ValueOrZero,\n  [GL.MAX_SERVER_WAIT_TIMEOUT]: getWebGL2ValueOrZero,\n  [GL.MAX_TEXTURE_LOD_BIAS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BLOCK_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BUFFER_BINDINGS]: getWebGL2ValueOrZero,\n  [GL.MAX_VARYING_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_OUTPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MIN_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.MAX_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT]: getWebGL2ValueOrZero\n};\n\n// A \"replacement\" gl.getParameter that accepts \"enums\" from extensions and WebGL2\n// and returns reasonably safe defaults\nexport function getParameterPolyfill(gl, originalGetParameter, pname) {\n  // Return mock limits (usually 0) for WebGL2 constants to ensure these\n  // can be queries without error\n  const limit = WEBGL_PARAMETERS[pname];\n  const value = typeof limit === 'function' ? limit(gl, originalGetParameter, pname) : limit;\n  const result = value !== undefined ? value : originalGetParameter(pname);\n  return result;\n}\n"],"file":"get-parameter-polyfill.js"}