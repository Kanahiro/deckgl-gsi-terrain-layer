{"version":3,"sources":["../../../src/state-tracker/webgl-parameter-tables.js"],"names":["isWebGL2","GL_PARAMETER_DEFAULTS","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","bindFramebuffer","readFramebuffer","isArray","array","Array","ArrayBuffer","isView","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","framebuffer","handle","blend","blendEquation","args","blendEquationSeparate","blendFunc","length","blendFuncSeparate","cull","depthTest","dither","derivativeHint","mipmapHint","polygonOffsetFill","polygonOffset","sampleCoverage","scissorTest","stencilTest","stencilMask","mask","backMask","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","getValue","glEnum","values","cache","undefined","GL_COMPOSITE_PARAMETER_SETTERS","stencilFuncFront","stencilFuncBack","stencilOpFront","stencilOpBack","GL_HOOKED_SETTERS","update","capability","pname","r","g","b","a","mode","modeRGB","modeAlpha","src","dst","srcRGB","dstRGB","srcAlpha","dstAlpha","depth","s","zNear","zFar","face","width","factor","units","invert","x","y","height","fail","zfail","zpass","isEnabled","GL_PARAMETER_GETTERS"],"mappings":"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","sourcesContent":["// Tables describing WebGL parameters\nimport GL from '@luma.gl/constants';\nimport {isWebGL2} from '../utils';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => (value ? gl.enable(key) : gl.disable(key));\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Utility\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => (value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND)),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => (value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE)),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => (value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST)),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => (value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER)),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => (value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST)),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => (value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST)),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update, capability) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update, capability) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update, pname, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update, pname, hint) =>\n    update({\n      [pname]: hint\n    }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update, depth) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update, s) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update, zNear, zFar) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update, mask) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n"],"file":"webgl-parameter-tables.js"}