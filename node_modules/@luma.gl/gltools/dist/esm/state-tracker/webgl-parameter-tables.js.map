{"version":3,"sources":["../../../src/state-tracker/webgl-parameter-tables.js"],"names":["isWebGL2","GL_PARAMETER_DEFAULTS","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","bindFramebuffer","readFramebuffer","isArray","array","Array","ArrayBuffer","isView","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","framebuffer","handle","args","blendEquationSeparate","length","blendFuncSeparate","polygonOffset","sampleCoverage","mask","backMask","func","ref","backFunc","backRef","stencilFuncSeparate","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","getValue","glEnum","values","cache","undefined","GL_COMPOSITE_PARAMETER_SETTERS","blendEquation","blendFunc","stencilFuncFront","stencilFuncBack","stencilOpFront","stencilOpBack","GL_HOOKED_SETTERS","update","capability","pname","r","g","b","a","mode","modeRGB","modeAlpha","src","dst","srcRGB","dstRGB","srcAlpha","dstAlpha","depth","s","zNear","zFar","face","width","factor","units","invert","x","y","height","stencilMask","stencilFunc","stencilOp","fail","zfail","zpass","isEnabled","GL_PARAMETER_GETTERS"],"mappings":"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","sourcesContent":["// Tables describing WebGL parameters\nimport GL from '@luma.gl/constants';\nimport {isWebGL2} from '../utils';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => (value ? gl.enable(key) : gl.disable(key));\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Utility\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => (value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND)),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => (value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE)),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => (value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST)),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => (value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER)),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => (value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST)),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => (value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST)),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update, capability) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update, capability) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update, pname, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update, pname, hint) =>\n    update({\n      [pname]: hint\n    }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update, depth) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update, s) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update, zNear, zFar) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update, mask) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n"],"file":"webgl-parameter-tables.js"}