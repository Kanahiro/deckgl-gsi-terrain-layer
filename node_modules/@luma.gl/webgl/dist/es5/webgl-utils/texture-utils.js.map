{"version":3,"sources":["../../../src/webgl-utils/texture-utils.js"],"names":["cloneTextureFrom","refTexture","overrides","Texture2D","TextureCube","Texture3D","TextureType","constructor","gl","width","height","format","type","dataFormat","border","mipmaps","textureOptions","Object","assign","toFramebuffer","texture","opts","id","framebuffer","Framebuffer","attachments"],"mappings":";;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAGO,SAASA,gBAAT,CAA0BC,UAA1B,EAAsCC,SAAtC,EAAiD;AACtD,qBACED,UAAU,YAAYE,qBAAtB,IACEF,UAAU,YAAYG,uBADxB,IAEEH,UAAU,YAAYI,qBAH1B;AAMA,MAAMC,WAAW,GAAGL,UAAU,CAACM,WAA/B;AAPsD,MAS/CC,EAT+C,GASiBP,UATjB,CAS/CO,EAT+C;AAAA,MAS3CC,KAT2C,GASiBR,UATjB,CAS3CQ,KAT2C;AAAA,MASpCC,MAToC,GASiBT,UATjB,CASpCS,MAToC;AAAA,MAS5BC,MAT4B,GASiBV,UATjB,CAS5BU,MAT4B;AAAA,MASpBC,IAToB,GASiBX,UATjB,CASpBW,IAToB;AAAA,MASdC,UATc,GASiBZ,UATjB,CASdY,UATc;AAAA,MASFC,MATE,GASiBb,UATjB,CASFa,MATE;AAAA,MASMC,OATN,GASiBd,UATjB,CASMc,OATN;AAWtD,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CACrB;AACET,IAAAA,KAAK,EAALA,KADF;AAEEC,IAAAA,MAAM,EAANA,MAFF;AAGEC,IAAAA,MAAM,EAANA,MAHF;AAIEC,IAAAA,IAAI,EAAJA,IAJF;AAKEC,IAAAA,UAAU,EAAVA,UALF;AAMEC,IAAAA,MAAM,EAANA,MANF;AAOEC,IAAAA,OAAO,EAAPA;AAPF,GADqB,EAUrBb,SAVqB,CAAvB;AAcA,SAAO,IAAII,WAAJ,CAAgBE,EAAhB,EAAoBQ,cAApB,CAAP;AACD;;AAIM,SAASG,aAAT,CAAuBC,OAAvB,EAAgCC,IAAhC,EAAsC;AAAA,MACpCb,EADoC,GACXY,OADW,CACpCZ,EADoC;AAAA,MAChCC,KADgC,GACXW,OADW,CAChCX,KADgC;AAAA,MACzBC,MADyB,GACXU,OADW,CACzBV,MADyB;AAAA,MACjBY,EADiB,GACXF,OADW,CACjBE,EADiB;AAE3C,MAAMC,WAAW,GAAG,IAAIC,uBAAJ,CAClBhB,EADkB,EAElBS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBG,IAAlB,EAAwB;AACtBC,IAAAA,EAAE,4BAAqBA,EAArB,CADoB;AAEtBb,IAAAA,KAAK,EAALA,KAFsB;AAGtBC,IAAAA,MAAM,EAANA,MAHsB;AAItBe,IAAAA,WAAW,8CACeL,OADf;AAJW,GAAxB,CAFkB,CAApB;AAWA,SAAOG,WAAP;AACD","sourcesContent":["// TODO: Two subdirectories must not depend on each other (classes vs utils)!\nimport Texture2D from '../classes/texture-2d';\nimport TextureCube from '../classes/texture-cube';\nimport Texture3D from '../classes/texture-3d';\nimport Framebuffer from '../classes/framebuffer';\nimport GL from '@luma.gl/constants';\nimport {assert} from '../utils';\n\n// Clone a new texture object from a reference texture object.\nexport function cloneTextureFrom(refTexture, overrides) {\n  assert(\n    refTexture instanceof Texture2D ||\n      refTexture instanceof TextureCube ||\n      refTexture instanceof Texture3D\n  );\n\n  const TextureType = refTexture.constructor;\n\n  const {gl, width, height, format, type, dataFormat, border, mipmaps} = refTexture;\n\n  const textureOptions = Object.assign(\n    {\n      width,\n      height,\n      format,\n      type,\n      dataFormat,\n      border,\n      mipmaps\n    },\n    overrides\n  );\n\n  // TODO: move this to `Texture` class as instance method and use this.constructor\n  return new TextureType(gl, textureOptions);\n}\n\n// Wraps a given texture into a framebuffer object, that can be further used\n// to read data from the texture object.\nexport function toFramebuffer(texture, opts) {\n  const {gl, width, height, id} = texture;\n  const framebuffer = new Framebuffer(\n    gl,\n    Object.assign({}, opts, {\n      id: `framebuffer-for-${id}`,\n      width,\n      height,\n      attachments: {\n        [GL.COLOR_ATTACHMENT0]: texture\n      }\n    })\n  );\n  return framebuffer;\n}\n"],"file":"texture-utils.js"}