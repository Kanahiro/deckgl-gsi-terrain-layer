{"version":3,"sources":["../../../src/webgl-utils/attribute-utils.js"],"names":["GL_BYTE","GL_UNSIGNED_BYTE","GL_SHORT","GL_UNSIGNED_SHORT","GL_POINTS","GL_LINES","GL_LINE_LOOP","GL_LINE_STRIP","GL_TRIANGLES","GL_TRIANGLE_STRIP","GL_TRIANGLE_FAN","GL_FLOAT","GL_FLOAT_VEC2","GL_FLOAT_VEC3","GL_FLOAT_VEC4","GL_INT","GL_INT_VEC2","GL_INT_VEC3","GL_INT_VEC4","GL_UNSIGNED_INT","GL_UNSIGNED_INT_VEC2","GL_UNSIGNED_INT_VEC3","GL_UNSIGNED_INT_VEC4","GL_BOOL","GL_BOOL_VEC2","GL_BOOL_VEC3","GL_BOOL_VEC4","GL_FLOAT_MAT2","GL_FLOAT_MAT3","GL_FLOAT_MAT4","GL_FLOAT_MAT2x3","GL_FLOAT_MAT2x4","GL_FLOAT_MAT3x2","GL_FLOAT_MAT3x4","GL_FLOAT_MAT4x2","GL_FLOAT_MAT4x3","COMPOSITE_GL_TYPES","getPrimitiveDrawMode","drawMode","getPrimitiveCount","vertexCount","getVertexCount","primitiveCount","decomposeCompositeGLType","compositeGLType","typeAndSize","type","components","getCompositeGLType","glType","compType","compComponents","name"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport {assert} from '../utils';\n\nconst GL_BYTE = 0x1400;\nconst GL_UNSIGNED_BYTE = 0x1401;\nconst GL_SHORT = 0x1402;\nconst GL_UNSIGNED_SHORT = 0x1403;\n\nconst GL_POINTS = 0x0;\nconst GL_LINES = 0x1;\nconst GL_LINE_LOOP = 0x2;\nconst GL_LINE_STRIP = 0x3;\nconst GL_TRIANGLES = 0x4;\nconst GL_TRIANGLE_STRIP = 0x5;\nconst GL_TRIANGLE_FAN = 0x6;\n\n// Local constants - these will \"collapse\" during minification\nconst GL_FLOAT = 0x1406;\nconst GL_FLOAT_VEC2 = 0x8b50;\nconst GL_FLOAT_VEC3 = 0x8b51;\nconst GL_FLOAT_VEC4 = 0x8b52;\n\nconst GL_INT = 0x1404;\nconst GL_INT_VEC2 = 0x8b53;\nconst GL_INT_VEC3 = 0x8b54;\nconst GL_INT_VEC4 = 0x8b55;\n\nconst GL_UNSIGNED_INT = 0x1405;\nconst GL_UNSIGNED_INT_VEC2 = 0x8dc6;\nconst GL_UNSIGNED_INT_VEC3 = 0x8dc7;\nconst GL_UNSIGNED_INT_VEC4 = 0x8dc8;\n\nconst GL_BOOL = 0x8b56;\nconst GL_BOOL_VEC2 = 0x8b57;\nconst GL_BOOL_VEC3 = 0x8b58;\nconst GL_BOOL_VEC4 = 0x8b59;\n\nconst GL_FLOAT_MAT2 = 0x8b5a;\nconst GL_FLOAT_MAT3 = 0x8b5b;\nconst GL_FLOAT_MAT4 = 0x8b5c;\n\nconst GL_FLOAT_MAT2x3 = 0x8b65;\nconst GL_FLOAT_MAT2x4 = 0x8b66;\nconst GL_FLOAT_MAT3x2 = 0x8b67;\nconst GL_FLOAT_MAT3x4 = 0x8b68;\nconst GL_FLOAT_MAT4x2 = 0x8b69;\nconst GL_FLOAT_MAT4x3 = 0x8b6a;\n\n// Composite types table\nconst COMPOSITE_GL_TYPES = {\n  [GL_FLOAT]: [GL_FLOAT, 1, 'float'],\n  [GL_FLOAT_VEC2]: [GL_FLOAT, 2, 'vec2'],\n  [GL_FLOAT_VEC3]: [GL_FLOAT, 3, 'vec3'],\n  [GL_FLOAT_VEC4]: [GL_FLOAT, 4, 'vec4'],\n\n  [GL_INT]: [GL_INT, 1, 'int'],\n  [GL_INT_VEC2]: [GL_INT, 2, 'ivec2'],\n  [GL_INT_VEC3]: [GL_INT, 3, 'ivec3'],\n  [GL_INT_VEC4]: [GL_INT, 4, 'ivec4'],\n\n  [GL_UNSIGNED_INT]: [GL_UNSIGNED_INT, 1, 'uint'],\n  [GL_UNSIGNED_INT_VEC2]: [GL_UNSIGNED_INT, 2, 'uvec2'],\n  [GL_UNSIGNED_INT_VEC3]: [GL_UNSIGNED_INT, 3, 'uvec3'],\n  [GL_UNSIGNED_INT_VEC4]: [GL_UNSIGNED_INT, 4, 'uvec4'],\n\n  [GL_BOOL]: [GL_FLOAT, 1, 'bool'],\n  [GL_BOOL_VEC2]: [GL_FLOAT, 2, 'bvec2'],\n  [GL_BOOL_VEC3]: [GL_FLOAT, 3, 'bvec3'],\n  [GL_BOOL_VEC4]: [GL_FLOAT, 4, 'bvec4'],\n\n  [GL_FLOAT_MAT2]: [GL_FLOAT, 8, 'mat2'], // 4\n  [GL_FLOAT_MAT2x3]: [GL_FLOAT, 8, 'mat2x3'], // 6\n  [GL_FLOAT_MAT2x4]: [GL_FLOAT, 8, 'mat2x4'], // 8\n\n  [GL_FLOAT_MAT3]: [GL_FLOAT, 12, 'mat3'], // 9\n  [GL_FLOAT_MAT3x2]: [GL_FLOAT, 12, 'mat3x2'], // 6\n  [GL_FLOAT_MAT3x4]: [GL_FLOAT, 12, 'mat3x4'], // 12\n\n  [GL_FLOAT_MAT4]: [GL_FLOAT, 16, 'mat4'], // 16\n  [GL_FLOAT_MAT4x2]: [GL_FLOAT, 16, 'mat4x2'], // 8\n  [GL_FLOAT_MAT4x3]: [GL_FLOAT, 16, 'mat4x3'] // 12\n};\n\n// Counts the number of complete primitives given a number of vertices and a drawMode\nexport function getPrimitiveDrawMode(drawMode) {\n  switch (drawMode) {\n    case GL_POINTS:\n      return GL_POINTS;\n    case GL_LINES:\n      return GL_LINES;\n    case GL_LINE_STRIP:\n      return GL_LINES;\n    case GL_LINE_LOOP:\n      return GL_LINES;\n    case GL_TRIANGLES:\n      return GL_TRIANGLES;\n    case GL_TRIANGLE_STRIP:\n      return GL_TRIANGLES;\n    case GL_TRIANGLE_FAN:\n      return GL_TRIANGLES;\n    default:\n      assert(false);\n      return 0;\n  }\n}\n\n// Counts the number of complete \"primitives\" given a number of vertices and a drawMode\nexport function getPrimitiveCount({drawMode, vertexCount}) {\n  switch (drawMode) {\n    case GL_POINTS:\n    case GL_LINE_LOOP:\n      return vertexCount;\n    case GL_LINES:\n      return vertexCount / 2;\n    case GL_LINE_STRIP:\n      return vertexCount - 1;\n    case GL_TRIANGLES:\n      return vertexCount / 3;\n    case GL_TRIANGLE_STRIP:\n    case GL_TRIANGLE_FAN:\n      return vertexCount - 2;\n    default:\n      assert(false);\n      return 0;\n  }\n}\n\n// Counts the number of vertices after splitting the vertex stream into separate \"primitives\"\nexport function getVertexCount({drawMode, vertexCount}) {\n  const primitiveCount = getPrimitiveCount({drawMode, vertexCount});\n  switch (getPrimitiveDrawMode(drawMode)) {\n    case GL_POINTS:\n      return primitiveCount;\n    case GL_LINES:\n      return primitiveCount * 2;\n    case GL_TRIANGLES:\n      return primitiveCount * 3;\n    default:\n      assert(false);\n      return 0;\n  }\n}\n\n// Decomposes a composite type GL.VEC3 into a basic type (GL.FLOAT) and components (3)\nexport function decomposeCompositeGLType(compositeGLType) {\n  const typeAndSize = COMPOSITE_GL_TYPES[compositeGLType];\n  if (!typeAndSize) {\n    return null;\n  }\n  const [type, components] = typeAndSize;\n  return {type, components};\n}\n\nexport function getCompositeGLType(type, components) {\n  switch (type) {\n    case GL_BYTE:\n    case GL_UNSIGNED_BYTE:\n    case GL_SHORT:\n    case GL_UNSIGNED_SHORT:\n      type = GL_FLOAT;\n      break;\n    default:\n  }\n\n  for (const glType in COMPOSITE_GL_TYPES) {\n    const [compType, compComponents, name] = COMPOSITE_GL_TYPES[glType];\n    if (compType === type && compComponents === components) {\n      return {glType, name};\n    }\n  }\n  return null;\n}\n"],"file":"attribute-utils.js"}