{"version":3,"sources":["../../../src/gltf/gltf-instantiator.js"],"names":["ATTRIBUTE_TYPE_TO_COMPONENTS","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","DEFAULT_OPTIONS","modelOptions","pbrDebug","imageBasedLightingEnvironment","lights","useTangents","GLTFInstantiator","gl","options","Object","assign","gltf","scenes","map","scene","createScene","Array","isArray","animations","GLTFAnimator","gltfScene","gltfNodes","nodes","node","createNode","GroupNode","id","name","children","gltfNode","_node","gltfChildren","child","mesh","push","createMesh","matrix","setMatrix","identity","translation","translate","rotation","rotationMatrix","Matrix4","fromQuaternion","multiplyRight","scale","gltfMesh","_mesh","gltfPrimitives","primitives","gltfPrimitive","i","createPrimitive","attributes","log","warn","drawMode","mode","vertexCount","indices","count","getVertexCount","createAttributes","material","loadedAttributes","keys","forEach","attrName","createAccessor","createBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","info","generated","attribute","target","bufferView","lumaBuffers","Buffer","data","value","accessor","buffer","Accessor","offset","byteOffset","stride","byteStride","type","componentType","size","gltfSampler"],"mappings":"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","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {Buffer, Accessor, log} from '@luma.gl/webgl';\nimport {GroupNode} from '../scenegraph/';\n\nimport GLTFAnimator from './gltf-animator';\nimport createGLTFModel from './create-gltf-model';\n\n// TODO: import {ATTRIBUTE_TYPE_TO_COMPONENTS} from '@loaders.gl/gltf';\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst DEFAULT_OPTIONS = {\n  modelOptions: {},\n  pbrDebug: false,\n  imageBasedLightingEnvironment: null,\n  lights: true,\n  useTangents: false\n};\n\n// GLTF instantiator for luma.gl\n// Walks the parsed and resolved glTF structure and builds a luma.gl scenegraph\nexport default class GLTFInstantiator {\n  constructor(gl, options = {}) {\n    this.gl = gl;\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n  }\n\n  instantiate(gltf) {\n    this.gltf = gltf;\n    const scenes = (gltf.scenes || []).map(scene => this.createScene(scene));\n    return scenes;\n  }\n\n  createAnimator() {\n    if (Array.isArray(this.gltf.animations)) {\n      return new GLTFAnimator(this.gltf);\n    }\n\n    return null;\n  }\n\n  createScene(gltfScene) {\n    const gltfNodes = gltfScene.nodes || [];\n    const nodes = gltfNodes.map(node => this.createNode(node));\n    const scene = new GroupNode({\n      id: gltfScene.name || gltfScene.id,\n      children: nodes\n    });\n    return scene;\n  }\n\n  createNode(gltfNode) {\n    if (!gltfNode._node) {\n      const gltfChildren = gltfNode.children || [];\n      const children = gltfChildren.map(child => this.createNode(child));\n\n      // Node can have children nodes and meshes at the same time\n      if (gltfNode.mesh) {\n        children.push(this.createMesh(gltfNode.mesh));\n      }\n\n      const node = new GroupNode({\n        id: gltfNode.name || gltfNode.id,\n        children\n      });\n\n      if (gltfNode.matrix) {\n        node.setMatrix(gltfNode.matrix);\n      } else {\n        node.matrix.identity();\n\n        if (gltfNode.translation) {\n          node.matrix.translate(gltfNode.translation);\n        }\n\n        if (gltfNode.rotation) {\n          const rotationMatrix = new Matrix4().fromQuaternion(gltfNode.rotation);\n          node.matrix.multiplyRight(rotationMatrix);\n        }\n\n        if (gltfNode.scale) {\n          node.matrix.scale(gltfNode.scale);\n        }\n      }\n      gltfNode._node = node;\n    }\n\n    return gltfNode._node;\n  }\n\n  createMesh(gltfMesh) {\n    // TODO: avoid changing the gltf\n    if (!gltfMesh._mesh) {\n      const gltfPrimitives = gltfMesh.primitives || [];\n      const primitives = gltfPrimitives.map((gltfPrimitive, i) =>\n        this.createPrimitive(gltfPrimitive, i, gltfMesh)\n      );\n      const mesh = new GroupNode({\n        id: gltfMesh.name || gltfMesh.id,\n        children: primitives\n      });\n      gltfMesh._mesh = mesh;\n    }\n\n    return gltfMesh._mesh;\n  }\n\n  getVertexCount(attributes) {\n    // TODO: implement this\n    log.warn('getVertexCount() not found')();\n  }\n\n  createPrimitive(gltfPrimitive, i, gltfMesh) {\n    return createGLTFModel(\n      this.gl,\n      Object.assign(\n        {\n          id: gltfPrimitive.name || `${gltfMesh.name || gltfMesh.id}-primitive-${i}`,\n          drawMode: gltfPrimitive.mode || 4,\n          vertexCount: gltfPrimitive.indices\n            ? gltfPrimitive.indices.count\n            : this.getVertexCount(gltfPrimitive.attributes),\n          attributes: this.createAttributes(gltfPrimitive.attributes, gltfPrimitive.indices),\n          material: gltfPrimitive.material\n        },\n        this.options\n      )\n    );\n  }\n\n  createAttributes(attributes, indices) {\n    const loadedAttributes = {};\n\n    Object.keys(attributes).forEach(attrName => {\n      loadedAttributes[attrName] = this.createAccessor(\n        attributes[attrName],\n        this.createBuffer(attributes[attrName], this.gl.ARRAY_BUFFER)\n      );\n    });\n\n    if (indices) {\n      loadedAttributes.indices = this.createAccessor(\n        indices,\n        this.createBuffer(indices, this.gl.ELEMENT_ARRAY_BUFFER)\n      );\n    }\n\n    log.info(4, 'glTF Attributes', {attributes, indices, generated: loadedAttributes})();\n\n    return loadedAttributes;\n  }\n\n  createBuffer(attribute, target) {\n    if (!attribute.bufferView) {\n      // Draco decoded files do not have a bufferView\n      attribute.bufferView = {};\n    }\n\n    const {bufferView} = attribute;\n    if (!bufferView.lumaBuffers) {\n      bufferView.lumaBuffers = {};\n    }\n\n    if (!bufferView.lumaBuffers[target]) {\n      bufferView.lumaBuffers[target] = new Buffer(this.gl, {\n        id: `from-${bufferView.id}`,\n        // Draco decoded files have attribute.value\n        data: bufferView.data || attribute.value,\n        target\n      });\n    }\n\n    return bufferView.lumaBuffers[target];\n  }\n\n  createAccessor(accessor, buffer) {\n    return new Accessor({\n      buffer,\n      offset: accessor.byteOffset || 0,\n      stride: accessor.bufferView.byteStride || 0,\n      type: accessor.componentType,\n      size: ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type]\n    });\n  }\n\n  // TODO - create sampler in WebGL2\n  createSampler(gltfSampler) {\n    return gltfSampler;\n  }\n\n  // Helper methods (move to GLTFLoader.resolve...?)\n\n  needsPOT() {\n    // Has a wrapping mode (either wrapS or wrapT) equal to REPEAT or MIRRORED_REPEAT, or\n    // Has a minification filter (minFilter) that uses mipmapping\n    // (NEAREST_MIPMAP_NEAREST, NEAREST_MIPMAP_LINEAR,\n    // LINEAR_MIPMAP_NEAREST, or LINEAR_MIPMAP_LINEAR).\n    return false;\n  }\n}\n"],"file":"gltf-instantiator.js"}