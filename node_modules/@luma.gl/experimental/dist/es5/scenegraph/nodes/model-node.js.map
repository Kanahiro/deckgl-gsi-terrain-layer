{"version":3,"sources":["../../../../src/scenegraph/nodes/model-node.js"],"names":["ModelNode","gl","props","onBeforeRender","AfterRender","Model","model","_setModelNodeProps","managedResources","forEach","resource","draw","setUniforms","setAttributes","updateModuleSettings","setProps","ScenegraphNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;IAEqBA,S;;;AACnB,qBAAYC,EAAZ,EAA4B;AAAA;;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AAAA;AAC1B,qHAAMA,KAAN;AAGA,UAAKC,cAAL,GAAsB,IAAtB;AACA,UAAKC,WAAL,GAAmB,IAAnB;;AAGA,QAAIH,EAAE,YAAYI,aAAlB,EAAyB;AACvB,YAAKC,KAAL,GAAaL,EAAb;;AACA,YAAKM,kBAAL,CAAwBL,KAAxB;AACD,KAHD,MAGO;AACL,YAAKI,KAAL,GAAa,IAAID,aAAJ,CAAUJ,EAAV,EAAcC,KAAd,CAAb;AACD;;AAED,UAAKM,gBAAL,GAAwBN,KAAK,CAACM,gBAAN,IAA0B,EAAlD;AAf0B;AAgB3B;;;;6BAEQN,K,EAAO;AACd,gHAAeA,KAAf;;AACA,WAAKK,kBAAL,CAAwBL,KAAxB;;AACA,aAAO,IAAP;AACD;;;8BAEQ;AACP,UAAI,KAAKI,KAAT,EAAgB;AACd,aAAKA,KAAL;AACA,aAAKA,KAAL,GAAa,IAAb;AACD;;AAED,WAAKE,gBAAL,CAAsBC,OAAtB,CAA8B,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,UAAR,EAAJ;AAAA,OAAtC;AACA,WAAKF,gBAAL,GAAwB,EAAxB;AACD;;;2BAGa;AAAA;;AAEZ,aAAO,oBAAKF,KAAL,EAAWK,IAAX,8BAAP;AACD;;;kCAEoB;AAAA;;AACnB,2BAAKL,KAAL,EAAWM,WAAX;;AACA,aAAO,IAAP;AACD;;;oCAEsB;AAAA;;AACrB,2BAAKN,KAAL,EAAWO,aAAX;;AACA,aAAO,IAAP;AACD;;;2CAE6B;AAAA;;AAC5B,2BAAKP,KAAL,EAAWQ,oBAAX;;AACA,aAAO,IAAP;AACD;;;uCAIkBZ,K,EAAO;AACxB,WAAKI,KAAL,CAAWS,QAAX,CAAoBb,KAApB;AACD;;;EA5DoCc,0B","sourcesContent":["import {Model} from '@luma.gl/engine';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"file":"model-node.js"}