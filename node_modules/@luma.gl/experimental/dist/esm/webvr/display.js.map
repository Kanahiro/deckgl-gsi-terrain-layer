{"version":3,"sources":["../../../src/webvr/display.js"],"names":["withParameters","Display","options","width","height","params","viewport","scissor","scissorTest","renderFrame","views","getViews","gl","animationLoop","view","onRender","submitFrame"],"mappings":";;;AAAA,SAAQA,cAAR,QAA6B,kBAA7B;;IAEqBC,O;;;;;;;6BACVC,O,EAAS;AAAA,UACTC,KADS,GACQD,OADR,CACTC,KADS;AAAA,UACFC,MADE,GACQF,OADR,CACFE,MADE;AAEhB,aAAO,CACL;AACEC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOH,KAAP,EAAcC,MAAd,CADJ;AAENG,UAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOJ,KAAP,EAAcC,MAAd,CAFH;AAGNI,UAAAA,WAAW,EAAE;AAHP;AADV,OADK,CAAP;AASD;;;kCAEa;AACZ,aAAO,IAAP;AACD;;;0CAGqBC,W,EAAa;AACjC,aAAO,KAAP;AACD;;;8BAEQ,CAAE;;;iCAGEP,O,EAAS;AAAA;;AACpB,UAAMQ,KAAK,GAAG,KAAKC,QAAL,CAAcT,OAAd,CAAd;;AACA,UAAI,CAACQ,KAAL,EAAY;AACV,eAAO,KAAP;AACD;;AAJmB,UAMbE,EANa,GAMP,KAAKC,aANE,CAMbD,EANa;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,cAOTE,IAPS;AAQlBd,UAAAA,cAAc,CAACY,EAAD,EAAKE,IAAI,CAACT,MAAV,EAAkB;AAAA,mBAAM,KAAI,CAACQ,aAAL,CAAmBE,QAAnB,mBAAgCb,OAAhC,EAA4CY,IAA5C,EAAN;AAAA,WAAlB,CAAd;AARkB;;AAOpB,6BAAmBJ,KAAnB,8HAA0B;AAAA;AAEzB;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWpB,WAAKM,WAAL;AACA,aAAO,IAAP;AACD;;;;;;SAvCkBf,O","sourcesContent":["import {withParameters} from '@luma.gl/gltools';\n\nexport default class Display {\n  getViews(options) {\n    const {width, height} = options;\n    return [\n      {\n        params: {\n          viewport: [0, 0, width, height],\n          scissor: [0, 0, width, height],\n          scissorTest: true\n        }\n      }\n    ];\n  }\n\n  submitFrame() {\n    return true;\n  }\n\n  // return true if animation frame has been requested\n  requestAnimationFrame(renderFrame) {\n    return false;\n  }\n\n  delete() {}\n\n  // AnimationLoop calls this API\n  _renderFrame(options) {\n    const views = this.getViews(options);\n    if (!views) {\n      return false;\n    }\n\n    const {gl} = this.animationLoop;\n    for (const view of views) {\n      withParameters(gl, view.params, () => this.animationLoop.onRender({...options, ...view}));\n    }\n\n    this.submitFrame();\n    return true;\n  }\n}\n"],"file":"display.js"}