{"version":3,"sources":["../../../../src/scenegraph/nodes/model-node.js"],"names":["Model","ScenegraphNode","ModelNode","constructor","gl","props","onBeforeRender","AfterRender","model","_setModelNodeProps","managedResources","setProps","delete","forEach","resource","draw","args","setUniforms","setAttributes","updateModuleSettings"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,eAAe,MAAMC,SAAN,SAAwBD,cAAxB,CAAuC;AACpDE,EAAAA,WAAW,CAACC,EAAD,EAAKC,KAAK,GAAG,EAAb,EAAiB;AAC1B,UAAMA,KAAN;AAGA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,WAAL,GAAmB,IAAnB;;AAGA,QAAIH,EAAE,YAAYJ,KAAlB,EAAyB;AACvB,WAAKQ,KAAL,GAAaJ,EAAb;;AACA,WAAKK,kBAAL,CAAwBJ,KAAxB;AACD,KAHD,MAGO;AACL,WAAKG,KAAL,GAAa,IAAIR,KAAJ,CAAUI,EAAV,EAAcC,KAAd,CAAb;AACD;;AAED,SAAKK,gBAAL,GAAwBL,KAAK,CAACK,gBAAN,IAA0B,EAAlD;AACD;;AAEDC,EAAAA,QAAQ,CAACN,KAAD,EAAQ;AACd,UAAMM,QAAN,CAAeN,KAAf;;AACA,SAAKI,kBAAL,CAAwBJ,KAAxB;;AACA,WAAO,IAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKJ,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWI,MAAX;AACA,WAAKJ,KAAL,GAAa,IAAb;AACD;;AAED,SAAKE,gBAAL,CAAsBG,OAAtB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACF,MAAT,EAA1C;AACA,SAAKF,gBAAL,GAAwB,EAAxB;AACD;;AAGDK,EAAAA,IAAI,CAAC,GAAGC,IAAJ,EAAU;AAEZ,WAAO,KAAKR,KAAL,CAAWO,IAAX,CAAgB,GAAGC,IAAnB,CAAP;AACD;;AAEDC,EAAAA,WAAW,CAAC,GAAGD,IAAJ,EAAU;AACnB,SAAKR,KAAL,CAAWS,WAAX,CAAuB,GAAGD,IAA1B;AACA,WAAO,IAAP;AACD;;AAEDE,EAAAA,aAAa,CAAC,GAAGF,IAAJ,EAAU;AACrB,SAAKR,KAAL,CAAWU,aAAX,CAAyB,GAAGF,IAA5B;AACA,WAAO,IAAP;AACD;;AAEDG,EAAAA,oBAAoB,CAAC,GAAGH,IAAJ,EAAU;AAC5B,SAAKR,KAAL,CAAWW,oBAAX,CAAgC,GAAGH,IAAnC;AACA,WAAO,IAAP;AACD;;AAIDP,EAAAA,kBAAkB,CAACJ,KAAD,EAAQ;AACxB,SAAKG,KAAL,CAAWG,QAAX,CAAoBN,KAApB;AACD;;AA5DmD","sourcesContent":["import {Model} from '@luma.gl/engine';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"file":"model-node.js"}