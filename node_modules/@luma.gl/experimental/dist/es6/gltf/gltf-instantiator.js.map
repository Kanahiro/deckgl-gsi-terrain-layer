{"version":3,"sources":["../../../src/gltf/gltf-instantiator.js"],"names":["Matrix4","Buffer","Accessor","log","GroupNode","GLTFAnimator","createGLTFModel","ATTRIBUTE_TYPE_TO_COMPONENTS","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","DEFAULT_OPTIONS","modelOptions","pbrDebug","imageBasedLightingEnvironment","lights","useTangents","GLTFInstantiator","constructor","gl","options","Object","assign","instantiate","gltf","scenes","map","scene","createScene","createAnimator","Array","isArray","animations","gltfScene","gltfNodes","nodes","node","createNode","id","name","children","gltfNode","_node","gltfChildren","child","mesh","push","createMesh","matrix","setMatrix","identity","translation","translate","rotation","rotationMatrix","fromQuaternion","multiplyRight","scale","gltfMesh","_mesh","gltfPrimitives","primitives","gltfPrimitive","i","createPrimitive","getVertexCount","attributes","warn","drawMode","mode","vertexCount","indices","count","createAttributes","material","loadedAttributes","keys","forEach","attrName","createAccessor","createBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","info","generated","attribute","target","bufferView","lumaBuffers","data","value","accessor","buffer","offset","byteOffset","stride","byteStride","type","componentType","size","createSampler","gltfSampler","needsPOT"],"mappings":"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","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {Buffer, Accessor, log} from '@luma.gl/webgl';\nimport {GroupNode} from '../scenegraph/';\n\nimport GLTFAnimator from './gltf-animator';\nimport createGLTFModel from './create-gltf-model';\n\n// TODO: import {ATTRIBUTE_TYPE_TO_COMPONENTS} from '@loaders.gl/gltf';\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst DEFAULT_OPTIONS = {\n  modelOptions: {},\n  pbrDebug: false,\n  imageBasedLightingEnvironment: null,\n  lights: true,\n  useTangents: false\n};\n\n// GLTF instantiator for luma.gl\n// Walks the parsed and resolved glTF structure and builds a luma.gl scenegraph\nexport default class GLTFInstantiator {\n  constructor(gl, options = {}) {\n    this.gl = gl;\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n  }\n\n  instantiate(gltf) {\n    this.gltf = gltf;\n    const scenes = (gltf.scenes || []).map(scene => this.createScene(scene));\n    return scenes;\n  }\n\n  createAnimator() {\n    if (Array.isArray(this.gltf.animations)) {\n      return new GLTFAnimator(this.gltf);\n    }\n\n    return null;\n  }\n\n  createScene(gltfScene) {\n    const gltfNodes = gltfScene.nodes || [];\n    const nodes = gltfNodes.map(node => this.createNode(node));\n    const scene = new GroupNode({\n      id: gltfScene.name || gltfScene.id,\n      children: nodes\n    });\n    return scene;\n  }\n\n  createNode(gltfNode) {\n    if (!gltfNode._node) {\n      const gltfChildren = gltfNode.children || [];\n      const children = gltfChildren.map(child => this.createNode(child));\n\n      // Node can have children nodes and meshes at the same time\n      if (gltfNode.mesh) {\n        children.push(this.createMesh(gltfNode.mesh));\n      }\n\n      const node = new GroupNode({\n        id: gltfNode.name || gltfNode.id,\n        children\n      });\n\n      if (gltfNode.matrix) {\n        node.setMatrix(gltfNode.matrix);\n      } else {\n        node.matrix.identity();\n\n        if (gltfNode.translation) {\n          node.matrix.translate(gltfNode.translation);\n        }\n\n        if (gltfNode.rotation) {\n          const rotationMatrix = new Matrix4().fromQuaternion(gltfNode.rotation);\n          node.matrix.multiplyRight(rotationMatrix);\n        }\n\n        if (gltfNode.scale) {\n          node.matrix.scale(gltfNode.scale);\n        }\n      }\n      gltfNode._node = node;\n    }\n\n    return gltfNode._node;\n  }\n\n  createMesh(gltfMesh) {\n    // TODO: avoid changing the gltf\n    if (!gltfMesh._mesh) {\n      const gltfPrimitives = gltfMesh.primitives || [];\n      const primitives = gltfPrimitives.map((gltfPrimitive, i) =>\n        this.createPrimitive(gltfPrimitive, i, gltfMesh)\n      );\n      const mesh = new GroupNode({\n        id: gltfMesh.name || gltfMesh.id,\n        children: primitives\n      });\n      gltfMesh._mesh = mesh;\n    }\n\n    return gltfMesh._mesh;\n  }\n\n  getVertexCount(attributes) {\n    // TODO: implement this\n    log.warn('getVertexCount() not found')();\n  }\n\n  createPrimitive(gltfPrimitive, i, gltfMesh) {\n    return createGLTFModel(\n      this.gl,\n      Object.assign(\n        {\n          id: gltfPrimitive.name || `${gltfMesh.name || gltfMesh.id}-primitive-${i}`,\n          drawMode: gltfPrimitive.mode || 4,\n          vertexCount: gltfPrimitive.indices\n            ? gltfPrimitive.indices.count\n            : this.getVertexCount(gltfPrimitive.attributes),\n          attributes: this.createAttributes(gltfPrimitive.attributes, gltfPrimitive.indices),\n          material: gltfPrimitive.material\n        },\n        this.options\n      )\n    );\n  }\n\n  createAttributes(attributes, indices) {\n    const loadedAttributes = {};\n\n    Object.keys(attributes).forEach(attrName => {\n      loadedAttributes[attrName] = this.createAccessor(\n        attributes[attrName],\n        this.createBuffer(attributes[attrName], this.gl.ARRAY_BUFFER)\n      );\n    });\n\n    if (indices) {\n      loadedAttributes.indices = this.createAccessor(\n        indices,\n        this.createBuffer(indices, this.gl.ELEMENT_ARRAY_BUFFER)\n      );\n    }\n\n    log.info(4, 'glTF Attributes', {attributes, indices, generated: loadedAttributes})();\n\n    return loadedAttributes;\n  }\n\n  createBuffer(attribute, target) {\n    if (!attribute.bufferView) {\n      // Draco decoded files do not have a bufferView\n      attribute.bufferView = {};\n    }\n\n    const {bufferView} = attribute;\n    if (!bufferView.lumaBuffers) {\n      bufferView.lumaBuffers = {};\n    }\n\n    if (!bufferView.lumaBuffers[target]) {\n      bufferView.lumaBuffers[target] = new Buffer(this.gl, {\n        id: `from-${bufferView.id}`,\n        // Draco decoded files have attribute.value\n        data: bufferView.data || attribute.value,\n        target\n      });\n    }\n\n    return bufferView.lumaBuffers[target];\n  }\n\n  createAccessor(accessor, buffer) {\n    return new Accessor({\n      buffer,\n      offset: accessor.byteOffset || 0,\n      stride: accessor.bufferView.byteStride || 0,\n      type: accessor.componentType,\n      size: ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type]\n    });\n  }\n\n  // TODO - create sampler in WebGL2\n  createSampler(gltfSampler) {\n    return gltfSampler;\n  }\n\n  // Helper methods (move to GLTFLoader.resolve...?)\n\n  needsPOT() {\n    // Has a wrapping mode (either wrapS or wrapT) equal to REPEAT or MIRRORED_REPEAT, or\n    // Has a minification filter (minFilter) that uses mipmapping\n    // (NEAREST_MIPMAP_NEAREST, NEAREST_MIPMAP_LINEAR,\n    // LINEAR_MIPMAP_NEAREST, or LINEAR_MIPMAP_LINEAR).\n    return false;\n  }\n}\n"],"file":"gltf-instantiator.js"}