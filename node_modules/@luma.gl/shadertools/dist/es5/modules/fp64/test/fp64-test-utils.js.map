{"version":3,"sources":["../../../../../src/modules/fp64/test/fp64-test-utils.js"],"names":["BUFFER_DATA","Float32Array","fp64ify","a","hi","Math","fround","lo","getFloat64","upper","random","pow","getRelativeError64","result","reference","reference64","result64","abs","getRelativeError","getBinaryShader","operation","getUnaryShader","FS_RENDER_VCOLOR","setupFloatTest","gl","glslFunc","binary","limit","op","b","expected","a_fp64","b_fp64","expected_fp64","vs","program","Program","fs","modules","fp64","setBuffers","positions","Buffer","target","data","size","setUniforms","ONE","ITERATIONS","EPSILON","testcase","t","idx0","gpu_result","relativeError","args","toPrecision","message","ok","comment","toString","end","canvas","document","createElement","width","height","window","onload","body","appendChild"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Special utility functions for df64 tests\n\n/* eslint-disable camelcase, prefer-template, max-len */\n/* global window, document, */\n\nimport {Buffer, Program} from '@luma.gl/webgl';\nimport {assembleShaders, fp64} from '@luma.gl/shadertools';\nimport {\n  initializeGL,\n  initializeTexTarget,\n  render,\n  getGPUOutput\n} from '../../../test/gpu-test-utils';\n\nconst BUFFER_DATA = new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]);\n\nfunction fp64ify(a) {\n  const hi = Math.fround(a);\n  const lo = a - Math.fround(a);\n  return new Float32Array([hi, lo]);\n}\n\nfunction getFloat64(upper = 256) {\n  return Math.random() * Math.pow(2.0, (Math.random() - 0.5) * upper);\n}\n\nexport function getRelativeError64(result, reference) {\n  const reference64 = reference[0] + reference[1];\n  const result64 = result[0] + result[1];\n  // When refrence valu is < 1, dividing with it increases total value of difference.\n  if (reference64 < 1) {\n    return Math.abs(reference64 - result64);\n  }\n  return Math.abs((reference64 - result64) / reference64);\n}\n\nexport function getRelativeError(result, reference) {\n  return Math.abs((reference - result) / reference);\n}\n\nfunction getBinaryShader(operation) {\n  return `\\\nattribute vec3 positions;\nuniform vec2 a;\nuniform vec2 b;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_Position = vec4(positions, 1.0);\n  vec2 result = ${operation}(a, b);\n  vColor = vec4(result.x, result.y, 0.0, 1.0);\n}\n`;\n}\n\nfunction getUnaryShader(operation) {\n  return `\\\nattribute vec3 positions;\nuniform vec2 a;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_Position = vec4(positions, 1.0);\n  vec2 result = ${operation}(a);\n  vColor = vec4(result.x, result.y, 0.0, 1.0);\n}\n`;\n}\n\nconst FS_RENDER_VCOLOR = `\\\nprecision highp float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n`;\n\nfunction setupFloatTest(gl, {glslFunc, binary = false, limit = 256, op}) {\n  const a = getFloat64(limit);\n  const b = getFloat64(limit);\n  const expected = op(a, b);\n\n  const a_fp64 = fp64ify(a);\n  const b_fp64 = fp64ify(b);\n  const expected_fp64 = fp64ify(expected);\n\n  const vs = binary ? getBinaryShader(glslFunc) : getUnaryShader(glslFunc);\n\n  const program = new Program(\n    gl,\n    assembleShaders(gl, {\n      vs,\n      fs: FS_RENDER_VCOLOR,\n      modules: [fp64]\n    })\n  );\n\n  program\n    .setBuffers({\n      positions: new Buffer(gl, {target: gl.ARRAY_BUFFER, data: BUFFER_DATA, size: 2})\n    })\n    .setUniforms({\n      a: a_fp64,\n      b: b_fp64,\n      ONE: 1.0\n    });\n\n  return {a, b, expected, a_fp64, b_fp64, expected_fp64, program};\n}\n\nconst ITERATIONS = 10;\nconst EPSILON = 1e-14;\n\nexport function testcase(gl, {glslFunc, binary, op, limit = 256, t}) {\n  for (let idx0 = 0; idx0 < ITERATIONS; idx0++) {\n    const {a, b, a_fp64, b_fp64, expected_fp64} = setupFloatTest(gl, {\n      glslFunc,\n      binary,\n      op,\n      limit\n    });\n    render(gl);\n    const gpu_result = getGPUOutput(gl);\n    const relativeError = getRelativeError64(gpu_result, expected_fp64);\n    const args = binary ? `(${a.toPrecision(2)}, ${b.toPrecision(2)})` : `(${a.toPrecision(2)})`;\n    const message = `${glslFunc}${args}: error=${relativeError}, within ${EPSILON}`;\n    t.ok(relativeError < EPSILON, message);\n    if (relativeError >= EPSILON) {\n      t.comment(` (tested ${a_fp64.toString()}, ${b_fp64.toString()})`);\n    }\n  }\n  t.end();\n}\n\n// Main entrance\nconst canvas = document.createElement('canvas');\ncanvas.width = 16;\ncanvas.height = 16;\n\nexport const gl = initializeGL(canvas);\ninitializeTexTarget(gl);\n\nwindow.onload = () => {\n  document.body.appendChild(canvas);\n};\n"],"file":"fp64-test-utils.js"}