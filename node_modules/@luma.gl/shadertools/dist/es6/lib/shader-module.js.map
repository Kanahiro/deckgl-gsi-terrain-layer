{"version":3,"sources":["../../../src/lib/shader-module.js"],"names":["assert","parsePropTypes","VERTEX_SHADER","FRAGMENT_SHADER","ShaderModule","constructor","name","vs","fs","dependencies","uniforms","getUniforms","deprecations","defines","inject","vertexShader","fragmentShader","getModuleUniforms","_parseDeprecationDefinitions","injections","normalizeInjections","getModuleSource","type","moduleSource","toUpperCase","replace","opts","_defaultGetUniforms","getDefines","checkDeprecations","shaderSource","log","forEach","def","regex","test","deprecated","old","new","removed","RegExp","propTypes","key","propDef","private","validate","value","normalizeShaderModule","module","normalized","shaderModule","bind","result","hook","injection","stage","slice"],"mappings":"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","sourcesContent":["import {assert} from '../utils';\nimport {parsePropTypes} from './filters/prop-types';\n\nconst VERTEX_SHADER = 'vs';\nconst FRAGMENT_SHADER = 'fs';\n\nexport default class ShaderModule {\n  constructor({\n    name,\n    vs,\n    fs,\n    dependencies = [],\n    uniforms,\n    getUniforms,\n    deprecations = [],\n    defines = {},\n    inject = {},\n    // DEPRECATED\n    vertexShader,\n    fragmentShader\n  }) {\n    assert(typeof name === 'string');\n    this.name = name;\n    this.vs = vs || vertexShader;\n    this.fs = fs || fragmentShader;\n    this.getModuleUniforms = getUniforms;\n    this.dependencies = dependencies;\n    this.deprecations = this._parseDeprecationDefinitions(deprecations);\n    this.defines = defines;\n    this.injections = normalizeInjections(inject);\n\n    if (uniforms) {\n      this.uniforms = parsePropTypes(uniforms);\n    }\n  }\n\n  // Extracts the source code chunk for the specified shader type from the named shader module\n  getModuleSource(type) {\n    let moduleSource;\n    switch (type) {\n      case VERTEX_SHADER:\n        moduleSource = this.vs || '';\n        break;\n      case FRAGMENT_SHADER:\n        moduleSource = this.fs || '';\n        break;\n      default:\n        assert(false);\n    }\n\n    return `\\\n#define MODULE_${this.name.toUpperCase().replace(/[^0-9a-z]/gi, '_')}\n${moduleSource}\\\n// END MODULE_${this.name}\n\n`;\n  }\n\n  getUniforms(opts, uniforms) {\n    if (this.getModuleUniforms) {\n      return this.getModuleUniforms(opts, uniforms);\n    }\n    // Build uniforms from the uniforms array\n    if (this.uniforms) {\n      return this._defaultGetUniforms(opts);\n    }\n    return {};\n  }\n\n  getDefines() {\n    return this.defines;\n  }\n\n  // Warn about deprecated uniforms or functions\n  checkDeprecations(shaderSource, log) {\n    this.deprecations.forEach(def => {\n      if (def.regex.test(shaderSource)) {\n        if (def.deprecated) {\n          log.deprecated(def.old, def.new)();\n        } else {\n          log.removed(def.old, def.new)();\n        }\n      }\n    });\n  }\n\n  _parseDeprecationDefinitions(deprecations) {\n    deprecations.forEach(def => {\n      switch (def.type) {\n        case 'function':\n          def.regex = new RegExp(`\\\\b${def.old}\\\\(`);\n          break;\n        default:\n          def.regex = new RegExp(`${def.type} ${def.old};`);\n      }\n    });\n\n    return deprecations;\n  }\n\n  _defaultGetUniforms(opts = {}) {\n    const uniforms = {};\n    const propTypes = this.uniforms;\n\n    for (const key in propTypes) {\n      const propDef = propTypes[key];\n      if (key in opts && !propDef.private) {\n        if (propDef.validate) {\n          assert(propDef.validate(opts[key], propDef), `${this.name}: invalid ${key}`);\n        }\n        uniforms[key] = opts[key];\n      } else {\n        uniforms[key] = propDef.value;\n      }\n    }\n\n    return uniforms;\n  }\n}\n\n// This utility mutates the original module\n// Keeping for backward compatibility\n// TODO - remove in v8\nexport function normalizeShaderModule(module) {\n  if (!module.normalized) {\n    module.normalized = true;\n    if (module.uniforms && !module.getUniforms) {\n      const shaderModule = new ShaderModule(module);\n      module.getUniforms = shaderModule.getUniforms.bind(shaderModule);\n    }\n  }\n  return module;\n}\n\nfunction normalizeInjections(injections) {\n  const result = {\n    vs: {},\n    fs: {}\n  };\n\n  for (const hook in injections) {\n    let injection = injections[hook];\n    const stage = hook.slice(0, 2);\n\n    if (typeof injection === 'string') {\n      injection = {\n        injection\n      };\n    }\n\n    result[stage][hook] = injection;\n  }\n\n  return result;\n}\n"],"file":"shader-module.js"}