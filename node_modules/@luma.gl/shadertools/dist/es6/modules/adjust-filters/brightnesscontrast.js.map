{"version":3,"sources":["../../../../src/modules/adjust-filters/brightnesscontrast.js"],"names":["fs","uniforms","brightness","value","min","max","contrast","name","passes","filter"],"mappings":"AAOA,MAAMA,EAAE,ycAAR;AAmBA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,UAAU,EAAE;AAACC,IAAAA,KAAK,EAAE,CAAR;AAAWC,IAAAA,GAAG,EAAE,CAAC,CAAjB;AAAoBC,IAAAA,GAAG,EAAE;AAAzB,GADG;AAEfC,EAAAA,QAAQ,EAAE;AAACH,IAAAA,KAAK,EAAE,CAAR;AAAWC,IAAAA,GAAG,EAAE,CAAC,CAAjB;AAAoBC,IAAAA,GAAG,EAAE;AAAzB;AAFK,CAAjB;AAKA,eAAe;AACbE,EAAAA,IAAI,EAAE,oBADO;AAEbN,EAAAA,QAFa;AAGbD,EAAAA,EAHa;AAKbQ,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAD;AALK,CAAf","sourcesContent":["/**\n * @filter           Brightness / Contrast\n * @description      Provides additive brightness and multiplicative contrast control.\n * @param brightness -1 to 1 (-1 is solid black, 0 is no change, and 1 is solid white)\n * @param contrast   -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n */\n\nconst fs = `\\\nuniform float brightness;\nuniform float contrast;\n\nvec4 brightnessContrast_filterColor(vec4 color) {\n  color.rgb += brightness;\n  if (contrast > 0.0) {\n    color.rgb = (color.rgb - 0.5) / (1.0 - contrast) + 0.5;\n  } else {\n    color.rgb = (color.rgb - 0.5) * (1.0 + contrast) + 0.5;\n  }\n  return color;\n}\n\nvec4 brightnessContrast_filterColor(vec4 color, vec2 texSize, vec2 texCoords) {\n  return brightnessContrast_filterColor(color);\n}\n`;\n\nconst uniforms = {\n  brightness: {value: 0, min: -1, max: 1},\n  contrast: {value: 0, min: -1, max: 1}\n};\n\nexport default {\n  name: 'brightnessContrast',\n  uniforms,\n  fs,\n\n  passes: [{filter: true}]\n};\n"],"file":"brightnesscontrast.js"}