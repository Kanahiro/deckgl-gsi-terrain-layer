{"version":3,"sources":["../../../../src/modules/fun-filters/ink.js"],"names":["fs","uniforms","strength","value","min","softMax","name","passes","sampler"],"mappings":"AAUA,IAAMA,EAAE,q5BAAR;AA4BA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,GAAG,EAAE,CAAnB;AAAsBC,IAAAA,OAAO,EAAE;AAA/B;AADK,CAAjB;AAIA,eAAe;AACbC,EAAAA,IAAI,EAAE,KADO;AAEbL,EAAAA,QAAQ,EAARA,QAFa;AAGbD,EAAAA,EAAE,EAAFA,EAHa;AAKbO,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAD;AALK,CAAf","sourcesContent":["/**\n * @filter         Ink\n * @description    Simulates outlining the image in ink by darkening edges stronger than a\n *                 certain threshold. The edge detection value is the difference of two\n *                 copies of the image, each blurred using a blur of a different radius.\n * @param strength The multiplicative scale of the ink edges. Values in the range 0 to 1\n *                 are usually sufficient, where 0 doesn't change the image and 1 adds lots\n *                 of black edges. Negative strength values will create white ink edges\n *                 instead of black ones.\n */\nconst fs = `\\\nuniform float strength;\n\nvec4 ink_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 dx = vec2(1.0 / texSize.x, 0.0);\n  vec2 dy = vec2(0.0, 1.0 / texSize.y);\n  vec4 color = texture2D(texture, texCoord);\n  float bigTotal = 0.0;\n  float smallTotal = 0.0;\n  vec3 bigAverage = vec3(0.0);\n  vec3 smallAverage = vec3(0.0);\n  for (float x = -2.0; x <= 2.0; x += 1.0) {\n    for (float y = -2.0; y <= 2.0; y += 1.0) {\n      vec3 sample = texture2D(texture, texCoord + dx * x + dy * y).rgb;\n      bigAverage += sample;\n      bigTotal += 1.0;\n      if (abs(x) + abs(y) < 2.0) {\n        smallAverage += sample;\n        smallTotal += 1.0;\n      }\n    }\n  }\n  vec3 edge = max(vec3(0.0), bigAverage / bigTotal - smallAverage / smallTotal);\n  float power = strength * strength * strength * strength * strength;\n  return vec4(color.rgb - dot(edge, edge) * power * 100000.0, color.a);\n}\n`;\n\nconst uniforms = {\n  strength: {value: 0.25, min: 0, softMax: 1}\n};\n\nexport default {\n  name: 'ink',\n  uniforms,\n  fs,\n\n  passes: [{sampler: true}]\n};\n"],"file":"ink.js"}