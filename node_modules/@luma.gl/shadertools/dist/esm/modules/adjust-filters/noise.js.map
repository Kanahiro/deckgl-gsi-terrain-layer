{"version":3,"sources":["../../../../src/modules/adjust-filters/noise.js"],"names":["fs","uniforms","amount","value","min","max","name","passes","filter"],"mappings":"AAKA,IAAMA,EAAE,2aAAR;AAoBA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AAACC,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,GAAG,EAAE,CAAlB;AAAqBC,IAAAA,GAAG,EAAE;AAA1B;AADO,CAAjB;AAIA,eAAe;AACbC,EAAAA,IAAI,EAAE,OADO;AAEbL,EAAAA,QAAQ,EAARA,QAFa;AAGbD,EAAAA,EAAE,EAAFA,EAHa;AAKbO,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAD;AALK,CAAf","sourcesContent":["/**\n * @filter         Noise\n * @description    Adds black and white noise to the image.\n * @param amount   0 to 1 (0 for no effect, 1 for maximum noise)\n */\nconst fs = `\\\nuniform float amount;\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 noise_filterColor(vec4 color, vec2 texCoord) {\n  float diff = (rand(texCoord) - 0.5) * amount;\n  color.r += diff;\n  color.g += diff;\n  color.b += diff;\n  return color;\n}\n\nvec4 noise_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n  return noise_filterColor(color, texCoord);\n}\n`;\n\nconst uniforms = {\n  amount: {value: 0.5, min: 0, max: 1}\n};\n\nexport default {\n  name: 'noise',\n  uniforms,\n  fs,\n\n  passes: [{filter: true}]\n};\n"],"file":"noise.js"}