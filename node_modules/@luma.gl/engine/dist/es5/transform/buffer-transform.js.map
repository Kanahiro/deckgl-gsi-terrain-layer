{"version":3,"sources":["../../../src/transform/buffer-transform.js"],"names":["BufferTransform","gl","props","currentIndex","feedbackMap","varyings","bindings","resources","_initialize","Object","seal","opts","binding","_setupTransformFeedback","length","assign","sourceBuffers","transformFeedback","attributes","_getNextIndex","_setupBuffers","varyingName","feedbackBuffers","bufferOrParams","Buffer","buffer","getBuffer","getData","name","keys","sourceName","feedbackName","bufferName","bufferOrRef","sourceBuffer","byteLength","usage","accessor","_createNewBuffer","_getFeedbackBuffers","_updateBindings","model","program","TransformFeedback","buffers","_updateBinding","_swapBuffers","nextIndex","setBuffers","srcName","dstName"],"mappings":"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","sourcesContent":["import {isWebGL2} from '@luma.gl/gltools';\nimport {Buffer, TransformFeedback} from '@luma.gl/webgl';\nimport {assert} from '@luma.gl/webgl';\n\nexport default class BufferTransform {\n  constructor(gl, props = {}) {\n    this.gl = gl;\n    this.currentIndex = 0;\n    this.feedbackMap = {};\n    this.varyings = null; // varyings array\n    this.bindings = []; // each element is an object : {sourceBuffers, feedbackBuffers, transformFeedback}\n\n    this.resources = {}; // resources to be deleted\n\n    this._initialize(props);\n    Object.seal(this);\n  }\n\n  setupResources(opts) {\n    for (const binding of this.bindings) {\n      this._setupTransformFeedback(binding, opts);\n    }\n  }\n\n  updateModelProps(props = {}) {\n    const {varyings} = this;\n    if (varyings.length > 0) {\n      props = Object.assign({}, props, {varyings});\n    }\n    return props;\n  }\n\n  getDrawOptions(opts = {}) {\n    const binding = this.bindings[this.currentIndex];\n    const {sourceBuffers, transformFeedback} = binding;\n    const attributes = Object.assign({}, sourceBuffers, opts.attributes);\n\n    return {attributes, transformFeedback};\n  }\n\n  swap() {\n    if (this.feedbackMap) {\n      this.currentIndex = this._getNextIndex();\n      return true;\n    }\n    return false;\n  }\n\n  // update source and/or feedbackBuffers\n  update(opts = {}) {\n    this._setupBuffers(opts);\n  }\n\n  // returns current feedbackBuffer of given name\n  getBuffer(varyingName) {\n    const {feedbackBuffers} = this.bindings[this.currentIndex];\n    const bufferOrParams = varyingName ? feedbackBuffers[varyingName] : null;\n    if (!bufferOrParams) {\n      return null;\n    }\n    return bufferOrParams instanceof Buffer ? bufferOrParams : bufferOrParams.buffer;\n  }\n\n  getData({varyingName} = {}) {\n    const buffer = this.getBuffer(varyingName);\n    if (buffer) {\n      return buffer.getData();\n    }\n    return null;\n  }\n\n  // Delete owned resources.\n  delete() {\n    for (const name in this.resources) {\n      this.resources[name].delete();\n    }\n  }\n\n  // Private\n\n  _initialize(props = {}) {\n    this._setupBuffers(props);\n    this.varyings = props.varyings || Object.keys(this.bindings[this.currentIndex].feedbackBuffers);\n    if (this.varyings.length > 0) {\n      // if writting to buffers make sure it is WebGL2\n      assert(isWebGL2(this.gl));\n    }\n  }\n\n  // auto create feedback buffers if requested\n  _getFeedbackBuffers(props) {\n    const {sourceBuffers = {}} = props;\n    const feedbackBuffers = {};\n    if (this.bindings[this.currentIndex]) {\n      // this gurantees a partial feedback buffer set doesn't update\n      // previously set buffers during auto creation mode.\n      Object.assign(feedbackBuffers, this.bindings[this.currentIndex].feedbackBuffers);\n    }\n    if (this.feedbackMap) {\n      // feedbackMap is defined as sourceBuffer as key and feedbackBuffer name as object\n      for (const sourceName in this.feedbackMap) {\n        const feedbackName = this.feedbackMap[sourceName];\n        if (sourceName in sourceBuffers) {\n          feedbackBuffers[feedbackName] = sourceName;\n        }\n      }\n    }\n    Object.assign(feedbackBuffers, props.feedbackBuffers);\n    for (const bufferName in feedbackBuffers) {\n      const bufferOrRef = feedbackBuffers[bufferName];\n      if (typeof bufferOrRef === 'string') {\n        // Create new buffer with same layout and settings as source buffer\n        const sourceBuffer = sourceBuffers[bufferOrRef];\n        const {byteLength, usage, accessor} = sourceBuffer;\n        feedbackBuffers[bufferName] = this._createNewBuffer(bufferName, {\n          byteLength,\n          usage,\n          accessor\n        });\n      }\n    }\n\n    return feedbackBuffers;\n  }\n\n  _setupBuffers(props = {}) {\n    const {sourceBuffers = null} = props;\n    Object.assign(this.feedbackMap, props.feedbackMap);\n    const feedbackBuffers = this._getFeedbackBuffers(props);\n    this._updateBindings({sourceBuffers, feedbackBuffers});\n  }\n\n  _setupTransformFeedback(binding, {model}) {\n    const {program} = model;\n    binding.transformFeedback = new TransformFeedback(this.gl, {\n      program,\n      buffers: binding.feedbackBuffers\n    });\n  }\n\n  _updateBindings(opts) {\n    this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], opts);\n    if (this.feedbackMap) {\n      const {sourceBuffers, feedbackBuffers} = this._swapBuffers(this.bindings[this.currentIndex]);\n      const nextIndex = this._getNextIndex();\n      this.bindings[nextIndex] = this._updateBinding(this.bindings[nextIndex], {\n        sourceBuffers,\n        feedbackBuffers\n      });\n    }\n  }\n\n  _updateBinding(binding, opts) {\n    if (!binding) {\n      return {\n        sourceBuffers: Object.assign({}, opts.sourceBuffers),\n        feedbackBuffers: Object.assign({}, opts.feedbackBuffers)\n      };\n    }\n    Object.assign(binding.sourceBuffers, opts.sourceBuffers);\n    Object.assign(binding.feedbackBuffers, opts.feedbackBuffers);\n    if (binding.transformFeedback) {\n      binding.transformFeedback.setBuffers(binding.feedbackBuffers);\n    }\n    return binding;\n  }\n\n  _swapBuffers(opts) {\n    if (!this.feedbackMap) {\n      return null;\n    }\n    const sourceBuffers = Object.assign({}, opts.sourceBuffers);\n    const feedbackBuffers = Object.assign({}, opts.feedbackBuffers);\n    for (const srcName in this.feedbackMap) {\n      const dstName = this.feedbackMap[srcName];\n      sourceBuffers[srcName] = opts.feedbackBuffers[dstName];\n      feedbackBuffers[dstName] = opts.sourceBuffers[srcName];\n\n      // make sure the new destination buffer is a Buffer object\n      assert(feedbackBuffers[dstName] instanceof Buffer);\n    }\n    return {sourceBuffers, feedbackBuffers};\n  }\n\n  // Create a buffer and add to list of buffers to be deleted.\n  _createNewBuffer(name, opts) {\n    const buffer = new Buffer(this.gl, opts);\n    if (this.resources[name]) {\n      this.resources[name].delete();\n    }\n    this.resources[name] = buffer;\n    return buffer;\n  }\n\n  _getNextIndex() {\n    return (this.currentIndex + 1) % 2;\n  }\n}\n"],"file":"buffer-transform.js"}