{"version":3,"sources":["../../../src/utils/clip-space.js"],"names":["Model","Geometry","CLIPSPACE_VERTEX_SHADER","POSITIONS","ClipSpace","gl","opts","TEX_COORDS","map","coord","Object","assign","vs","geometry","drawMode","vertexCount","attributes","aClipSpacePosition","size","value","Float32Array","aTexCoord","aCoordinate","setVertexCount"],"mappings":";;;;AAEA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,IAAMC,uBAAuB,oUAA7B;AAkBA,IAAMC,SAAS,GAAG,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAlB;;IAEqBC,S;;;AACnB,qBAAYC,EAAZ,EAAgBC,IAAhB,EAAsB;AAAA;;AAAA;;AACpB,QAAMC,UAAU,GAAGJ,SAAS,CAACK,GAAV,CAAc,UAAAC,KAAK;AAAA,aAAKA,KAAK,KAAK,CAAC,CAAX,GAAe,CAAf,GAAmBA,KAAxB;AAAA,KAAnB,CAAnB;AAEA,mFACEJ,EADF,EAEEK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,IAAlB,EAAwB;AACtBM,MAAAA,EAAE,EAAEV,uBADkB;AAEtBW,MAAAA,QAAQ,EAAE,IAAIZ,QAAJ,CAAa;AACrBa,QAAAA,QAAQ,GADa;AAErBC,QAAAA,WAAW,EAAE,CAFQ;AAGrBC,QAAAA,UAAU,EAAE;AACVC,UAAAA,kBAAkB,EAAE;AAACC,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,KAAK,EAAE,IAAIC,YAAJ,CAAiBjB,SAAjB;AAAjB,WADV;AAEVkB,UAAAA,SAAS,EAAE;AAACH,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,KAAK,EAAE,IAAIC,YAAJ,CAAiBb,UAAjB;AAAjB,WAFD;AAGVe,UAAAA,WAAW,EAAE;AAACJ,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,KAAK,EAAE,IAAIC,YAAJ,CAAiBb,UAAjB;AAAjB;AAHH;AAHS,OAAb;AAFY,KAAxB,CAFF;;AAeA,UAAKgB,cAAL,CAAoB,CAApB;;AAlBoB;AAmBrB;;;EApBoCvB,K;;SAAlBI,S","sourcesContent":["// ClipSpace\nimport GL from '@luma.gl/constants';\nimport Model from '../lib/model';\nimport Geometry from '../geometry/geometry';\n\nconst CLIPSPACE_VERTEX_SHADER = `\\\nattribute vec2 aClipSpacePosition;\nattribute vec2 aTexCoord;\nattribute vec2 aCoordinate;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main(void) {\n  gl_Position = vec4(aClipSpacePosition, 0., 1.);\n  position = aClipSpacePosition;\n  coordinate = aCoordinate;\n  uv = aTexCoord;\n}\n`;\n\n/* eslint-disable indent, no-multi-spaces */\nconst POSITIONS = [-1, -1, 1, -1, -1, 1, 1, 1];\n\nexport default class ClipSpace extends Model {\n  constructor(gl, opts) {\n    const TEX_COORDS = POSITIONS.map(coord => (coord === -1 ? 0 : coord));\n\n    super(\n      gl,\n      Object.assign({}, opts, {\n        vs: CLIPSPACE_VERTEX_SHADER,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          vertexCount: 4,\n          attributes: {\n            aClipSpacePosition: {size: 2, value: new Float32Array(POSITIONS)},\n            aTexCoord: {size: 2, value: new Float32Array(TEX_COORDS)},\n            aCoordinate: {size: 2, value: new Float32Array(TEX_COORDS)}\n          }\n        })\n      })\n    );\n    this.setVertexCount(4);\n  }\n}\n"],"file":"clip-space.js"}