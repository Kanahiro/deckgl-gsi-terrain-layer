{"version":3,"sources":["../../../src/lib/program-manager.js"],"names":["assembleShaders","Program","ProgramManager","gl","luma","defaultProgramManager","_programCache","_getUniforms","_registeredModules","_hookFunctions","_defaultModules","_hashes","_hashCounter","stateHash","_useCounts","module","find","m","name","push","moduleName","filter","hook","opts","Object","assign","props","vs","fs","defines","inject","varyings","bufferMode","transpileToGLSL100","modules","_getModuleList","vsHash","_getHash","fsHash","moduleHashes","map","sort","varyingHashes","v","defineKeys","keys","injectKeys","defineHashes","injectHashes","key","hash","join","assembled","hookFunctions","getUniforms","x","program","undefined","appModules","Array","length","seen","count","i","len"],"mappings":"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","sourcesContent":["import {assembleShaders} from '@luma.gl/shadertools';\nimport {Program} from '@luma.gl/webgl';\n\nexport default class ProgramManager {\n  static getDefaultProgramManager(gl) {\n    gl.luma = gl.luma || {};\n    gl.luma.defaultProgramManager = gl.luma.defaultProgramManager || new ProgramManager(gl);\n\n    return gl.luma.defaultProgramManager;\n  }\n\n  constructor(gl) {\n    this.gl = gl;\n\n    this._programCache = {};\n    this._getUniforms = {};\n    this._registeredModules = {};\n    this._hookFunctions = [];\n    this._defaultModules = [];\n\n    this._hashes = {};\n    this._hashCounter = 0;\n    this.stateHash = 0; // Used change hashing if hooks are modified\n    this._useCounts = {};\n  }\n\n  addDefaultModule(module) {\n    if (!this._defaultModules.find(m => m.name === module.name)) {\n      this._defaultModules.push(module);\n    }\n\n    this.stateHash++;\n  }\n\n  removeDefaultModule(module) {\n    const moduleName = typeof module === 'string' ? module : module.name;\n    this._defaultModules = this._defaultModules.filter(m => m.name !== moduleName);\n    this.stateHash++;\n  }\n\n  addShaderHook(hook, opts) {\n    if (opts) {\n      hook = Object.assign(opts, {hook});\n    }\n\n    this._hookFunctions.push(hook);\n\n    this.stateHash++;\n  }\n\n  get(props = {}) {\n    const {\n      vs = '',\n      fs = '',\n      defines = {},\n      inject = {},\n      varyings = [],\n      bufferMode = 0x8c8d,\n      transpileToGLSL100 = false\n    } = props; // varyings/bufferMode for xform feedback, 0x8c8d = SEPARATE_ATTRIBS\n\n    const modules = this._getModuleList(props.modules); // Combine with default modules\n\n    const vsHash = this._getHash(vs);\n    const fsHash = this._getHash(fs);\n    const moduleHashes = modules.map(m => this._getHash(m.name)).sort();\n    const varyingHashes = varyings.map(v => this._getHash(v));\n\n    const defineKeys = Object.keys(defines).sort();\n    const injectKeys = Object.keys(inject).sort();\n    const defineHashes = [];\n    const injectHashes = [];\n\n    for (const key of defineKeys) {\n      defineHashes.push(this._getHash(key));\n      defineHashes.push(this._getHash(defines[key]));\n    }\n\n    for (const key of injectKeys) {\n      injectHashes.push(this._getHash(key));\n      injectHashes.push(this._getHash(inject[key]));\n    }\n\n    const hash = `${vsHash}/${fsHash}D${defineHashes.join('/')}M${moduleHashes.join(\n      '/'\n    )}I${injectHashes.join('/')}V${varyingHashes.join('/')}H${this.stateHash}B${bufferMode}${\n      transpileToGLSL100 ? 'T' : ''\n    }`;\n\n    if (!this._programCache[hash]) {\n      const assembled = assembleShaders(this.gl, {\n        vs,\n        fs,\n        modules,\n        inject,\n        defines,\n        hookFunctions: this._hookFunctions,\n        transpileToGLSL100\n      });\n\n      this._programCache[hash] = new Program(this.gl, {\n        hash,\n        vs: assembled.vs,\n        fs: assembled.fs,\n        varyings,\n        bufferMode\n      });\n\n      this._getUniforms[hash] = assembled.getUniforms || (x => {});\n      this._useCounts[hash] = 0;\n    }\n\n    this._useCounts[hash]++;\n\n    return this._programCache[hash];\n  }\n\n  getUniforms(program) {\n    return this._getUniforms[program.hash] || null;\n  }\n\n  release(program) {\n    const hash = program.hash;\n    this._useCounts[hash]--;\n\n    if (this._useCounts[hash] === 0) {\n      this._programCache[hash].delete();\n      delete this._programCache[hash];\n      delete this._getUniforms[hash];\n      delete this._useCounts[hash];\n    }\n  }\n\n  _getHash(key) {\n    if (this._hashes[key] === undefined) {\n      this._hashes[key] = this._hashCounter++;\n    }\n\n    return this._hashes[key];\n  }\n\n  // Dedup and combine with default modules\n  _getModuleList(appModules = []) {\n    const modules = new Array(this._defaultModules.length + appModules.length);\n    const seen = {};\n    let count = 0;\n\n    for (let i = 0, len = this._defaultModules.length; i < len; ++i) {\n      const module = this._defaultModules[i];\n      const name = module.name;\n      modules[count++] = module;\n      seen[name] = true;\n    }\n\n    for (let i = 0, len = appModules.length; i < len; ++i) {\n      const module = appModules[i];\n      const name = module.name;\n      if (!seen[name]) {\n        modules[count++] = module;\n        seen[name] = true;\n      }\n    }\n\n    modules.length = count;\n\n    return modules;\n  }\n}\n"],"file":"program-manager.js"}