{"version":3,"sources":["../../../src/classes/matrix4.js"],"names":["checkVector","deprecated","Matrix","vec2_transformMat4AsVector","vec3_transformMat4AsVector","mat4","vec2","vec3","vec4","IDENTITY","Object","freeze","ZERO","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","constants","Matrix4","ELEMENTS","RANK","constructor","array","arguments","length","Array","isArray","copy","identity","check","set","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","result","fromQuaternion","q","fromQuat","frustum","left","right","bottom","top","near","far","Infinity","_computeInfinitePerspectiveOffCenter","column0Row0","column1Row1","column2Row0","column2Row1","column2Row2","column2Row3","column3Row2","lookAt","eye","center","up","ortho","orthographic","fovy","Math","PI","aspect","focalDistance","Error","halfY","tan","perspective","undefined","fov","determinant","getScale","sqrt","getTranslation","getRotation","scaleResult","scale","inverseScale0","inverseScale1","inverseScale2","getRotationMatrix3","transpose","invert","multiplyLeft","a","multiply","multiplyRight","rotateX","radians","rotateY","rotateZ","rotateXYZ","rx","ry","rz","rotateAxis","axis","rotate","factor","translate","vec","transform","vector","transformMat4","transformAsPoint","transformAsVector","makeRotationX","makeTranslation","x","y","z","transformPoint","transformVector","transformDirection"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {checkVector, deprecated} from '../lib/validators';\nimport Matrix from './base/matrix';\n\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as mat4 from 'gl-matrix/mat4';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\n\nconst constants = {};\n\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = (2.0 * near) / (right - left);\n    const column1Row1 = (2.0 * near) / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt(eye, center, up) {\n    // Signature: lookAt({eye, center = [0, 0, 0], up = [0, 1, 0]}))\n    if (arguments.length === 1) {\n      ({eye, center, up} = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // from \"traditional\" view space parameters\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates an orthogonal projection matrix with the same parameters\n  // as a perspective matrix (plus focalDistance)\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // focalDistance distance in the view frustum used for extent calculations\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  orthographic({\n    fovy = (45 * Math.PI) / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fovy = undefined,\n    fov = (45 * Math.PI) / 180, // DEPRECATED\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  // Extracts the non-uniform scale assuming the matrix is an affine transformation.\n  // The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n  getScale(result = [-0, -0, -0]) {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  // Gets the translation portion, assuming the matrix is a affine transformation matrix.\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  // Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n  getRotation(\n    result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0],\n    scaleResult = null\n  ) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  getRotationMatrix3(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx)\n      .rotateY(ry)\n      .rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  // Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  // Transforms any 2 or 3 element array as point (w implicitly 1)\n  transformAsPoint(vector, result) {\n    const {length} = vector;\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // Transforms any 2 or 3 element array as vector (w implicitly 0)\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // three.js math API compatibility\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  // DEPRECATED in 3.0\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n}\n"],"file":"matrix4.js"}