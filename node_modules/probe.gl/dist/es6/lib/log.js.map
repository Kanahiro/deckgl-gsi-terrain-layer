{"version":3,"sources":["../../../src/lib/log.js"],"names":["VERSION","isBrowser","LocalStorage","formatImage","formatTime","leftPad","addColor","autobind","assert","getHiResTimestamp","originalConsole","debug","console","log","info","warn","error","DEFAULT_SETTINGS","enabled","level","noop","cache","ONCE","once","getTableHeader","table","key","title","Log","constructor","id","_startTs","_deltaTs","LOG_THROTTLE_TIMEOUT","_storage","userData","timeStamp","Object","seal","newLevel","setLevel","getLevel","isEnabled","config","getTotal","Number","toPrecision","getDelta","priority","newPriority","getPriority","enable","updateConfiguration","condition","message","_getLogFunction","arguments","deprecated","oldUsage","newUsage","removed","probe","logLevel","time","columns","tag","image","scale","_shouldLog","logImageInBrowser","logImageInNode","settings","get","setting","set","value","timeEnd","group","opts","collapsed","normalizeArguments","method","groupCollapsed","assign","groupEnd","withGroup","func","trace","normalizeLogLevel","args","total","delta","decorateMessage","bind","resolvedLevel","isFinite","Array","from","length","shift","undefined","unshift","messageType","color","background","asciify","module","require","fit","width","Math","round","then","data","img","Image","onload","src","element","nodeName","toLowerCase","toDataURL"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-console */\nimport {VERSION, isBrowser} from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport {formatImage, formatTime, leftPad} from '../utils/formatters';\nimport {addColor} from '../utils/color';\nimport {autobind} from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\n\n/* eslint-disable no-console */\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\nconst DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\nconst ONCE = {once: true};\n\n/*\nfunction throttle(tag, timeout) {\n  const prevTime = cache[tag];\n  const time = Date.now();\n  if (!prevTime || (time - prevTime > timeout)) {\n    cache[tag] = time;\n    return true;\n  }\n  return false;\n}\n\n// Assertions don't generate standard exceptions and don't print nicely\nfunction checkForAssertionErrors(args) {\n  const isAssertion =\n    args &&\n    args.length > 0 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].name === 'AssertionError';\n\n  if (isAssertion) {\n    args = Array.prototype.slice.call(args);\n    args.unshift(`assert(${args[0].message})`);\n  }\n  return args;\n}\n*/\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n\n// A console wrapper\n\nexport default class Log {\n  constructor({id} = {}) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    // TODO - fix support from throttling groups\n    this.LOG_THROTTLE_TIMEOUT = 0; // Time before throttled messages are logged again\n    this._storage = new LocalStorage(`__probe-${this.id}__`, DEFAULT_SETTINGS);\n    this.userData = {};\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel) {\n    this.setLevel(newLevel);\n  }\n\n  get level() {\n    return this.getLevel();\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getLevel() {\n    return this._storage.config.level;\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  // Deprecated\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n\n  get priority() {\n    return this.level;\n  }\n\n  getPriority() {\n    return this.level;\n  }\n\n  // Configure\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({level});\n    return this;\n  }\n\n  // Unconditional logging\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  // Warn, but only once, no console flooding\n  warn(message) {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  // Print an error\n  error(message) {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  // Log to a group\n  probe(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  // Log a debug message\n  log(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  // Log a normal message\n  info(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  // Log a normal message, but only once, no console flooding\n  once(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      originalConsole.debug || originalConsole.info,\n      arguments,\n      ONCE\n    );\n  }\n\n  // Logs an object as a table\n  table(logLevel, table, columns) {\n    if (table) {\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n    return noop;\n  }\n\n  // logs an image under Chrome\n  image({logLevel, priority, image, message = '', scale = 1}) {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n    return isBrowser\n      ? logImageInBrowser({image, message, scale})\n      : logImageInNode({image, message, scale});\n  }\n\n  // Logs the current settings as a table\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // logs the current status of the setting\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting, value) {\n    this._storage.updateConfiguration({[setting]: value});\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      console.timeEnd ? console.timeEnd : console.info\n    );\n  }\n\n  timeStamp(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {collapsed: false}) {\n    opts = normalizeArguments({logLevel, message, opts});\n    const {collapsed} = opts;\n    opts.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n\n    return this._getLogFunction(opts);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(logLevel, message, func) {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _shouldLog(logLevel) {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(logLevel, message, method, args = [], opts) {\n    if (this._shouldLog(logLevel)) {\n      // normalized opts + timings\n      opts = normalizeArguments({logLevel, message, args, opts});\n      method = method || opts.method;\n      assert(method);\n\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      // reset delta timer\n      this._deltaTs = getHiResTimestamp();\n\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = decorateMessage(this.id, opts.message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n    return noop;\n  }\n}\n\nLog.VERSION = VERSION;\n\n// Get logLevel from first argument:\n// - log(logLevel, message, args) => logLevel\n// - log(message, args) => 0\n// - log({logLevel, ...}, message, args) => logLevel\n// - log({logLevel, message, args}) => logLevel\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      // Backward compatibility\n      // TODO - deprecate `priority`\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n  // 'log level must be a number'\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\n// \"Normalizes\" the various argument patterns into an object with known types\n// - log(logLevel, message, args) => {logLevel, message, args}\n// - log(message, args) => {logLevel: 0, message, args}\n// - log({logLevel, ...}, message, args) => {logLevel, message, args}\n// - log({logLevel, message, args}) => {logLevel, message, args}\nexport function normalizeArguments(opts) {\n  const {logLevel, message} = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  // We use `arguments` instead of rest parameters (...args) because IE\n  // does not support the syntax. Rest parameters is transpiled to code with\n  // perf impact. Doing it here instead avoids constructing args when logging is\n  // disabled.\n  // TODO - remove when/if IE support is dropped\n  const args = opts.args ? Array.from(opts.args) : [];\n  /* eslint-disable no-empty */\n  // args should only contain arguments that appear after `message`\n  while (args.length && args.shift() !== message) {}\n  /* eslint-enable no-empty */\n  opts.args = args;\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  // Resolve functions into strings by calling them\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n  const messageType = typeof opts.message;\n  // 'log message must be a string' or object\n  assert(messageType === 'string' || messageType === 'object');\n\n  // original opts + normalized opts + opts arg + fixed up message\n  return Object.assign(opts, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? `${id}: ${time}  ${message}` : `${id}: ${message}`;\n    message = addColor(message, opts.color, opts.background);\n  }\n  return message;\n}\n\n// Use the asciify module to log an image under node.js\nfunction logImageInNode({image, message = '', scale = 1}) {\n  // Note: Runtime load of the \"asciify-image\" module, avoids including in browser bundles\n  let asciify = null;\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {\n    // asciify not installed, silently ignore\n  }\n  if (asciify) {\n    return () =>\n      asciify(image, {fit: 'box', width: `${Math.round(80 * scale)}%`}).then(data =>\n        console.log(data)\n      );\n  }\n  return noop;\n}\n\nfunction logImageInBrowser({image, message = '', scale = 1}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n    img.src = image;\n    return noop;\n  }\n  const element = image.nodeName || '';\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n    img.onload = () => console.log(...formatImage(img, message, scale));\n    img.src = image.toDataURL();\n    return noop;\n  }\n  return noop;\n}\n"],"file":"log.js"}