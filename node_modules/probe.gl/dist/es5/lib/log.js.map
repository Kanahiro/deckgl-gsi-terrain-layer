{"version":3,"sources":["../../../src/lib/log.js"],"names":["originalConsole","debug","isBrowser","console","log","info","warn","error","DEFAULT_SETTINGS","enabled","level","noop","cache","ONCE","once","getTableHeader","table","key","title","Log","id","VERSION","_startTs","_deltaTs","LOG_THROTTLE_TIMEOUT","_storage","LocalStorage","userData","timeStamp","Object","seal","config","Number","toPrecision","updateConfiguration","condition","message","_getLogFunction","arguments","oldUsage","newUsage","logLevel","time","columns","tag","priority","image","scale","_shouldLog","logImageInBrowser","logImageInNode","setting","value","timeEnd","opts","collapsed","normalizeArguments","method","groupCollapsed","group","assign","groupEnd","func","trace","isEnabled","getLevel","normalizeLogLevel","args","total","getTotal","delta","getDelta","decorateMessage","bind","newLevel","setLevel","newPriority","resolvedLevel","isFinite","Array","from","length","shift","undefined","unshift","messageType","color","background","asciify","module","require","fit","width","Math","round","then","data","img","Image","onload","src","element","nodeName","toLowerCase","toDataURL"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-console */\nimport {VERSION, isBrowser} from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport {formatImage, formatTime, leftPad} from '../utils/formatters';\nimport {addColor} from '../utils/color';\nimport {autobind} from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\n\n/* eslint-disable no-console */\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\nconst DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\nconst ONCE = {once: true};\n\n/*\nfunction throttle(tag, timeout) {\n  const prevTime = cache[tag];\n  const time = Date.now();\n  if (!prevTime || (time - prevTime > timeout)) {\n    cache[tag] = time;\n    return true;\n  }\n  return false;\n}\n\n// Assertions don't generate standard exceptions and don't print nicely\nfunction checkForAssertionErrors(args) {\n  const isAssertion =\n    args &&\n    args.length > 0 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].name === 'AssertionError';\n\n  if (isAssertion) {\n    args = Array.prototype.slice.call(args);\n    args.unshift(`assert(${args[0].message})`);\n  }\n  return args;\n}\n*/\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n\n// A console wrapper\n\nexport default class Log {\n  constructor({id} = {}) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    // TODO - fix support from throttling groups\n    this.LOG_THROTTLE_TIMEOUT = 0; // Time before throttled messages are logged again\n    this._storage = new LocalStorage(`__probe-${this.id}__`, DEFAULT_SETTINGS);\n    this.userData = {};\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel) {\n    this.setLevel(newLevel);\n  }\n\n  get level() {\n    return this.getLevel();\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getLevel() {\n    return this._storage.config.level;\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  // Deprecated\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n\n  get priority() {\n    return this.level;\n  }\n\n  getPriority() {\n    return this.level;\n  }\n\n  // Configure\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({level});\n    return this;\n  }\n\n  // Unconditional logging\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  // Warn, but only once, no console flooding\n  warn(message) {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  // Print an error\n  error(message) {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  // Log to a group\n  probe(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  // Log a debug message\n  log(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  // Log a normal message\n  info(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  // Log a normal message, but only once, no console flooding\n  once(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      originalConsole.debug || originalConsole.info,\n      arguments,\n      ONCE\n    );\n  }\n\n  // Logs an object as a table\n  table(logLevel, table, columns) {\n    if (table) {\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n    return noop;\n  }\n\n  // logs an image under Chrome\n  image({logLevel, priority, image, message = '', scale = 1}) {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n    return isBrowser\n      ? logImageInBrowser({image, message, scale})\n      : logImageInNode({image, message, scale});\n  }\n\n  // Logs the current settings as a table\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // logs the current status of the setting\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting, value) {\n    this._storage.updateConfiguration({[setting]: value});\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      console.timeEnd ? console.timeEnd : console.info\n    );\n  }\n\n  timeStamp(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {collapsed: false}) {\n    opts = normalizeArguments({logLevel, message, opts});\n    const {collapsed} = opts;\n    opts.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n\n    return this._getLogFunction(opts);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(logLevel, message, func) {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _shouldLog(logLevel) {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(logLevel, message, method, args = [], opts) {\n    if (this._shouldLog(logLevel)) {\n      // normalized opts + timings\n      opts = normalizeArguments({logLevel, message, args, opts});\n      method = method || opts.method;\n      assert(method);\n\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      // reset delta timer\n      this._deltaTs = getHiResTimestamp();\n\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = decorateMessage(this.id, opts.message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n    return noop;\n  }\n}\n\nLog.VERSION = VERSION;\n\n// Get logLevel from first argument:\n// - log(logLevel, message, args) => logLevel\n// - log(message, args) => 0\n// - log({logLevel, ...}, message, args) => logLevel\n// - log({logLevel, message, args}) => logLevel\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      // Backward compatibility\n      // TODO - deprecate `priority`\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n  // 'log level must be a number'\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\n// \"Normalizes\" the various argument patterns into an object with known types\n// - log(logLevel, message, args) => {logLevel, message, args}\n// - log(message, args) => {logLevel: 0, message, args}\n// - log({logLevel, ...}, message, args) => {logLevel, message, args}\n// - log({logLevel, message, args}) => {logLevel, message, args}\nexport function normalizeArguments(opts) {\n  const {logLevel, message} = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  // We use `arguments` instead of rest parameters (...args) because IE\n  // does not support the syntax. Rest parameters is transpiled to code with\n  // perf impact. Doing it here instead avoids constructing args when logging is\n  // disabled.\n  // TODO - remove when/if IE support is dropped\n  const args = opts.args ? Array.from(opts.args) : [];\n  /* eslint-disable no-empty */\n  // args should only contain arguments that appear after `message`\n  while (args.length && args.shift() !== message) {}\n  /* eslint-enable no-empty */\n  opts.args = args;\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  // Resolve functions into strings by calling them\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n  const messageType = typeof opts.message;\n  // 'log message must be a string' or object\n  assert(messageType === 'string' || messageType === 'object');\n\n  // original opts + normalized opts + opts arg + fixed up message\n  return Object.assign(opts, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? `${id}: ${time}  ${message}` : `${id}: ${message}`;\n    message = addColor(message, opts.color, opts.background);\n  }\n  return message;\n}\n\n// Use the asciify module to log an image under node.js\nfunction logImageInNode({image, message = '', scale = 1}) {\n  // Note: Runtime load of the \"asciify-image\" module, avoids including in browser bundles\n  let asciify = null;\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {\n    // asciify not installed, silently ignore\n  }\n  if (asciify) {\n    return () =>\n      asciify(image, {fit: 'box', width: `${Math.round(80 * scale)}%`}).then(data =>\n        console.log(data)\n      );\n  }\n  return noop;\n}\n\nfunction logImageInBrowser({image, message = '', scale = 1}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n    img.src = image;\n    return noop;\n  }\n  const element = image.nodeName || '';\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n    img.onload = () => console.log(...formatImage(img, message, scale));\n    img.src = image.toDataURL();\n    return noop;\n  }\n  return noop;\n}\n"],"file":"log.js"}