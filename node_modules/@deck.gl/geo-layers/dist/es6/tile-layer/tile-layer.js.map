{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["CompositeLayer","_flatten","flatten","GeoJsonLayer","load","Tileset2D","STRATEGY_DEFAULT","urlType","getURLFromTemplate","defaultProps","data","dataComparator","equals","renderSubLayers","type","value","props","compare","getTileData","optional","onViewportLoad","onTileLoad","tile","onTileUnload","onTileError","err","console","error","extent","tileSize","maxZoom","minZoom","maxCacheSize","maxCacheByteSize","refinementStrategy","zRange","fetch","url","layer","signal","loadOptions","getLoadOptions","maxRequests","TileLayer","initializeState","state","tiles","isLoaded","tileset","selectedTiles","every","layers","shouldUpdateState","changeFlags","somethingChanged","updateState","oldProps","context","createTileCache","dataChanged","updateTriggersChanged","all","bind","_onTileLoad","_onTileError","_onTileUnload","setState","propsChanged","setOptions","forEach","_updateTileset","frameNumber","update","viewport","loadingStateChanged","tilesetChanged","map","getCurrentLayer","isVisible","setNeedsUpdate","getHighlightedObjectIndex","getPickingInfo","info","sourceLayer","renderLayers","visible","highlightedObjectIndex","Object","assign","id","x","y","z","_offset","Boolean","clone","layerName"],"mappings":"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","sourcesContent":["import {CompositeLayer, _flatten as flatten} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {load} from '@loaders.gl/core';\n\nimport Tileset2D, {STRATEGY_DEFAULT} from './tileset-2d';\nimport {urlType, getURLFromTemplate} from './utils';\n\nconst defaultProps = {\n  data: [],\n  dataComparator: urlType.equals,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props), compare: false},\n  getTileData: {type: 'function', optional: true, value: null, compare: false},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null, compare: false},\n  onTileLoad: {type: 'function', value: tile => {}, compare: false},\n  onTileUnload: {type: 'function', value: tile => {}, compare: false},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err), compare: false},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  // Use load directly so we don't use ResourceManager\n  fetch: {\n    type: 'function',\n    value: (url, {layer, signal}) => {\n      const loadOptions = {signal, ...(layer.getLoadOptions() || {})};\n\n      return load(url, loadOptions);\n    },\n    compare: false\n  },\n  maxRequests: 6\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tiles: [],\n      isLoaded: false\n    };\n  }\n\n  get isLoaded() {\n    const {tileset} = this.state;\n    return tileset.selectedTiles.every(\n      tile => tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    let {tileset} = this.state;\n    const createTileCache =\n      !tileset ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (createTileCache) {\n      const {\n        maxZoom,\n        minZoom,\n        tileSize,\n        maxCacheSize,\n        maxCacheByteSize,\n        refinementStrategy,\n        extent,\n        maxRequests\n      } = props;\n      tileset = new Tileset2D({\n        getTileData: this.getTileData.bind(this),\n        maxCacheSize,\n        maxCacheByteSize,\n        maxZoom,\n        minZoom,\n        tileSize,\n        refinementStrategy,\n        extent,\n        onTileLoad: this._onTileLoad.bind(this),\n        onTileError: this._onTileError.bind(this),\n        onTileUnload: this._onTileUnload.bind(this),\n        maxRequests\n      });\n      this.setState({tileset});\n    } else if (changeFlags.propsChanged || changeFlags.updateTriggersChanged) {\n      tileset.setOptions(props);\n      // if any props changed, delete the cached layers\n      this.state.tileset.tiles.forEach(tile => {\n        tile.layers = null;\n      });\n    }\n\n    this._updateTileset();\n  }\n\n  _updateTileset() {\n    const {tileset} = this.state;\n    const {onViewportLoad, zRange} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && onViewportLoad && (loadingStateChanged || tilesetChanged)) {\n      onViewportLoad(tileset.selectedTiles.map(tile => tile.data));\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onTileLoad(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileLoad(tile);\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileError(error, tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileError(error);\n    // errorred tiles should not block rendering, are considered \"loaded\" with empty data\n    layer._updateTileset();\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileUnload(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile) {\n    const {data} = this.props;\n    const {getTileData, fetch} = this.getCurrentLayer().props;\n    const {signal} = tile;\n\n    tile.url = getURLFromTemplate(data, tile);\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (tile.url) {\n      return fetch(tile.url, {layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(props) {\n    return this.props.renderSubLayers(props);\n  }\n\n  getHighlightedObjectIndex() {\n    return -1;\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  renderLayers() {\n    const {visible} = this.props;\n    return this.state.tileset.tiles.map(tile => {\n      // For a tile to be visible:\n      // - parent layer must be visible\n      // - tile must be visible in the current viewport\n      const isVisible = visible && tile.isVisible;\n      const highlightedObjectIndex = this.getHighlightedObjectIndex(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded) {\n        // no op\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers(\n          Object.assign({}, this.props, {\n            id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n            data: tile.data,\n            visible: isVisible,\n            _offset: 0,\n            tile,\n            highlightedObjectIndex\n          })\n        );\n        tile.layers = flatten(layers, Boolean);\n      } else if (\n        tile.layers[0] &&\n        (tile.layers[0].props.visible !== isVisible ||\n          tile.layers[0].props.highlightedObjectIndex !== highlightedObjectIndex)\n      ) {\n        tile.layers = tile.layers.map(layer =>\n          layer.clone({visible: isVisible, highlightedObjectIndex})\n        );\n      }\n      return tile.layers;\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}