{"version":3,"sources":["../../../src/tile-layer/tile-2d-header.js"],"names":["log","Tile2DHeader","constructor","x","y","z","onTileLoad","onTileError","isVisible","isSelected","parent","children","content","_isLoaded","_isCancelled","data","_loader","isLoaded","isLoading","Boolean","isCancelled","byteLength","result","Number","isFinite","error","_loadData","getTileData","requestScheduler","bbox","_abortController","AbortController","signal","requestToken","scheduleRequest","tile","done","tileData","err","loadData","finally","undefined","abort"],"mappings":"AACA,SAAQA,GAAR,QAAkB,eAAlB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAAC;AAACC,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA,CAAP;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,GAAD,EAAqC;AAC9C,SAAKJ,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKG,SAAL,GAAiB,KAAjB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,YAAL,GAAoB,KAApB;AAEA,SAAKR,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AAED,MAAIQ,IAAJ,GAAW;AACT,WAAO,KAAKF,SAAL,GAAiB,KAAKD,OAAtB,GAAgC,KAAKI,OAA5C;AACD;;AAED,MAAIC,QAAJ,GAAe;AACb,WAAO,KAAKJ,SAAZ;AACD;;AAED,MAAIK,SAAJ,GAAgB;AACd,WAAOC,OAAO,CAAC,KAAKH,OAAN,CAAd;AACD;;AAED,MAAII,WAAJ,GAAkB;AAChB,WAAO,KAAKN,YAAZ;AACD;;AAED,MAAIO,UAAJ,GAAiB;AACf,UAAMC,MAAM,GAAG,KAAKV,OAAL,GAAe,KAAKA,OAAL,CAAaS,UAA5B,GAAyC,CAAxD;;AACA,QAAI,CAACE,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAL,EAA8B;AAC5BtB,MAAAA,GAAG,CAACyB,KAAJ,CAAU,qCAAV;AACD;;AACD,WAAOH,MAAP;AACD;;AAGD,QAAMI,SAAN,CAAgBC,WAAhB,EAA6BC,gBAA7B,EAA+C;AAC7C,UAAM;AAACzB,MAAAA,CAAD;AAAIC,MAAAA,CAAJ;AAAOC,MAAAA,CAAP;AAAUwB,MAAAA;AAAV,QAAkB,IAAxB;AAEA,SAAKC,gBAAL,GAAwB,IAAIC,eAAJ,EAAxB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKF,gBAAtB;AAEA,UAAMG,YAAY,GAAG,MAAML,gBAAgB,CAACM,eAAjB,CAAiC,IAAjC,EAAuCC,IAAI,IAAI;AACxE,aAAOA,IAAI,CAAC1B,UAAL,GAAkB,CAAlB,GAAsB,CAAC,CAA9B;AACD,KAF0B,CAA3B;;AAIA,QAAI,CAACwB,YAAL,EAAmB;AACjB,WAAKnB,YAAL,GAAoB,IAApB;AACA;AACD;;AAED,QAAI,KAAKA,YAAT,EAAuB;AACrBmB,MAAAA,YAAY,CAACG,IAAb;AACA;AACD;;AAED,QAAIC,QAAJ;AACA,QAAIZ,KAAJ;;AACA,QAAI;AACFY,MAAAA,QAAQ,GAAG,MAAMV,WAAW,CAAC;AAACxB,QAAAA,CAAD;AAAIC,QAAAA,CAAJ;AAAOC,QAAAA,CAAP;AAAUwB,QAAAA,IAAV;AAAgBG,QAAAA;AAAhB,OAAD,CAA5B;AACD,KAFD,CAEE,OAAOM,GAAP,EAAY;AACZb,MAAAA,KAAK,GAAGa,GAAG,IAAI,IAAf;AACD,KAJD,SAIU;AACRL,MAAAA,YAAY,CAACG,IAAb;;AAEA,UAAI,KAAKtB,YAAL,IAAqB,CAACuB,QAA1B,EAAoC;AAClC,aAAKxB,SAAL,GAAiB,KAAjB;AACD,OAFD,MAEO;AAEL,aAAKA,SAAL,GAAiB,IAAjB;AACA,aAAKC,YAAL,GAAoB,KAApB;AACD;AACF;;AAED,QAAI,CAAC,KAAKD,SAAV,EAAqB;AACnB;AACD;;AAED,QAAIY,KAAJ,EAAW;AACT,WAAKlB,WAAL,CAAiBkB,KAAjB,EAAwB,IAAxB;AACD,KAFD,MAEO;AACL,WAAKb,OAAL,GAAeyB,QAAf;AACA,WAAK/B,UAAL,CAAgB,IAAhB;AACD;AACF;;AAGDiC,EAAAA,QAAQ,CAACZ,WAAD,EAAcC,gBAAd,EAAgC;AACtC,QAAI,CAACD,WAAL,EAAkB;AAChB;AACD;;AAED,SAAKb,YAAL,GAAoB,KAApB;AACA,SAAKE,OAAL,GAAe,KAAKU,SAAL,CAAeC,WAAf,EAA4BC,gBAA5B,CAAf;;AACA,SAAKZ,OAAL,CAAawB,OAAb,CAAqB,MAAM;AACzB,WAAKxB,OAAL,GAAeyB,SAAf;AACD,KAFD;AAGD;;AAEDC,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKzB,QAAT,EAAmB;AACjB;AACD;;AAED,SAAKH,YAAL,GAAoB,IAApB;;AACA,SAAKgB,gBAAL,CAAsBY,KAAtB;AACD;;AAjH+B","sourcesContent":["/* eslint-env browser */\nimport {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z, onTileLoad, onTileError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n    this._isLoaded = false;\n    this._isCancelled = false;\n\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  get data() {\n    return this._isLoaded ? this.content : this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  get isLoading() {\n    return Boolean(this._loader);\n  }\n\n  get isCancelled() {\n    return this._isCancelled;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  async _loadData(getTileData, requestScheduler) {\n    const {x, y, z, bbox} = this;\n\n    this._abortController = new AbortController(); // eslint-disable-line no-undef\n    const {signal} = this._abortController;\n\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData;\n    let error;\n    try {\n      tileData = await getTileData({x, y, z, bbox, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n\n      if (this._isCancelled && !tileData) {\n        this._isLoaded = false;\n      } else {\n        // Consider it loaded if we tried to cancel but `getTileData` still returned data\n        this._isLoaded = true;\n        this._isCancelled = false;\n      }\n    }\n\n    if (!this._isLoaded) {\n      return;\n    }\n\n    if (error) {\n      this.onTileError(error, this);\n    } else {\n      this.content = tileData;\n      this.onTileLoad(this);\n    }\n  }\n  /* eslint-enable max-statements */\n\n  loadData(getTileData, requestScheduler) {\n    if (!getTileData) {\n      return;\n    }\n\n    this._isCancelled = false;\n    this._loader = this._loadData(getTileData, requestScheduler);\n    this._loader.finally(() => {\n      this._loader = undefined;\n    });\n  }\n\n  abort() {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController.abort();\n  }\n}\n"],"file":"tile-2d-header.js"}