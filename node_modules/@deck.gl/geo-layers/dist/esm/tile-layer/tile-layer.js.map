{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["CompositeLayer","_flatten","flatten","GeoJsonLayer","load","Tileset2D","STRATEGY_DEFAULT","urlType","getURLFromTemplate","defaultProps","data","dataComparator","equals","renderSubLayers","type","value","props","compare","getTileData","optional","onViewportLoad","onTileLoad","tile","onTileUnload","onTileError","err","console","error","extent","tileSize","maxZoom","minZoom","maxCacheSize","maxCacheByteSize","refinementStrategy","zRange","fetch","url","layer","signal","loadOptions","getLoadOptions","maxRequests","TileLayer","state","tiles","isLoaded","changeFlags","somethingChanged","oldProps","context","tileset","createTileCache","dataChanged","updateTriggersChanged","all","bind","_onTileLoad","_onTileError","_onTileUnload","setState","propsChanged","setOptions","forEach","layers","_updateTileset","frameNumber","update","viewport","loadingStateChanged","tilesetChanged","selectedTiles","map","getCurrentLayer","isVisible","setNeedsUpdate","info","sourceLayer","visible","highlightedObjectIndex","getHighlightedObjectIndex","Object","assign","id","x","y","z","_offset","Boolean","clone","every","layerName"],"mappings":";;;;;;;;;;;;;;;AAAA,SAAQA,cAAR,EAAwBC,QAAQ,IAAIC,OAApC,QAAkD,eAAlD;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,SAAP,IAAmBC,gBAAnB,QAA0C,cAA1C;AACA,SAAQC,OAAR,EAAiBC,kBAAjB,QAA0C,SAA1C;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,cAAc,EAAEJ,OAAO,CAACK,MAFL;AAGnBC,EAAAA,eAAe,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAC,KAAK;AAAA,aAAI,IAAIb,YAAJ,CAAiBa,KAAjB,CAAJ;AAAA,KAA/B;AAA4DC,IAAAA,OAAO,EAAE;AAArE,GAHE;AAInBC,EAAAA,WAAW,EAAE;AAACJ,IAAAA,IAAI,EAAE,UAAP;AAAmBK,IAAAA,QAAQ,EAAE,IAA7B;AAAmCJ,IAAAA,KAAK,EAAE,IAA1C;AAAgDE,IAAAA,OAAO,EAAE;AAAzD,GAJM;AAMnBG,EAAAA,cAAc,EAAE;AAACN,IAAAA,IAAI,EAAE,UAAP;AAAmBK,IAAAA,QAAQ,EAAE,IAA7B;AAAmCJ,IAAAA,KAAK,EAAE,IAA1C;AAAgDE,IAAAA,OAAO,EAAE;AAAzD,GANG;AAOnBI,EAAAA,UAAU,EAAE;AAACP,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAO,IAAI,EAAI,CAAE,CAApC;AAAsCL,IAAAA,OAAO,EAAE;AAA/C,GAPO;AAQnBM,EAAAA,YAAY,EAAE;AAACT,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAO,IAAI,EAAI,CAAE,CAApC;AAAsCL,IAAAA,OAAO,EAAE;AAA/C,GARK;AAUnBO,EAAAA,WAAW,EAAE;AAACV,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAU,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAA7B;AAAqDR,IAAAA,OAAO,EAAE;AAA9D,GAVM;AAWnBW,EAAAA,MAAM,EAAE;AAACd,IAAAA,IAAI,EAAE,OAAP;AAAgBK,IAAAA,QAAQ,EAAE,IAA1B;AAAgCJ,IAAAA,KAAK,EAAE,IAAvC;AAA6CE,IAAAA,OAAO,EAAE;AAAtD,GAXW;AAYnBY,EAAAA,QAAQ,EAAE,GAZS;AAanBC,EAAAA,OAAO,EAAE,IAbU;AAcnBC,EAAAA,OAAO,EAAE,CAdU;AAenBC,EAAAA,YAAY,EAAE,IAfK;AAgBnBC,EAAAA,gBAAgB,EAAE,IAhBC;AAiBnBC,EAAAA,kBAAkB,EAAE5B,gBAjBD;AAkBnB6B,EAAAA,MAAM,EAAE,IAlBW;AAoBnBC,EAAAA,KAAK,EAAE;AACLtB,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,KAAK,EAAE,eAACsB,GAAD,QAA0B;AAAA,UAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,UAAZC,MAAY,QAAZA,MAAY;;AAC/B,UAAMC,WAAW;AAAID,QAAAA,MAAM,EAANA;AAAJ,SAAgBD,KAAK,CAACG,cAAN,MAA0B,EAA1C,CAAjB;;AAEA,aAAOrC,IAAI,CAACiC,GAAD,EAAMG,WAAN,CAAX;AACD,KANI;AAOLvB,IAAAA,OAAO,EAAE;AAPJ,GApBY;AA6BnByB,EAAAA,WAAW,EAAE;AA7BM,CAArB;;IAgCqBC,S;;;;;;;;;;;;;sCACD;AAChB,WAAKC,KAAL,GAAa;AACXC,QAAAA,KAAK,EAAE,EADI;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OAAb;AAID;;;6CASgC;AAAA,UAAdC,WAAc,SAAdA,WAAc;AAC/B,aAAOA,WAAW,CAACC,gBAAnB;AACD;;;uCAEoD;AAAA,UAAxChC,KAAwC,SAAxCA,KAAwC;AAAA,UAAjCiC,QAAiC,SAAjCA,QAAiC;AAAA,UAAvBC,OAAuB,SAAvBA,OAAuB;AAAA,UAAdH,WAAc,SAAdA,WAAc;AAAA,UAC9CI,OAD8C,GACnC,KAAKP,KAD8B,CAC9CO,OAD8C;AAEnD,UAAMC,eAAe,GACnB,CAACD,OAAD,IACAJ,WAAW,CAACM,WADZ,IAECN,WAAW,CAACO,qBAAZ,KACEP,WAAW,CAACO,qBAAZ,CAAkCC,GAAlC,IAAyCR,WAAW,CAACO,qBAAZ,CAAkCpC,WAD7E,CAHH;;AAMA,UAAIkC,eAAJ,EAAqB;AAAA,YAEjBtB,OAFiB,GAUfd,KAVe,CAEjBc,OAFiB;AAAA,YAGjBC,OAHiB,GAUff,KAVe,CAGjBe,OAHiB;AAAA,YAIjBF,QAJiB,GAUfb,KAVe,CAIjBa,QAJiB;AAAA,YAKjBG,YALiB,GAUfhB,KAVe,CAKjBgB,YALiB;AAAA,YAMjBC,gBANiB,GAUfjB,KAVe,CAMjBiB,gBANiB;AAAA,YAOjBC,kBAPiB,GAUflB,KAVe,CAOjBkB,kBAPiB;AAAA,YAQjBN,MARiB,GAUfZ,KAVe,CAQjBY,MARiB;AAAA,YASjBc,WATiB,GAUf1B,KAVe,CASjB0B,WATiB;AAWnBS,QAAAA,OAAO,GAAG,IAAI9C,SAAJ,CAAc;AACtBa,UAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBsC,IAAjB,CAAsB,IAAtB,CADS;AAEtBxB,UAAAA,YAAY,EAAZA,YAFsB;AAGtBC,UAAAA,gBAAgB,EAAhBA,gBAHsB;AAItBH,UAAAA,OAAO,EAAPA,OAJsB;AAKtBC,UAAAA,OAAO,EAAPA,OALsB;AAMtBF,UAAAA,QAAQ,EAARA,QANsB;AAOtBK,UAAAA,kBAAkB,EAAlBA,kBAPsB;AAQtBN,UAAAA,MAAM,EAANA,MARsB;AAStBP,UAAAA,UAAU,EAAE,KAAKoC,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CATU;AAUtBhC,UAAAA,WAAW,EAAE,KAAKkC,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAVS;AAWtBjC,UAAAA,YAAY,EAAE,KAAKoC,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAXQ;AAYtBd,UAAAA,WAAW,EAAXA;AAZsB,SAAd,CAAV;AAcA,aAAKkB,QAAL,CAAc;AAACT,UAAAA,OAAO,EAAPA;AAAD,SAAd;AACD,OA1BD,MA0BO,IAAIJ,WAAW,CAACc,YAAZ,IAA4Bd,WAAW,CAACO,qBAA5C,EAAmE;AACxEH,QAAAA,OAAO,CAACW,UAAR,CAAmB9C,KAAnB;AAEA,aAAK4B,KAAL,CAAWO,OAAX,CAAmBN,KAAnB,CAAyBkB,OAAzB,CAAiC,UAAAzC,IAAI,EAAI;AACvCA,UAAAA,IAAI,CAAC0C,MAAL,GAAc,IAAd;AACD,SAFD;AAGD;;AAED,WAAKC,cAAL;AACD;;;qCAEgB;AAAA,UACRd,OADQ,GACG,KAAKP,KADR,CACRO,OADQ;AAAA,wBAEkB,KAAKnC,KAFvB;AAAA,UAERI,cAFQ,eAERA,cAFQ;AAAA,UAEQe,MAFR,eAEQA,MAFR;AAGf,UAAM+B,WAAW,GAAGf,OAAO,CAACgB,MAAR,CAAe,KAAKjB,OAAL,CAAakB,QAA5B,EAAsC;AAACjC,QAAAA,MAAM,EAANA;AAAD,OAAtC,CAApB;AAHe,UAIRW,QAJQ,GAIIK,OAJJ,CAIRL,QAJQ;AAMf,UAAMuB,mBAAmB,GAAG,KAAKzB,KAAL,CAAWE,QAAX,KAAwBA,QAApD;AACA,UAAMwB,cAAc,GAAG,KAAK1B,KAAL,CAAWsB,WAAX,KAA2BA,WAAlD;;AAEA,UAAIpB,QAAQ,IAAI1B,cAAZ,KAA+BiD,mBAAmB,IAAIC,cAAtD,CAAJ,EAA2E;AACzElD,QAAAA,cAAc,CAAC+B,OAAO,CAACoB,aAAR,CAAsBC,GAAtB,CAA0B,UAAAlD,IAAI;AAAA,iBAAIA,IAAI,CAACZ,IAAT;AAAA,SAA9B,CAAD,CAAd;AACD;;AAED,UAAI4D,cAAJ,EAAoB;AAElB,aAAKV,QAAL,CAAc;AAACM,UAAAA,WAAW,EAAXA;AAAD,SAAd;AACD;;AAED,WAAKtB,KAAL,CAAWE,QAAX,GAAsBA,QAAtB;AACD;;;gCAEWxB,I,EAAM;AAChB,UAAMgB,KAAK,GAAG,KAAKmC,eAAL,EAAd;AACAnC,MAAAA,KAAK,CAACtB,KAAN,CAAYK,UAAZ,CAAuBC,IAAvB;;AAEA,UAAIA,IAAI,CAACoD,SAAT,EAAoB;AAClB,aAAKC,cAAL;AACD;AACF;;;iCAEYhD,K,EAAOL,I,EAAM;AACxB,UAAMgB,KAAK,GAAG,KAAKmC,eAAL,EAAd;AACAnC,MAAAA,KAAK,CAACtB,KAAN,CAAYQ,WAAZ,CAAwBG,KAAxB;;AAEAW,MAAAA,KAAK,CAAC2B,cAAN;;AAEA,UAAI3C,IAAI,CAACoD,SAAT,EAAoB;AAClB,aAAKC,cAAL;AACD;AACF;;;kCAEarD,I,EAAM;AAClB,UAAMgB,KAAK,GAAG,KAAKmC,eAAL,EAAd;AACAnC,MAAAA,KAAK,CAACtB,KAAN,CAAYO,YAAZ,CAAyBD,IAAzB;AACD;;;gCAIWA,I,EAAM;AAAA,UACTZ,IADS,GACD,KAAKM,KADJ,CACTN,IADS;AAAA,kCAEa,KAAK+D,eAAL,GAAuBzD,KAFpC;AAAA,UAETE,WAFS,yBAETA,WAFS;AAAA,UAEIkB,KAFJ,yBAEIA,KAFJ;AAAA,UAGTG,MAHS,GAGCjB,IAHD,CAGTiB,MAHS;AAKhBjB,MAAAA,IAAI,CAACe,GAAL,GAAW7B,kBAAkB,CAACE,IAAD,EAAOY,IAAP,CAA7B;;AAEA,UAAIJ,WAAJ,EAAiB;AACf,eAAOA,WAAW,CAACI,IAAD,CAAlB;AACD;;AACD,UAAIA,IAAI,CAACe,GAAT,EAAc;AACZ,eAAOD,KAAK,CAACd,IAAI,CAACe,GAAN,EAAW;AAACC,UAAAA,KAAK,EAAE,IAAR;AAAcC,UAAAA,MAAM,EAANA;AAAd,SAAX,CAAZ;AACD;;AACD,aAAO,IAAP;AACD;;;oCAEevB,K,EAAO;AACrB,aAAO,KAAKA,KAAL,CAAWH,eAAX,CAA2BG,KAA3B,CAAP;AACD;;;gDAE2B;AAC1B,aAAO,CAAC,CAAR;AACD;;;0CAEmC;AAAA,UAApB4D,IAAoB,SAApBA,IAAoB;AAAA,UAAdC,WAAc,SAAdA,WAAc;AAClCD,MAAAA,IAAI,CAACC,WAAL,GAAmBA,WAAnB;AACAD,MAAAA,IAAI,CAACtD,IAAL,GAAYuD,WAAW,CAAC7D,KAAZ,CAAkBM,IAA9B;AACA,aAAOsD,IAAP;AACD;;;mCAEc;AAAA;;AAAA,UACNE,OADM,GACK,KAAK9D,KADV,CACN8D,OADM;AAEb,aAAO,KAAKlC,KAAL,CAAWO,OAAX,CAAmBN,KAAnB,CAAyB2B,GAAzB,CAA6B,UAAAlD,IAAI,EAAI;AAI1C,YAAMoD,SAAS,GAAGI,OAAO,IAAIxD,IAAI,CAACoD,SAAlC;;AACA,YAAMK,sBAAsB,GAAG,KAAI,CAACC,yBAAL,CAA+B1D,IAA/B,CAA/B;;AAEA,YAAI,CAACA,IAAI,CAACwB,QAAV,EAAoB,CAEnB,CAFD,MAEO,IAAI,CAACxB,IAAI,CAAC0C,MAAV,EAAkB;AACvB,cAAMA,MAAM,GAAG,KAAI,CAACnD,eAAL,CACboE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAI,CAAClE,KAAvB,EAA8B;AAC5BmE,YAAAA,EAAE,YAAK,KAAI,CAACA,EAAV,cAAgB7D,IAAI,CAAC8D,CAArB,cAA0B9D,IAAI,CAAC+D,CAA/B,cAAoC/D,IAAI,CAACgE,CAAzC,CAD0B;AAE5B5E,YAAAA,IAAI,EAAEY,IAAI,CAACZ,IAFiB;AAG5BoE,YAAAA,OAAO,EAAEJ,SAHmB;AAI5Ba,YAAAA,OAAO,EAAE,CAJmB;AAK5BjE,YAAAA,IAAI,EAAJA,IAL4B;AAM5ByD,YAAAA,sBAAsB,EAAtBA;AAN4B,WAA9B,CADa,CAAf;;AAUAzD,UAAAA,IAAI,CAAC0C,MAAL,GAAc9D,OAAO,CAAC8D,MAAD,EAASwB,OAAT,CAArB;AACD,SAZM,MAYA,IACLlE,IAAI,CAAC0C,MAAL,CAAY,CAAZ,MACC1C,IAAI,CAAC0C,MAAL,CAAY,CAAZ,EAAehD,KAAf,CAAqB8D,OAArB,KAAiCJ,SAAjC,IACCpD,IAAI,CAAC0C,MAAL,CAAY,CAAZ,EAAehD,KAAf,CAAqB+D,sBAArB,KAAgDA,sBAFlD,CADK,EAIL;AACAzD,UAAAA,IAAI,CAAC0C,MAAL,GAAc1C,IAAI,CAAC0C,MAAL,CAAYQ,GAAZ,CAAgB,UAAAlC,KAAK;AAAA,mBACjCA,KAAK,CAACmD,KAAN,CAAY;AAACX,cAAAA,OAAO,EAAEJ,SAAV;AAAqBK,cAAAA,sBAAsB,EAAtBA;AAArB,aAAZ,CADiC;AAAA,WAArB,CAAd;AAGD;;AACD,eAAOzD,IAAI,CAAC0C,MAAZ;AACD,OA/BM,CAAP;AAgCD;;;wBAxKc;AAAA,UACNb,OADM,GACK,KAAKP,KADV,CACNO,OADM;AAEb,aAAOA,OAAO,CAACoB,aAAR,CAAsBmB,KAAtB,CACL,UAAApE,IAAI;AAAA,eAAIA,IAAI,CAAC0C,MAAL,IAAe1C,IAAI,CAAC0C,MAAL,CAAY0B,KAAZ,CAAkB,UAAApD,KAAK;AAAA,iBAAIA,KAAK,CAACQ,QAAV;AAAA,SAAvB,CAAnB;AAAA,OADC,CAAP;AAGD;;;;EAboC9C,c;;SAAlB2C,S;AAmLrBA,SAAS,CAACgD,SAAV,GAAsB,WAAtB;AACAhD,SAAS,CAAClC,YAAV,GAAyBA,YAAzB","sourcesContent":["import {CompositeLayer, _flatten as flatten} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {load} from '@loaders.gl/core';\n\nimport Tileset2D, {STRATEGY_DEFAULT} from './tileset-2d';\nimport {urlType, getURLFromTemplate} from './utils';\n\nconst defaultProps = {\n  data: [],\n  dataComparator: urlType.equals,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props), compare: false},\n  getTileData: {type: 'function', optional: true, value: null, compare: false},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null, compare: false},\n  onTileLoad: {type: 'function', value: tile => {}, compare: false},\n  onTileUnload: {type: 'function', value: tile => {}, compare: false},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err), compare: false},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  // Use load directly so we don't use ResourceManager\n  fetch: {\n    type: 'function',\n    value: (url, {layer, signal}) => {\n      const loadOptions = {signal, ...(layer.getLoadOptions() || {})};\n\n      return load(url, loadOptions);\n    },\n    compare: false\n  },\n  maxRequests: 6\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tiles: [],\n      isLoaded: false\n    };\n  }\n\n  get isLoaded() {\n    const {tileset} = this.state;\n    return tileset.selectedTiles.every(\n      tile => tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    let {tileset} = this.state;\n    const createTileCache =\n      !tileset ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (createTileCache) {\n      const {\n        maxZoom,\n        minZoom,\n        tileSize,\n        maxCacheSize,\n        maxCacheByteSize,\n        refinementStrategy,\n        extent,\n        maxRequests\n      } = props;\n      tileset = new Tileset2D({\n        getTileData: this.getTileData.bind(this),\n        maxCacheSize,\n        maxCacheByteSize,\n        maxZoom,\n        minZoom,\n        tileSize,\n        refinementStrategy,\n        extent,\n        onTileLoad: this._onTileLoad.bind(this),\n        onTileError: this._onTileError.bind(this),\n        onTileUnload: this._onTileUnload.bind(this),\n        maxRequests\n      });\n      this.setState({tileset});\n    } else if (changeFlags.propsChanged || changeFlags.updateTriggersChanged) {\n      tileset.setOptions(props);\n      // if any props changed, delete the cached layers\n      this.state.tileset.tiles.forEach(tile => {\n        tile.layers = null;\n      });\n    }\n\n    this._updateTileset();\n  }\n\n  _updateTileset() {\n    const {tileset} = this.state;\n    const {onViewportLoad, zRange} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && onViewportLoad && (loadingStateChanged || tilesetChanged)) {\n      onViewportLoad(tileset.selectedTiles.map(tile => tile.data));\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onTileLoad(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileLoad(tile);\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileError(error, tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileError(error);\n    // errorred tiles should not block rendering, are considered \"loaded\" with empty data\n    layer._updateTileset();\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileUnload(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile) {\n    const {data} = this.props;\n    const {getTileData, fetch} = this.getCurrentLayer().props;\n    const {signal} = tile;\n\n    tile.url = getURLFromTemplate(data, tile);\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (tile.url) {\n      return fetch(tile.url, {layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(props) {\n    return this.props.renderSubLayers(props);\n  }\n\n  getHighlightedObjectIndex() {\n    return -1;\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  renderLayers() {\n    const {visible} = this.props;\n    return this.state.tileset.tiles.map(tile => {\n      // For a tile to be visible:\n      // - parent layer must be visible\n      // - tile must be visible in the current viewport\n      const isVisible = visible && tile.isVisible;\n      const highlightedObjectIndex = this.getHighlightedObjectIndex(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded) {\n        // no op\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers(\n          Object.assign({}, this.props, {\n            id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n            data: tile.data,\n            visible: isVisible,\n            _offset: 0,\n            tile,\n            highlightedObjectIndex\n          })\n        );\n        tile.layers = flatten(layers, Boolean);\n      } else if (\n        tile.layers[0] &&\n        (tile.layers[0].props.visible !== isVisible ||\n          tile.layers[0].props.highlightedObjectIndex !== highlightedObjectIndex)\n      ) {\n        tile.layers = tile.layers.map(layer =>\n          layer.clone({visible: isVisible, highlightedObjectIndex})\n        );\n      }\n      return tile.layers;\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}