{"version":3,"sources":["../../../src/tile-layer/tile-2d-header.js"],"names":["log","Tile2DHeader","x","y","z","onTileLoad","onTileError","isVisible","isSelected","parent","children","content","_isLoaded","_isCancelled","getTileData","requestScheduler","bbox","_abortController","AbortController","signal","scheduleRequest","tile","requestToken","done","tileData","error","_loader","_loadData","undefined","isLoaded","abort","Boolean","result","byteLength","Number","isFinite"],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z, onTileLoad, onTileError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n    this._isLoaded = false;\n    this._isCancelled = false;\n\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  get data() {\n    return this._isLoaded ? this.content : this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  get isLoading() {\n    return Boolean(this._loader);\n  }\n\n  get isCancelled() {\n    return this._isCancelled;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  async _loadData(getTileData, requestScheduler) {\n    const {x, y, z, bbox} = this;\n\n    this._abortController = new AbortController(); // eslint-disable-line no-undef\n    const {signal} = this._abortController;\n\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData;\n    let error;\n    try {\n      tileData = await getTileData({x, y, z, bbox, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n\n      if (this._isCancelled && !tileData) {\n        this._isLoaded = false;\n      } else {\n        // Consider it loaded if we tried to cancel but `getTileData` still returned data\n        this._isLoaded = true;\n        this._isCancelled = false;\n      }\n    }\n\n    if (!this._isLoaded) {\n      return;\n    }\n\n    if (error) {\n      this.onTileError(error, this);\n    } else {\n      this.content = tileData;\n      this.onTileLoad(this);\n    }\n  }\n  /* eslint-enable max-statements */\n\n  loadData(getTileData, requestScheduler) {\n    if (!getTileData) {\n      return;\n    }\n\n    this._isCancelled = false;\n    this._loader = this._loadData(getTileData, requestScheduler);\n    this._loader.finally(() => {\n      this._loader = undefined;\n    });\n  }\n\n  abort() {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController.abort();\n  }\n}\n"],"file":"tile-2d-header.js"}