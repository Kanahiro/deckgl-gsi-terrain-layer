{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["Matrix4","MVTLoader","load","COORDINATE_SYSTEM","TileLayer","getURLFromTemplate","ClipExtension","WORLD_SIZE","defaultProps","uniqueIdProperty","type","value","highlightedFeatureId","MVTLayer","tile","url","props","data","Promise","reject","options","getLoadOptions","mvt","coordinates","context","viewport","resolution","tileIndex","x","y","z","worldScale","Math","pow","xScale","yScale","xOffset","yOffset","modelMatrix","scale","autoHighlight","coordinateOrigin","coordinateSystem","CARTESIAN","extensions","info","pickingEvent","hoveredFeatureId","state","hoveredFeature","object","newHoveredFeatureId","getFeatureUniqueId","setState","isFeatureIdPresent","isFeatureIdDefined","Array","isArray","featureIdToHighlight","findIndex","feature","properties","id","undefined","layerName"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAQA,OAAR,QAAsB,SAAtB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,iBAAR,QAAgC,eAAhC;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAAQC,kBAAR,QAAiC,qBAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,IAAMC,UAAU,GAAG,GAAnB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADC;AAEnBC,EAAAA,oBAAoB,EAAE;AAFH,CAArB;;IAKqBC,Q;;;;;;;;;;;;;gCACPC,I,EAAM;AAChB,UAAMC,GAAG,GAAGV,kBAAkB,CAAC,KAAKW,KAAL,CAAWC,IAAZ,EAAkBH,IAAlB,CAA9B;;AACA,UAAI,CAACC,GAAL,EAAU;AACR,eAAOG,OAAO,CAACC,MAAR,CAAe,aAAf,CAAP;AACD;;AACD,UAAIC,OAAO,GAAG,KAAKC,cAAL,EAAd;AACAD,MAAAA,OAAO,mCACFA,OADE;AAELE,QAAAA,GAAG,kCACGF,OAAO,IAAIA,OAAO,CAACE,GADtB;AAEDC,UAAAA,WAAW,EAAE,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,UAAtB,GAAmC,OAAnC,GAA6C,OAFzD;AAGDC,UAAAA,SAAS,EAAE;AAACC,YAAAA,CAAC,EAAEd,IAAI,CAACc,CAAT;AAAYC,YAAAA,CAAC,EAAEf,IAAI,CAACe,CAApB;AAAuBC,YAAAA,CAAC,EAAEhB,IAAI,CAACgB;AAA/B;AAHV;AAFE,QAAP;AAQA,aAAO5B,IAAI,CAACa,GAAD,EAAMd,SAAN,EAAiBmB,OAAjB,CAAX;AACD;;;oCAEeJ,K,EAAO;AAAA,UACdF,IADc,GACNE,KADM,CACdF,IADc;AAErB,UAAMiB,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYnB,IAAI,CAACgB,CAAjB,CAAnB;AAEA,UAAMI,MAAM,GAAG3B,UAAU,GAAGwB,UAA5B;AACA,UAAMI,MAAM,GAAG,CAACD,MAAhB;AAEA,UAAME,OAAO,GAAI7B,UAAU,GAAGO,IAAI,CAACc,CAAnB,GAAwBG,UAAxC;AACA,UAAMM,OAAO,GAAG9B,UAAU,IAAI,IAAIO,IAAI,CAACe,CAAL,GAASE,UAAjB,CAA1B;AAEA,UAAMO,WAAW,GAAG,IAAItC,OAAJ,GAAcuC,KAAd,CAAoB,CAACL,MAAD,EAASC,MAAT,EAAiB,CAAjB,CAApB,CAApB;AAEAnB,MAAAA,KAAK,CAACwB,aAAN,GAAsB,KAAtB;;AACA,UAAI,CAAC,KAAKhB,OAAL,CAAaC,QAAb,CAAsBC,UAA3B,EAAuC;AACrCV,QAAAA,KAAK,CAACsB,WAAN,GAAoBA,WAApB;AACAtB,QAAAA,KAAK,CAACyB,gBAAN,GAAyB,CAACL,OAAD,EAAUC,OAAV,EAAmB,CAAnB,CAAzB;AACArB,QAAAA,KAAK,CAAC0B,gBAAN,GAAyBvC,iBAAiB,CAACwC,SAA3C;AACA3B,QAAAA,KAAK,CAAC4B,UAAN,gCAAwB5B,KAAK,CAAC4B,UAAN,IAAoB,EAA5C,IAAiD,IAAItC,aAAJ,EAAjD;AACD;;AAED,2FAA6BU,KAA7B;AACD;;;4BAEO6B,I,EAAMC,Y,EAAc;AAAA,wBACgB,KAAK9B,KADrB;AAAA,UACnBP,gBADmB,eACnBA,gBADmB;AAAA,UACD+B,aADC,eACDA,aADC;;AAG1B,UAAIA,aAAJ,EAAmB;AAAA,YACVO,gBADU,GACU,KAAKC,KADf,CACVD,gBADU;AAEjB,YAAME,cAAc,GAAGJ,IAAI,CAACK,MAA5B;AACA,YAAIC,mBAAJ;;AAEA,YAAIF,cAAJ,EAAoB;AAClBE,UAAAA,mBAAmB,GAAGC,kBAAkB,CAACH,cAAD,EAAiBxC,gBAAjB,CAAxC;AACD;;AAED,YAAIsC,gBAAgB,KAAKI,mBAAzB,EAA8C;AAC5C,eAAKE,QAAL,CAAc;AAACN,YAAAA,gBAAgB,EAAEI;AAAnB,WAAd;AACD;AACF;;AAED,mFAAqBN,IAArB,EAA2BC,YAA3B;AACD;;;8CAEyBhC,I,EAAM;AAAA,UACvBiC,gBADuB,GACH,KAAKC,KADF,CACvBD,gBADuB;AAAA,yBAEmB,KAAK/B,KAFxB;AAAA,UAEvBP,gBAFuB,gBAEvBA,gBAFuB;AAAA,UAELG,oBAFK,gBAELA,oBAFK;AAAA,UAGvBK,IAHuB,GAGfH,IAHe,CAGvBG,IAHuB;AAK9B,UAAMqC,kBAAkB,GACtBC,kBAAkB,CAACR,gBAAD,CAAlB,IAAwCQ,kBAAkB,CAAC3C,oBAAD,CAD5D;;AAGA,UAAI,CAAC0C,kBAAD,IAAuB,CAACE,KAAK,CAACC,OAAN,CAAcxC,IAAd,CAA5B,EAAiD;AAC/C,eAAO,CAAC,CAAR;AACD;;AAED,UAAMyC,oBAAoB,GAAGH,kBAAkB,CAAC3C,oBAAD,CAAlB,GACzBA,oBADyB,GAEzBmC,gBAFJ;AAIA,aAAO9B,IAAI,CAAC0C,SAAL,CACL,UAAAC,OAAO;AAAA,eAAIR,kBAAkB,CAACQ,OAAD,EAAUnD,gBAAV,CAAlB,KAAkDiD,oBAAtD;AAAA,OADF,CAAP;AAGD;;;;EAhFmCtD,S;;SAAjBS,Q;;AAmFrB,SAASuC,kBAAT,CAA4BQ,OAA5B,EAAqCnD,gBAArC,EAAuD;AACrD,MAAIA,gBAAJ,EAAsB;AACpB,WAAOmD,OAAO,CAACC,UAAR,CAAmBpD,gBAAnB,CAAP;AACD;;AAED,MAAI,QAAQmD,OAAZ,EAAqB;AACnB,WAAOA,OAAO,CAACE,EAAf;AACD;;AAED,SAAO,CAAC,CAAR;AACD;;AAED,SAASP,kBAAT,CAA4B5C,KAA5B,EAAmC;AACjC,SAAOA,KAAK,KAAKoD,SAAV,IAAuBpD,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAA1D;AACD;;AAEDE,QAAQ,CAACmD,SAAT,GAAqB,UAArB;AACAnD,QAAQ,CAACL,YAAT,GAAwBA,YAAxB","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate} from '../tile-layer/utils';\nimport ClipExtension from './clip-extension';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null\n};\n\nexport default class MVTLayer extends TileLayer {\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.props.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let options = this.getLoadOptions();\n    options = {\n      ...options,\n      mvt: {\n        ...(options && options.mvt),\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: {x: tile.x, y: tile.y, z: tile.z}\n      }\n    };\n    return load(url, MVTLoader, options);\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    return super.renderSubLayers(props);\n  }\n\n  onHover(info, pickingEvent) {\n    const {uniqueIdProperty, autoHighlight} = this.props;\n\n    if (autoHighlight) {\n      const {hoveredFeatureId} = this.state;\n      const hoveredFeature = info.object;\n      let newHoveredFeatureId;\n\n      if (hoveredFeature) {\n        newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      }\n\n      if (hoveredFeatureId !== newHoveredFeatureId) {\n        this.setState({hoveredFeatureId: newHoveredFeatureId});\n      }\n    }\n\n    return super.onHover(info, pickingEvent);\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const {data} = tile;\n\n    const isFeatureIdPresent =\n      isFeatureIdDefined(hoveredFeatureId) || isFeatureIdDefined(highlightedFeatureId);\n\n    if (!isFeatureIdPresent || !Array.isArray(data)) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isFeatureIdDefined(highlightedFeatureId)\n      ? highlightedFeatureId\n      : hoveredFeatureId;\n\n    return data.findIndex(\n      feature => getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight\n    );\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return -1;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n"],"file":"mvt-layer.js"}