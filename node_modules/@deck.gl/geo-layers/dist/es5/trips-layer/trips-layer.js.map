{"version":3,"sources":["../../../src/trips-layer/trips-layer.js"],"names":["defaultProps","trailLength","type","value","min","currentTime","getTimestamps","TripsLayer","shaders","inject","params","attributeManager","getAttributeManager","addInstanced","timestamps","size","accessor","shaderAttributes","instanceTimestamps","vertexOffset","instanceNextTimestamps","props","uniforms","Object","assign","PathLayer","layerName"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE,GAAxB;AAA6BC,IAAAA,GAAG,EAAE;AAAlC,GADM;AAEnBC,EAAAA,WAAW,EAAE;AAACH,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE,CAAxB;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GAFM;AAGnBE,EAAAA,aAAa,EAAE;AAACJ,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B;AAHI,CAArB;;IAMqBI,U;;;;;;;;;;;;iCACN;AACX,UAAMC,OAAO,+GAAb;AACAA,MAAAA,OAAO,CAACC,MAAR,GAAiB;AACf,sJADe;AAQf,uIARe;AAWf,oGAXe;AAiBf,2GAjBe;AAuBf,kCAA0B;AAvBX,OAAjB;AAyBA,aAAOD,OAAP;AACD;;;oCAEeE,M,EAAQ;AACtB,wHAAsBA,MAAtB;AAEA,UAAMC,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;AACAD,MAAAA,gBAAgB,CAACE,YAAjB,CAA8B;AAC5BC,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAE,CADI;AAEVC,UAAAA,QAAQ,EAAE,eAFA;AAGVC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,kBAAkB,EAAE;AAClBC,cAAAA,YAAY,EAAE;AADI,aADJ;AAIhBC,YAAAA,sBAAsB,EAAE;AACtBD,cAAAA,YAAY,EAAE;AADQ;AAJR;AAHR;AADgB,OAA9B;AAcD;;;yBAEIT,M,EAAQ;AAAA,wBACwB,KAAKW,KAD7B;AAAA,UACJpB,WADI,eACJA,WADI;AAAA,UACSI,WADT,eACSA,WADT;AAGXK,MAAAA,MAAM,CAACY,QAAP,GAAkBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,MAAM,CAACY,QAAzB,EAAmC;AACnDrB,QAAAA,WAAW,EAAXA,WADmD;AAEnDI,QAAAA,WAAW,EAAXA;AAFmD,OAAnC,CAAlB;AAKA,6GAAWK,MAAX;AACD;;;EA5DqCe,iB;;;AA+DxClB,UAAU,CAACmB,SAAX,GAAuB,YAAvB;AACAnB,UAAU,CAACP,YAAX,GAA0BA,YAA1B","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {PathLayer} from '@deck.gl/layers';\n\nconst defaultProps = {\n  trailLength: {type: 'number', value: 120, min: 0},\n  currentTime: {type: 'number', value: 0, min: 0},\n  getTimestamps: {type: 'accessor', value: null}\n};\n\nexport default class TripsLayer extends PathLayer {\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.inject = {\n      'vs:#decl': `\\\nuniform float trailLength;\nattribute float instanceTimestamps;\nattribute float instanceNextTimestamps;\nvarying float vTime;\n`,\n      // Timestamp of the vertex\n      'vs:#main-end': `\\\nvTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n`,\n      'fs:#decl': `\\\nuniform float trailLength;\nuniform float currentTime;\nvarying float vTime;\n`,\n      // Drop the segments outside of the time window\n      'fs:#main-start': `\\\nif(vTime > currentTime || vTime < currentTime - trailLength) {\n  discard;\n}\n`,\n      // Fade the color (currentTime - 100%, end of trail - 0%)\n      'fs:DECKGL_FILTER_COLOR': 'color.a *= 1.0 - (currentTime - vTime) / trailLength;'\n    };\n    return shaders;\n  }\n\n  initializeState(params) {\n    super.initializeState(params);\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      timestamps: {\n        size: 1,\n        accessor: 'getTimestamps',\n        shaderAttributes: {\n          instanceTimestamps: {\n            vertexOffset: 0\n          },\n          instanceNextTimestamps: {\n            vertexOffset: 1\n          }\n        }\n      }\n    });\n  }\n\n  draw(params) {\n    const {trailLength, currentTime} = this.props;\n\n    params.uniforms = Object.assign({}, params.uniforms, {\n      trailLength,\n      currentTime\n    });\n\n    super.draw(params);\n  }\n}\n\nTripsLayer.layerName = 'TripsLayer';\nTripsLayer.defaultProps = defaultProps;\n"],"file":"trips-layer.js"}