{"version":3,"sources":["../../src/deckgl.js"],"names":["React","createElement","PropTypes","Deck","_memoize","memoize","extractJSXLayers","positionChildrenUnderViews","extractStyles","propTypes","getPropTypes","defaultProps","DeckGL","Component","constructor","props","viewports","children","_needsRedraw","_containerRef","createRef","_canvasRef","pickObject","bind","pickMultipleObjects","pickObjects","_extractJSXLayers","_positionChildrenUnderViews","_extractStyles","componentDidMount","DeckClass","deck","Object","assign","parent","current","canvas","style","width","height","_customRender","_updateFromProps","shouldComponentUpdate","nextProps","childrenChanged","_parseJSX","viewsChanged","viewManager","needsRedraw","componentDidUpdate","_redrawDeck","componentWillUnmount","finalize","opts","_drawLayers","redrawReason","getViewports","forceUpdate","layers","views","deckProps","setProps","render","ContextProvider","containerStyle","canvasStyle","key","ref","id"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport {Deck, _memoize as memoize} from '@deck.gl/core';\n\nimport extractJSXLayers from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\nimport extractStyles from './utils/extract-styles';\n\nconst propTypes = Deck.getPropTypes(PropTypes);\n\nconst defaultProps = Deck.defaultProps;\n\nexport default class DeckGL extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.viewports = null;\n    this.children = null;\n\n    // The redraw flag of deck\n    this._needsRedraw = null;\n\n    // Refs\n    this._containerRef = React.createRef();\n    this._canvasRef = React.createRef();\n\n    // Bind public methods\n    this.pickObject = this.pickObject.bind(this);\n    this.pickMultipleObjects = this.pickMultipleObjects.bind(this);\n    this.pickObjects = this.pickObjects.bind(this);\n\n    // Memoized functions\n    this._extractJSXLayers = memoize(extractJSXLayers);\n    this._positionChildrenUnderViews = memoize(positionChildrenUnderViews);\n    this._extractStyles = memoize(extractStyles);\n  }\n\n  componentDidMount() {\n    // Allows a subclass of Deck to be used\n    // TODO - update propTypes / defaultProps?\n    const DeckClass = this.props.Deck || Deck;\n\n    // DEVTOOLS can cause this to be called twice\n    this.deck =\n      this.deck ||\n      new DeckClass(\n        Object.assign({}, this.props, {\n          parent: this._containerRef.current,\n          canvas: this._canvasRef.current,\n          style: null,\n          width: '100%',\n          height: '100%',\n          // The Deck's animation loop is independent from React's render cycle, causing potential\n          // synchronization issues. We provide this custom render function to make sure that React\n          // and Deck update on the same schedule.\n          _customRender: this._customRender.bind(this)\n        })\n      );\n    this._updateFromProps(this.props);\n  }\n\n  // This method checks if React needs to call `render`.\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL context - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL context and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  shouldComponentUpdate(nextProps) {\n    // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n    // the next animation frame.\n    this._updateFromProps(nextProps);\n\n    // If the child components have changed, React needs to rerender (case 2 or 3)\n    const childrenChanged = this.children !== this._parseJSX(nextProps).children;\n    // If the views have changed, both React and WebGL context need update (case 3)\n    const viewsChanged = this.deck.viewManager && this.deck.viewManager.needsRedraw();\n\n    // Only call `render` right away in case 2\n    return childrenChanged && !viewsChanged;\n  }\n\n  componentDidUpdate() {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    this._redrawDeck();\n  }\n\n  componentWillUnmount() {\n    this.deck.finalize();\n  }\n\n  // Public API\n\n  pickObject(opts) {\n    return this.deck.pickObject(opts);\n  }\n\n  pickMultipleObjects(opts) {\n    return this.deck.pickMultipleObjects(opts);\n  }\n\n  pickObjects(opts) {\n    return this.deck.pickObjects(opts);\n  }\n\n  // Callbacks\n  _redrawDeck() {\n    if (this._needsRedraw) {\n      // Only redraw it we have received a dirty flag\n      this.deck._drawLayers(this._needsRedraw);\n      this._needsRedraw = null;\n    }\n  }\n\n  _customRender(redrawReason) {\n    // Save the dirty flag for later\n    this._needsRedraw = redrawReason;\n\n    // Viewport/view state is passed to child components as props.\n    // If they have changed, we need to trigger a React rerender to update children props.\n    const viewports = this.deck.viewManager.getViewports();\n    if (viewports !== this.viewports) {\n      // Viewports have changed, update children props first.\n      // This will delay the Deck canvas redraw till after React update (in componentDidUpdate)\n      // so that the canvas does not get rendered before the child components update.\n      this.forceUpdate();\n    } else {\n      this._redrawDeck();\n    }\n  }\n\n  // Private Helpers\n\n  _parseJSX(props) {\n    return this._extractJSXLayers({\n      layers: props.layers,\n      views: props.views,\n      children: props.children\n    });\n  }\n\n  // 1. Extract any JSX layers from the react children\n  // 2. Handle any backwards compatiblity props for React layer\n  // Needs to be called both from initial mount, and when new props are received\n  _updateFromProps(props) {\n    // extract any deck.gl layers masquerading as react elements from props.children\n    const {layers, views} = this._parseJSX(props);\n    const deckProps = Object.assign({}, props, {\n      // Override user styling props. We will set the canvas style in render()\n      style: null,\n      width: '100%',\n      height: '100%',\n      layers,\n      views\n    });\n\n    this.deck.setProps(deckProps);\n  }\n\n  render() {\n    const {ContextProvider, width, height, style} = this.props;\n    // Save the viewports and children used for this render\n    const {viewManager} = this.deck || {};\n    this.viewports = viewManager && viewManager.getViewports();\n    this.children = this._parseJSX(this.props).children;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const children = this._positionChildrenUnderViews({\n      children: this.children,\n      viewports: this.viewports,\n      deck: this.deck,\n      ContextProvider\n    });\n\n    const {containerStyle, canvasStyle} = this._extractStyles({width, height, style});\n\n    const canvas = createElement('canvas', {\n      key: 'canvas',\n      ref: this._canvasRef,\n      style: canvasStyle\n    });\n\n    // Render deck.gl as the last child\n    return createElement(\n      'div',\n      {id: 'deckgl-wrapper', ref: this._containerRef, style: containerStyle},\n      [canvas, children]\n    );\n  }\n}\n\nDeckGL.propTypes = propTypes;\nDeckGL.defaultProps = defaultProps;\n"],"file":"deckgl.js"}