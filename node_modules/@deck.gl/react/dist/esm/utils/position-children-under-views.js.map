{"version":3,"sources":["../../../src/utils/position-children-under-views.js"],"names":["createElement","View","inheritsFrom","evaluateChildren","positionChildrenUnderViews","children","viewports","deck","ContextProvider","viewManager","views","length","defaultViewId","id","child","viewId","viewChildren","type","props","viewport","getViewport","viewState","getViewState","x","y","width","height","push","Object","keys","map","style","position","left","top","key","viewElement","contextValue","container","canvas","offsetParent","eventManager","onViewStateChange","params","_onViewStateChange","value"],"mappings":"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","sourcesContent":["import {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, viewports, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views = {};\n  const defaultViewId = viewManager.views[0].id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n"],"file":"position-children-under-views.js"}