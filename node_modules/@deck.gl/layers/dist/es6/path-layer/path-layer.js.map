{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["Layer","project32","picking","log","Model","Geometry","PathTesselator","vs","fs","DEFAULT_COLOR","defaultProps","widthUnits","widthScale","type","min","value","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","billboard","_pathType","getPath","object","path","getColor","getWidth","ATTRIBUTE_TRANSITION","enter","chunk","length","subarray","PathLayer","getShaders","modules","wrapLongitude","initializeState","noAlloc","attributeManager","getAttributeManager","addInstanced","positions","size","vertexOffset","fp64","use64bitPositions","transition","accessor","update","calculatePositions","shaderAttributes","instanceLeftPositions","instanceStartPositions","instanceEndPositions","instanceRightPositions","instanceTypes","calculateSegmentTypes","instanceStrokeWidths","defaultValue","instanceColors","props","colorFormat","normalized","instancePickingColors","index","target","encodePickingColor","__source","setState","pathTesselator","getDashArray","extensions","removed","updateState","oldProps","changeFlags","geometryChanged","dataChanged","updateTriggersChanged","all","state","buffers","data","attributes","updateGeometry","geometryBuffer","normalize","loop","getGeometry","positionFormat","resolution","context","viewport","numInstances","instanceCount","startIndices","vertexStarts","invalidateAll","extensionsChanged","gl","model","delete","_getModel","getPickingInfo","params","info","find","d","draw","uniforms","widthMultiplier","metersPerPixel","setUniforms","Object","assign","jointType","SEGMENT_INDICES","SEGMENT_POSITIONS","id","geometry","drawMode","indices","Uint16Array","Float32Array","isInstanced","attribute","get","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, log} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport PathTesselator from './path-tesselator';\n\nimport vs from './path-layer-vertex.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthUnits: 'meters',\n  widthScale: {type: 'number', min: 0, value: 1}, // stroke width in meters\n  widthMinPixels: {type: 'number', min: 0, value: 0}, //  min stroke width in pixels\n  widthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max stroke width in pixels\n  rounded: false,\n  miterLimit: {type: 'number', min: 0, value: 4},\n  billboard: false,\n  // `loop` or `open`\n  _pathType: null,\n\n  getPath: {type: 'accessor', value: object => object.path},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1}\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]}); // 'project' module added by default.\n  }\n\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      positions: {\n        size: 3,\n        // Start filling buffer from 1 vertex in\n        vertexOffset: 1,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceLeftPositions: {\n            vertexOffset: 0\n          },\n          instanceStartPositions: {\n            vertexOffset: 1\n          },\n          instanceEndPositions: {\n            vertexOffset: 2\n          },\n          instanceRightPositions: {\n            vertexOffset: 3\n          }\n        }\n      },\n      instanceTypes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        update: this.calculateSegmentTypes,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: (object, {index, target: value}) =>\n          this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n      }\n    });\n    /* eslint-enable max-len */\n\n    this.setState({\n      pathTesselator: new PathTesselator({\n        fp64: this.use64bitPositions()\n      })\n    });\n\n    if (this.props.getDashArray && !this.props.extensions.length) {\n      log.removed('getDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const attributeManager = this.getAttributeManager();\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      const {pathTesselator} = this.state;\n      const buffers = props.data.attributes || {};\n\n      pathTesselator.updateGeometry({\n        data: props.data,\n        geometryBuffer: buffers.getPath,\n        buffers,\n        normalize: !props._pathType,\n        loop: props._pathType === 'loop',\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        // TODO - move the flag out of the viewport\n        resolution: this.context.viewport.resolution,\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        startIndices: pathTesselator.vertexStarts\n      });\n      if (!changeFlags.dataChanged) {\n        // Base `layer.updateState` only invalidates all attributes on data change\n        // Cover the rest of the scenarios here\n        attributeManager.invalidateAll();\n      }\n    }\n\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      attributeManager.invalidateAll();\n    }\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n    const {index} = info;\n    const {data} = this.props;\n\n    if (data[0] && data[0].__source) {\n      // data is wrapped\n      info.object = data.find(d => d.__source.index === index);\n    }\n    return info;\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {\n      rounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels\n    } = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          jointType: Number(rounded),\n          billboard,\n          widthScale: widthScale * widthMultiplier,\n          miterLimit,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    // prettier-ignore\n    const SEGMENT_INDICES = [\n      // start corner\n      0, 1, 2,\n      // body\n      1, 4, 2,\n      1, 3, 4,\n      // end corner\n      3, 5, 4\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center (joint), 1: right\n    // prettier-ignore\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0, 0,\n      // start inner corner\n      0, -1,\n      // start outer corner\n      0, 1,\n      // end inner corner\n      1, -1,\n      // end outer corner\n      1, 1,\n      // bevel end corner\n      1, 0\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: {value: new Float32Array(SEGMENT_POSITIONS), size: 2}\n          }\n        }),\n        isInstanced: true\n      })\n    );\n  }\n\n  calculatePositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('positions');\n  }\n\n  calculateSegmentTypes(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('segmentTypes');\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}