{"version":3,"sources":["../../../src/arc-layer/arc-layer.js"],"names":["Layer","project32","picking","Model","Geometry","vs","fs","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getWidth","getHeight","getTilt","greatCircle","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","ArcLayer","getShaders","modules","initializeState","attributeManager","getAttributeManager","addInstanced","instanceSourcePositions","size","fp64","use64bitPositions","transition","accessor","instanceTargetPositions","instanceSourceColors","props","colorFormat","length","normalized","defaultValue","instanceTargetColors","instanceWidths","instanceHeights","instanceTilts","updateState","oldProps","changeFlags","extensionsChanged","gl","context","state","model","delete","setState","_getModel","invalidateAll","draw","uniforms","viewport","widthMultiplier","metersPerPixel","setUniforms","positions","NUM_SEGMENTS","i","concat","Object","assign","id","geometry","drawMode","attributes","Float32Array","isInstanced","numSegments","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking} from '@deck.gl/core';\n\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './arc-layer-vertex.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getSourceColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getTargetColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getHeight: {type: 'accessor', value: 1},\n  getTilt: {type: 'accessor', value: 0},\n\n  greatCircle: false,\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0}\n};\n\nexport default class ArcLayer extends Layer {\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]}); // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceSourceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      },\n      instanceHeights: {\n        size: 1,\n        transition: true,\n        accessor: 'getHeight',\n        defaultValue: 1\n      },\n      instanceTilts: {\n        size: 1,\n        transition: true,\n        accessor: 'getTilt',\n        defaultValue: 0\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    // Re-generate model if geometry changed\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels, greatCircle} = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        greatCircle,\n        widthScale: widthScale * widthMultiplier,\n        widthMinPixels,\n        widthMaxPixels\n      })\n      .draw();\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, 1, 0, i, -1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true\n      })\n    );\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n}\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n"],"file":"arc-layer.js"}