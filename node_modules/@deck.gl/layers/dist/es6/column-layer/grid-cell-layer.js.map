{"version":3,"sources":["../../../src/column-layer/grid-cell-layer.js"],"names":["CubeGeometry","ColumnLayer","defaultProps","cellSize","type","min","value","offset","GridCellLayer","getGeometry","diskResolution","draw","uniforms","elevationScale","extruded","coverage","angle","props","state","model","setUniforms","Object","assign","radius","edgeDistance","isWireframe","layerName"],"mappings":"AAoBA,SAAQA,YAAR,QAA2B,eAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAtB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GADS;AAEnBC,EAAAA,MAAM,EAAE;AAACH,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE,CAArB;AAAwBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAA/B;AAFW,CAArB;AAKA,eAAe,MAAME,aAAN,SAA4BP,WAA5B,CAAwC;AACrDQ,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAC1B,WAAO,IAAIV,YAAJ,EAAP;AACD;;AAEDW,EAAAA,IAAI,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAa;AACf,UAAM;AAACC,MAAAA,cAAD;AAAiBC,MAAAA,QAAjB;AAA2BP,MAAAA,MAA3B;AAAmCQ,MAAAA,QAAnC;AAA6CZ,MAAAA,QAA7C;AAAuDa,MAAAA;AAAvD,QAAgE,KAAKC,KAA3E;AACA,SAAKC,KAAL,CAAWC,KAAX,CACGC,WADH,CAEIC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,QAAlB,EAA4B;AAC1BW,MAAAA,MAAM,EAAEpB,QAAQ,GAAG,CADO;AAE1Ba,MAAAA,KAF0B;AAG1BT,MAAAA,MAH0B;AAI1BO,MAAAA,QAJ0B;AAK1BC,MAAAA,QAL0B;AAM1BF,MAAAA,cAN0B;AAO1BW,MAAAA,YAAY,EAAE,CAPY;AAQ1BC,MAAAA,WAAW,EAAE;AARa,KAA5B,CAFJ,EAaGd,IAbH;AAcD;;AArBoD;AAwBvDH,aAAa,CAACkB,SAAd,GAA0B,eAA1B;AACAlB,aAAa,CAACN,YAAd,GAA6BA,YAA7B","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CubeGeometry} from '@luma.gl/core';\nimport ColumnLayer from './column-layer';\n\nconst defaultProps = {\n  cellSize: {type: 'number', min: 0, value: 1000},\n  offset: {type: 'array', min: 0, value: [1, 1]}\n};\n\nexport default class GridCellLayer extends ColumnLayer {\n  getGeometry(diskResolution) {\n    return new CubeGeometry();\n  }\n\n  draw({uniforms}) {\n    const {elevationScale, extruded, offset, coverage, cellSize, angle} = this.props;\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          radius: cellSize / 2,\n          angle,\n          offset,\n          extruded,\n          coverage,\n          elevationScale,\n          edgeDistance: 1,\n          isWireframe: false\n        })\n      )\n      .draw();\n  }\n}\n\nGridCellLayer.layerName = 'GridCellLayer';\nGridCellLayer.defaultProps = defaultProps;\n"],"file":"grid-cell-layer.js"}