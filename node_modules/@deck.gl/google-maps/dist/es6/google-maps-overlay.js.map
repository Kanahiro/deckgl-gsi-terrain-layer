{"version":3,"sources":["../../src/google-maps-overlay.js"],"names":["createDeckInstance","destroyDeckInstance","getViewState","HIDE_ALL_LAYERS","GoogleMapsOverlay","constructor","props","_map","overlay","google","maps","OverlayView","onAdd","_onAdd","bind","onRemove","_onRemove","draw","_draw","_overlay","setProps","setMap","map","Object","assign","_deck","style","canvas","parentElement","pickObject","params","pickMultipleObjects","pickObjects","finalize","layerFilter","deck","width","height","left","top","zoom","pitch","latitude","longitude","canSyncWithGoogleMaps","parentStyle","viewState","repeat","redraw"],"mappings":"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","sourcesContent":["/* global google */\nimport {createDeckInstance, destroyDeckInstance, getViewState} from './utils';\n\nconst HIDE_ALL_LAYERS = () => false;\n\nexport default class GoogleMapsOverlay {\n  constructor(props) {\n    this.props = {};\n\n    this._map = null;\n\n    const overlay = new google.maps.OverlayView();\n    overlay.onAdd = this._onAdd.bind(this);\n    overlay.onRemove = this._onRemove.bind(this);\n    overlay.draw = this._draw.bind(this);\n    this._overlay = overlay;\n\n    this.setProps(props);\n  }\n\n  /* Public API */\n\n  setMap(map) {\n    if (map === this._map) {\n      return;\n    }\n    if (this._map) {\n      this._overlay.setMap(null);\n      this._map = null;\n    }\n    if (map) {\n      this._map = map;\n      this._overlay.setMap(map);\n    }\n  }\n\n  setProps(props) {\n    Object.assign(this.props, props);\n    if (this._deck) {\n      if (props.style) {\n        Object.assign(this._deck.canvas.parentElement.style, props.style);\n        props.style = null;\n      }\n      this._deck.setProps(props);\n    }\n  }\n\n  pickObject(params) {\n    return this._deck && this._deck.pickObject(params);\n  }\n\n  pickMultipleObjects(params) {\n    return this._deck && this._deck.pickMultipleObjects(params);\n  }\n\n  pickObjects(params) {\n    return this._deck && this._deck.pickObjects(params);\n  }\n\n  finalize() {\n    this.setMap(null);\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  /* Private API */\n  _onAdd() {\n    this._deck = createDeckInstance(this._map, this._overlay, this._deck, this.props);\n  }\n\n  _onRemove() {\n    // Clear deck canvas\n    this._deck.setProps({layerFilter: HIDE_ALL_LAYERS});\n  }\n\n  _draw() {\n    const deck = this._deck;\n    const {width, height, left, top, zoom, pitch, latitude, longitude} = getViewState(\n      this._map,\n      this._overlay\n    );\n\n    const canSyncWithGoogleMaps = pitch === 0;\n\n    const parentStyle = deck.canvas.parentElement.style;\n    parentStyle.left = `${left}px`;\n    parentStyle.top = `${top}px`;\n\n    deck.setProps({\n      width,\n      height,\n      viewState: {latitude, longitude, zoom, repeat: true},\n      // deck.gl cannot sync with the base map with zoom < 0 and/or tilt\n      layerFilter: canSyncWithGoogleMaps ? this.props.layerFilter : HIDE_ALL_LAYERS\n    });\n    // Deck is initialized\n    deck.redraw();\n  }\n}\n"],"file":"google-maps-overlay.js"}