{"version":3,"sources":["../../../src/controllers/transition-manager.js"],"names":["LinearInterpolator","Transition","noop","TRANSITION_EVENTS","BREAK","SNAP_TO_END","IGNORE","DEFAULT_PROPS","transitionDuration","transitionEasing","t","transitionInterpolator","transitionInterruption","onTransitionStart","onTransitionInterrupt","onTransitionEnd","TransitionManager","constructor","ControllerState","props","Object","assign","propsInTransition","transition","timeline","onViewStateChange","_onTransitionUpdate","bind","finalize","cancel","getViewportInTransition","processViewStateChange","nextProps","transitionTriggered","currentProps","_shouldIgnoreViewportChange","_isTransitionEnabled","interruption","endProps","settings","startProps","_triggerTransition","updateTransition","update","Boolean","_isUpdateDueToCurrentTransition","inProgress","interpolator","arePropsEqual","startViewstate","endViewStateProps","shortestPathFrom","duration","getDuration","initialProps","initializeProps","start","easing","end","onStart","onUpdate","onInterrupt","_onTransitionEnd","onEnd","callback","time","viewport","interpolateProps","getViewportProps","viewState","interactionState","inTransition","oldViewState","defaultProps"],"mappings":"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","sourcesContent":["import LinearInterpolator from '../transitions/linear-interpolator';\nimport Transition from '../transitions/transition';\n\nconst noop = () => {};\n\nexport const TRANSITION_EVENTS = {\n  BREAK: 1,\n  SNAP_TO_END: 2,\n  IGNORE: 3\n};\n\nconst DEFAULT_PROPS = {\n  transitionDuration: 0,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK,\n  onTransitionStart: noop,\n  onTransitionInterrupt: noop,\n  onTransitionEnd: noop\n};\n\nexport default class TransitionManager {\n  constructor(ControllerState, props = {}) {\n    this.ControllerState = ControllerState;\n    this.props = Object.assign({}, DEFAULT_PROPS, props);\n    this.propsInTransition = null;\n    this.transition = new Transition(props.timeline);\n\n    this.onViewStateChange = props.onViewStateChange;\n\n    this._onTransitionUpdate = this._onTransitionUpdate.bind(this);\n  }\n\n  finalize() {\n    this.transition.cancel();\n  }\n\n  // Returns current transitioned viewport.\n  getViewportInTransition() {\n    return this.propsInTransition;\n  }\n\n  // Process the vewiport change, either ignore or trigger a new transition.\n  // Return true if a new transition is triggered, false otherwise.\n  processViewStateChange(nextProps) {\n    let transitionTriggered = false;\n    const currentProps = this.props;\n    // Set this.props here as '_triggerTransition' calls '_updateViewport' that uses this.props.\n    nextProps = Object.assign({}, DEFAULT_PROPS, nextProps);\n    this.props = nextProps;\n\n    // NOTE: Be cautious re-ordering statements in this function.\n    if (this._shouldIgnoreViewportChange(currentProps, nextProps)) {\n      return transitionTriggered;\n    }\n\n    if (this._isTransitionEnabled(nextProps)) {\n      const {interruption, endProps} = this.transition.settings;\n      const startProps = Object.assign(\n        {},\n        currentProps,\n        interruption === TRANSITION_EVENTS.SNAP_TO_END\n          ? endProps\n          : this.propsInTransition || currentProps\n      );\n\n      this._triggerTransition(startProps, nextProps);\n\n      transitionTriggered = true;\n    } else {\n      this.transition.cancel();\n    }\n\n    return transitionTriggered;\n  }\n\n  updateTransition() {\n    this.transition.update();\n  }\n\n  // Helper methods\n\n  _isTransitionEnabled(props) {\n    const {transitionDuration, transitionInterpolator} = props;\n    return (\n      (transitionDuration > 0 || transitionDuration === 'auto') && Boolean(transitionInterpolator)\n    );\n  }\n\n  _isUpdateDueToCurrentTransition(props) {\n    if (this.transition.inProgress) {\n      return this.transition.settings.interpolator.arePropsEqual(props, this.propsInTransition);\n    }\n    return false;\n  }\n\n  _shouldIgnoreViewportChange(currentProps, nextProps) {\n    if (this.transition.inProgress) {\n      // Ignore update if it is requested to be ignored\n      return (\n        this.transition.settings.interruption === TRANSITION_EVENTS.IGNORE ||\n        // Ignore update if it is due to current active transition.\n        this._isUpdateDueToCurrentTransition(nextProps)\n      );\n    } else if (this._isTransitionEnabled(nextProps)) {\n      // Ignore if none of the viewport props changed.\n      return nextProps.transitionInterpolator.arePropsEqual(currentProps, nextProps);\n    }\n    return true;\n  }\n\n  _triggerTransition(startProps, endProps) {\n    const startViewstate = new this.ControllerState(startProps);\n    const endViewStateProps = new this.ControllerState(endProps).shortestPathFrom(startViewstate);\n\n    // update transitionDuration for 'auto' mode\n    const {transitionInterpolator} = endProps;\n    const duration = transitionInterpolator.getDuration\n      ? transitionInterpolator.getDuration(startProps, endProps)\n      : endProps.transitionDuration;\n\n    if (duration === 0) {\n      return;\n    }\n\n    const initialProps = endProps.transitionInterpolator.initializeProps(\n      startProps,\n      endViewStateProps\n    );\n\n    this.propsInTransition = {};\n    this.duration = duration;\n    this.transition.start({\n      duration,\n      easing: endProps.transitionEasing,\n      interpolator: endProps.transitionInterpolator,\n      interruption: endProps.transitionInterruption,\n\n      startProps: initialProps.start,\n      endProps: initialProps.end,\n\n      onStart: endProps.onTransitionStart,\n      onUpdate: this._onTransitionUpdate,\n      onInterrupt: this._onTransitionEnd(endProps.onTransitionInterrupt),\n      onEnd: this._onTransitionEnd(endProps.onTransitionEnd)\n    });\n    this.updateTransition();\n  }\n\n  _onTransitionEnd(callback) {\n    return transition => {\n      this.propsInTransition = null;\n      callback(transition);\n    };\n  }\n\n  _onTransitionUpdate(transition) {\n    // NOTE: Be cautious re-ordering statements in this function.\n    const {\n      time,\n      settings: {interpolator, startProps, endProps, duration, easing}\n    } = transition;\n    const t = easing(time / duration);\n    const viewport = interpolator.interpolateProps(startProps, endProps, t);\n\n    // This gurantees all props (e.g. bearing, longitude) are normalized\n    // So when viewports are compared they are in same range.\n    this.propsInTransition = new this.ControllerState(\n      Object.assign({}, this.props, viewport)\n    ).getViewportProps();\n\n    if (this.onViewStateChange) {\n      this.onViewStateChange({\n        viewState: this.propsInTransition,\n        interactionState: {inTransition: true},\n        oldViewState: this.props\n      });\n    }\n  }\n}\n\nTransitionManager.defaultProps = DEFAULT_PROPS;\n"],"file":"transition-manager.js"}