{"version":3,"sources":["../../../src/lib/effect-manager.js"],"names":["deepEqual","default","LightingEffect","DEFAULT_LIGHTING_EFFECT","EffectManager","constructor","effects","_internalEffects","_needsRedraw","setEffects","setProps","props","length","needsRedraw","opts","clearRedrawFlags","redraw","getEffects","finalize","cleanup","_createInternalEffects","effect","slice","some","push"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,qBAAxB;AACA,SAAQC,OAAO,IAAIC,cAAnB,QAAwC,qCAAxC;AAEA,MAAMC,uBAAuB,GAAG,IAAID,cAAJ,EAAhC;AAEA,eAAe,MAAME,aAAN,CAAoB;AACjCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,YAAL,GAAoB,gBAApB;AACA,SAAKC,UAAL;AACD;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAI,aAAaA,KAAjB,EAAwB;AACtB,UAAIA,KAAK,CAACL,OAAN,CAAcM,MAAd,KAAyB,KAAKN,OAAL,CAAaM,MAAtC,IAAgD,CAACZ,SAAS,CAACW,KAAK,CAACL,OAAP,EAAgB,KAAKA,OAArB,CAA9D,EAA6F;AAC3F,aAAKG,UAAL,CAAgBE,KAAK,CAACL,OAAtB;AACA,aAAKE,YAAL,GAAoB,iBAApB;AACD;AACF;AACF;;AAEDK,EAAAA,WAAW,CAACC,IAAI,GAAG;AAACC,IAAAA,gBAAgB,EAAE;AAAnB,GAAR,EAAmC;AAC5C,UAAMC,MAAM,GAAG,KAAKR,YAApB;;AACA,QAAIM,IAAI,CAACC,gBAAT,EAA2B;AACzB,WAAKP,YAAL,GAAoB,KAApB;AACD;;AACD,WAAOQ,MAAP;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKV,gBAAZ;AACD;;AAEDW,EAAAA,QAAQ,GAAG;AACT,SAAKC,OAAL;AACD;;AAGDV,EAAAA,UAAU,CAACH,OAAO,GAAG,EAAX,EAAe;AACvB,SAAKa,OAAL;AACA,SAAKb,OAAL,GAAeA,OAAf;;AACA,SAAKc,sBAAL;AACD;;AAEDD,EAAAA,OAAO,GAAG;AACR,SAAK,MAAME,MAAX,IAAqB,KAAKf,OAA1B,EAAmC;AACjCe,MAAAA,MAAM,CAACF,OAAP;AACD;;AAED,SAAK,MAAME,MAAX,IAAqB,KAAKd,gBAA1B,EAA4C;AAC1Cc,MAAAA,MAAM,CAACF,OAAP;AACD;;AACD,SAAKb,OAAL,CAAaM,MAAb,GAAsB,CAAtB;AACA,SAAKL,gBAAL,CAAsBK,MAAtB,GAA+B,CAA/B;AACD;;AAEDQ,EAAAA,sBAAsB,GAAG;AACvB,SAAKb,gBAAL,GAAwB,KAAKD,OAAL,CAAagB,KAAb,EAAxB;;AACA,QAAI,CAAC,KAAKhB,OAAL,CAAaiB,IAAb,CAAkBF,MAAM,IAAIA,MAAM,YAAYnB,cAA9C,CAAL,EAAoE;AAClE,WAAKK,gBAAL,CAAsBiB,IAAtB,CAA2BrB,uBAA3B;AACD;AACF;;AAzDgC","sourcesContent":["import {deepEqual} from '../utils/deep-equal';\nimport {default as LightingEffect} from '../effects/lighting/lighting-effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nexport default class EffectManager {\n  constructor() {\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n        this.setEffects(props.effects);\n        this._needsRedraw = 'effects changed';\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._internalEffects;\n  }\n\n  finalize() {\n    this.cleanup();\n  }\n\n  // Private\n  setEffects(effects = []) {\n    this.cleanup();\n    this.effects = effects;\n    this._createInternalEffects();\n  }\n\n  cleanup() {\n    for (const effect of this.effects) {\n      effect.cleanup();\n    }\n\n    for (const effect of this._internalEffects) {\n      effect.cleanup();\n    }\n    this.effects.length = 0;\n    this._internalEffects.length = 0;\n  }\n\n  _createInternalEffects() {\n    this._internalEffects = this.effects.slice();\n    if (!this.effects.some(effect => effect instanceof LightingEffect)) {\n      this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n  }\n}\n"],"file":"effect-manager.js"}