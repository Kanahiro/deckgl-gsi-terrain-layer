{"version":3,"sources":["../../../src/lib/composite-layer.js"],"names":["Layer","debug","flatten","TRACE_RENDER_LAYERS","CompositeLayer","isComposite","isLoaded","getSubLayers","every","layer","internalState","subLayers","initializeState","setState","updateObject","setNeedsUpdate","getPickingInfo","info","object","isDataWrapped","__source","parent","id","Object","assign","index","renderLayers","shouldRenderSubLayer","data","_subLayerProps","overridingProps","props","length","getSubLayerClass","DefaultLayerClass","type","getSubLayerRow","row","sourceObject","sourceObjectIndex","getSubLayerAccessor","accessor","objectInfo","target","x","i","getSubLayerProps","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","newProps","overridingSublayerProps","overridingSublayerTriggers","updateTriggers","sublayerId","propTypes","constructor","_propTypes","key","propType","all","extension","passThroughProps","call","_getAttributeManager","_renderLayers","shouldUpdate","needsUpdate","Boolean","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // Updates selected state members and marks the composite layer to need rerender\n  setState(updateObject) {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    return Object.assign(info, {\n      // override object with picked data\n      object: object.__source.object,\n      index: object.__source.index\n    });\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  // Returns true if sub layer needs to be rendered\n  shouldRenderSubLayer(id, data) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (data && data.length) || (overridingProps && overridingProps[id]);\n  }\n\n  // Returns sub layer class for a specific sublayer\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps && overridingProps[id] && overridingProps[id].type) || DefaultLayerClass\n    );\n  }\n\n  // When casting user data into another format to pass to sublayers,\n  // add reference to the original object and object index\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  // Some composite layers cast user data into another format before passing to sublayers\n  // We need to unwrap them before calling the accessor so that they see the original data\n  // objects\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n        return accessor(x, i);\n      };\n    }\n    return accessor;\n  }\n\n  // Returns sub layer props for a specific sublayer\n  getSubLayerProps(sublayerProps = {}) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions\n    };\n\n    const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      for (const key in overridingSublayerProps) {\n        const propType = propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps,\n      {\n        id: `${this.props.id}-${sublayerId}`,\n        updateTriggers: Object.assign(\n          {\n            all: this.props.updateTriggers.all\n          },\n          sublayerProps.updateTriggers,\n          overridingSublayerTriggers\n        )\n      }\n    );\n\n    // Pass through extension props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n"],"file":"composite-layer.js"}