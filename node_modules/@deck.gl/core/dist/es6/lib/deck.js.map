{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","DeckRenderer","DeckPicker","Tooltip","log","deepEqual","typedArrayManager","deckGlobal","getBrowser","AnimationLoop","createGLContext","instrumentGLContext","setParameters","Timeline","lumaStats","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","onError","debug","drawPickingColors","_framebuffer","_animate","_pickable","_typedArrayManagerProps","defaultProps","_onMetrics","Deck","constructor","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","initialViewState","warn","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","start","finalize","stop","eventManager","destroy","tooltip","remove","parentElement","removeChild","get","timeStart","removed","_setCanvasSize","resolvedProps","create","_getViews","_getViewState","activateViewport","getViewports","timeEnd","needsRedraw","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","getViews","rect","pickObject","infos","_pick","result","length","pickMultipleObjects","depth","pickObjects","_addResources","resources","forceUpdate","resourceManager","add","resourceId","data","_removeResources","resourceIds","method","statKey","getLayers","viewports","onViewportActive","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","autoResizeViewport","onCreateContext","onInitialize","onRender","Array","isArray","event","type","x","y","radius","leftButton","rightButton","pos","offsetCenter","context","mousePosition","mode","emptyInfo","pickedInfo","handled","info","layer","onHover","getTooltip","displayInfo","setTooltip","_updateCursor","container","cursor","_setGLContext","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","timeline","play","attachTimeline","events","pointerdown","pointermove","pointerleave","eventType","on","onInteractiveStateChange","viewport","deck","renderOptions","renderLayers","target","pass","getEffects","animationProps","_getFrameStats","_getMetrics","reset","table","updateLayers","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layerHandler","handler","rootHandler","call","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","VERSION"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport deckGlobal from './init';\n\nimport {getBrowser} from 'probe.gl/env';\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n    _framebuffer: PropTypes.object,\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool,\n\n    // UNSAFE options - not exhaustively tested, not guaranteed to work in all cases, use at your own risk\n\n    // Set to false to disable picking - avoiding picking buffer creation can save memory for mobile web browsers\n    _pickable: PropTypes.bool,\n\n    // Adjust parameters of typed array manager, can save memory e.g. for mobile web browsers\n    _typedArrayManagerProps: PropTypes.object //  {overAlloc: number, poolSize: number}\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: null,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n    this.props = {};\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    if (getBrowser() === 'IE') {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setProps(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n\n      this.viewManager.finalize();\n      this.viewManager = null;\n\n      this.effectManager.finalize();\n      this.effectManager = null;\n\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n\n      this.deckPicker.finalize();\n      this.deckPicker = null;\n\n      this.eventManager.destroy();\n      this.eventManager = null;\n\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (props.initialViewState && !deepEqual(this.props.initialViewState, props.initialViewState)) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager.setProps(resolvedProps);\n      this.deckRenderer.setProps(resolvedProps);\n      this.deckPicker.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D} */\n  pickObject(opts) {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D, depth = 10} */\n  pickMultipleObjects(opts) {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* {x, y, width = 1, height = 1, layerIds = null} */\n  pickObjects(opts) {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  // Experimental\n\n  _addResources(resources, forceUpdate = false) {\n    for (const id in resources) {\n      this.layerManager.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  _removeResources(resourceIds) {\n    for (const id of resourceIds) {\n      this.layerManager.resourceManager.remove(id);\n    }\n  }\n\n  // Private Methods\n\n  _pick(method, statKey, opts) {\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method](\n      Object.assign(\n        {\n          layers: this.layerManager.getLayers(opts),\n          views: this.viewManager.getViews(),\n          viewports: this.getViewports(opts),\n          onViewportActive: this.layerManager.activateViewport\n        },\n        opts\n      )\n    );\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState() {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews() {\n    // Default to a full screen map view port\n    let views = this.props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = this.props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer.onHover(info, _pickRequest.event);\n      }\n      if (!handled && this.props.onHover) {\n        this.props.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Update tooltip\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  _updateCursor() {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          target: this.props._framebuffer,\n          layers: this.layerManager.getLayers(),\n          viewports: this.viewManager.getViewports(),\n          onViewportActive: this.layerManager.activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        this.viewManager.setProps({viewState: this.viewState});\n      }\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/visgl/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}