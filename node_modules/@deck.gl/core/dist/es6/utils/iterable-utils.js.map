{"version":3,"sources":["../../../src/utils/iterable-utils.js"],"names":["EMPTY_ARRAY","placeholderArray","createIterable","data","startRow","endRow","Infinity","iterable","objectInfo","index","target","Symbol","iterator","length","Number","isFinite","Array","isArray","from","slice","isAsyncIterable","asyncIterator","getAccessorFromBuffer","typedArray","size","stride","offset","startIndices","nested","bytesPerElement","BYTES_PER_ELEMENT","elementStride","elementOffset","vertexCount","Math","floor","_","sourceIndex","j","startIndex","endIndex","result","i","subarray","constructor","targetIndex"],"mappings":"AAoBA,MAAMA,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AAOA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,QAAQ,GAAG,CAAzC,EAA4CC,MAAM,GAAGC,QAArD,EAA+D;AACpE,MAAIC,QAAQ,GAAGP,WAAf;AAEA,QAAMQ,UAAU,GAAG;AACjBC,IAAAA,KAAK,EAAE,CAAC,CADS;AAEjBN,IAAAA,IAFiB;AAIjBO,IAAAA,MAAM,EAAE;AAJS,GAAnB;;AAOA,MAAI,CAACP,IAAL,EAAW;AACTI,IAAAA,QAAQ,GAAGP,WAAX;AACD,GAFD,MAEO,IAAI,OAAOG,IAAI,CAACQ,MAAM,CAACC,QAAR,CAAX,KAAiC,UAArC,EAAiD;AAEtDL,IAAAA,QAAQ,GAAGJ,IAAX;AACD,GAHM,MAGA,IAAIA,IAAI,CAACU,MAAL,GAAc,CAAlB,EAAqB;AAC1BZ,IAAAA,gBAAgB,CAACY,MAAjB,GAA0BV,IAAI,CAACU,MAA/B;AACAN,IAAAA,QAAQ,GAAGN,gBAAX;AACD;;AAED,MAAIG,QAAQ,GAAG,CAAX,IAAgBU,MAAM,CAACC,QAAP,CAAgBV,MAAhB,CAApB,EAA6C;AAC3CE,IAAAA,QAAQ,GAAG,CAACS,KAAK,CAACC,OAAN,CAAcV,QAAd,IAA0BA,QAA1B,GAAqCS,KAAK,CAACE,IAAN,CAAWX,QAAX,CAAtC,EAA4DY,KAA5D,CAAkEf,QAAlE,EAA4EC,MAA5E,CAAX;AACAG,IAAAA,UAAU,CAACC,KAAX,GAAmBL,QAAQ,GAAG,CAA9B;AACD;;AAED,SAAO;AAACG,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAP;AACD;AAKD,OAAO,SAASY,eAAT,CAAyBjB,IAAzB,EAA+B;AACpC,SAAOA,IAAI,IAAIA,IAAI,CAACQ,MAAM,CAACU,aAAR,CAAnB;AACD;AAKD,OAAO,SAASC,qBAAT,CAA+BC,UAA/B,EAA2C;AAACC,EAAAA,IAAD;AAAOC,EAAAA,MAAP;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA,YAAvB;AAAqCC,EAAAA;AAArC,CAA3C,EAAyF;AAC9F,QAAMC,eAAe,GAAGN,UAAU,CAACO,iBAAnC;AACA,QAAMC,aAAa,GAAGN,MAAM,GAAGA,MAAM,GAAGI,eAAZ,GAA8BL,IAA1D;AACA,QAAMQ,aAAa,GAAGN,MAAM,GAAGA,MAAM,GAAGG,eAAZ,GAA8B,CAA1D;AACA,QAAMI,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACZ,UAAU,CAACV,MAAX,GAAoBmB,aAArB,IAAsCD,aAAjD,CAApB;AAEA,SAAO,CAACK,CAAD,EAAI;AAAC3B,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAJ,KAAwB;AAC7B,QAAI,CAACiB,YAAL,EAAmB;AACjB,YAAMU,WAAW,GAAG5B,KAAK,GAAGsB,aAAR,GAAwBC,aAA5C;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,IAApB,EAA0Bc,CAAC,EAA3B,EAA+B;AAC7B5B,QAAAA,MAAM,CAAC4B,CAAD,CAAN,GAAYf,UAAU,CAACc,WAAW,GAAGC,CAAf,CAAtB;AACD;;AACD,aAAO5B,MAAP;AACD;;AACD,UAAM6B,UAAU,GAAGZ,YAAY,CAAClB,KAAD,CAA/B;AACA,UAAM+B,QAAQ,GAAGb,YAAY,CAAClB,KAAK,GAAG,CAAT,CAAZ,IAA2BwB,WAA5C;AACA,QAAIQ,MAAJ;;AAEA,QAAIb,MAAJ,EAAY;AACVa,MAAAA,MAAM,GAAG,IAAIzB,KAAJ,CAAUwB,QAAQ,GAAGD,UAArB,CAAT;;AACA,WAAK,IAAIG,CAAC,GAAGH,UAAb,EAAyBG,CAAC,GAAGF,QAA7B,EAAuCE,CAAC,EAAxC,EAA4C;AAC1C,cAAML,WAAW,GAAGK,CAAC,GAAGX,aAAJ,GAAoBC,aAAxC;AACAtB,QAAAA,MAAM,GAAG,IAAIM,KAAJ,CAAUQ,IAAV,CAAT;;AACA,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,IAApB,EAA0Bc,CAAC,EAA3B,EAA+B;AAC7B5B,UAAAA,MAAM,CAAC4B,CAAD,CAAN,GAAYf,UAAU,CAACc,WAAW,GAAGC,CAAf,CAAtB;AACD;;AACDG,QAAAA,MAAM,CAACC,CAAC,GAAGH,UAAL,CAAN,GAAyB7B,MAAzB;AACD;AACF,KAVD,MAUO,IAAIqB,aAAa,KAAKP,IAAtB,EAA4B;AACjCiB,MAAAA,MAAM,GAAGlB,UAAU,CAACoB,QAAX,CACPJ,UAAU,GAAGf,IAAb,GAAoBQ,aADb,EAEPQ,QAAQ,GAAGhB,IAAX,GAAkBQ,aAFX,CAAT;AAID,KALM,MAKA;AACLS,MAAAA,MAAM,GAAG,IAAIlB,UAAU,CAACqB,WAAf,CAA2B,CAACJ,QAAQ,GAAGD,UAAZ,IAA0Bf,IAArD,CAAT;AACA,UAAIqB,WAAW,GAAG,CAAlB;;AACA,WAAK,IAAIH,CAAC,GAAGH,UAAb,EAAyBG,CAAC,GAAGF,QAA7B,EAAuCE,CAAC,EAAxC,EAA4C;AAC1C,cAAML,WAAW,GAAGK,CAAC,GAAGX,aAAJ,GAAoBC,aAAxC;;AACA,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,IAApB,EAA0Bc,CAAC,EAA3B,EAA+B;AAC7BG,UAAAA,MAAM,CAACI,WAAW,EAAZ,CAAN,GAAwBtB,UAAU,CAACc,WAAW,GAAGC,CAAf,CAAlC;AACD;AACF;AACF;;AAED,WAAOG,MAAP;AACD,GAvCD;AAwCD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst EMPTY_ARRAY = [];\nconst placeholderArray = [];\n\n/*\n * Create an Iterable\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * and a \"context\" tracker from the given data\n */\nexport function createIterable(data, startRow = 0, endRow = Infinity) {\n  let iterable = EMPTY_ARRAY;\n\n  const objectInfo = {\n    index: -1,\n    data,\n    // visitor can optionally utilize this to avoid constructing a new array for every object\n    target: []\n  };\n\n  if (!data) {\n    iterable = EMPTY_ARRAY;\n  } else if (typeof data[Symbol.iterator] === 'function') {\n    // data is already an iterable\n    iterable = data;\n  } else if (data.length > 0) {\n    placeholderArray.length = data.length;\n    iterable = placeholderArray;\n  }\n\n  if (startRow > 0 || Number.isFinite(endRow)) {\n    iterable = (Array.isArray(iterable) ? iterable : Array.from(iterable)).slice(startRow, endRow);\n    objectInfo.index = startRow - 1;\n  }\n\n  return {iterable, objectInfo};\n}\n\n/*\n * Returns true if data is an async iterable object\n */\nexport function isAsyncIterable(data) {\n  return data && data[Symbol.asyncIterator];\n}\n\n/*\n * Create an accessor function from a flat buffer that yields the value at each object index\n */\nexport function getAccessorFromBuffer(typedArray, {size, stride, offset, startIndices, nested}) {\n  const bytesPerElement = typedArray.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : size;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const vertexCount = Math.floor((typedArray.length - elementOffset) / elementStride);\n\n  return (_, {index, target}) => {\n    if (!startIndices) {\n      const sourceIndex = index * elementStride + elementOffset;\n      for (let j = 0; j < size; j++) {\n        target[j] = typedArray[sourceIndex + j];\n      }\n      return target;\n    }\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || vertexCount;\n    let result;\n\n    if (nested) {\n      result = new Array(endIndex - startIndex);\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        target = new Array(size);\n        for (let j = 0; j < size; j++) {\n          target[j] = typedArray[sourceIndex + j];\n        }\n        result[i - startIndex] = target;\n      }\n    } else if (elementStride === size) {\n      result = typedArray.subarray(\n        startIndex * size + elementOffset,\n        endIndex * size + elementOffset\n      );\n    } else {\n      result = new typedArray.constructor((endIndex - startIndex) * size);\n      let targetIndex = 0;\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        for (let j = 0; j < size; j++) {\n          result[targetIndex++] = typedArray[sourceIndex + j];\n        }\n      }\n    }\n\n    return result;\n  };\n}\n"],"file":"iterable-utils.js"}