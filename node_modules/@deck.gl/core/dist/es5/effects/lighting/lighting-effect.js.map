{"version":3,"sources":["../../../../src/effects/lighting/lighting-effect.js"],"names":["DEFAULT_AMBIENT_LIGHT_PROPS","color","intensity","DEFAULT_DIRECTIONAL_LIGHT_PROPS","direction","DEFAULT_SHADOW_COLOR","LightingEffect","props","ambientLight","directionalLights","pointLights","shadowColor","shadowPasses","shadowMaps","dummyShadowMap","shadow","programManager","key","lightSource","type","push","_applyDefaultLights","some","light","gl","layers","layerFilter","viewports","onViewportActive","views","shadowMatrices","_createLightMatrix","length","_createShadowPasses","ProgramManager","getDefaultProgramManager","addDefaultModule","Texture2D","width","height","i","shadowPass","render","moduleParameters","shadowLightId","layer","parameters","lightSources","map","directionalLight","getProjectedLight","pointLight","removeDefaultModule","lightMatrices","viewMatrix","Matrix4","lookAt","eye","Vector3","negate","ShadowPass","shadowMap","AmbientLight","DirectionalLight","Effect"],"mappings":"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","sourcesContent":["import {Texture2D, ProgramManager} from '@luma.gl/core';\nimport {AmbientLight} from './ambient-light';\nimport {DirectionalLight} from './directional-light';\nimport Effect from '../../lib/effect';\nimport {Matrix4, Vector3} from 'math.gl';\nimport ShadowPass from '../../passes/shadow-pass';\nimport {default as shadow} from '../../shaderlib/shadow/shadow';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, 3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, -8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect extends Effect {\n  constructor(props) {\n    super(props);\n    this.ambientLight = null;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    this.shadowColor = DEFAULT_SHADOW_COLOR;\n    this.shadowPasses = [];\n    this.shadowMaps = [];\n    this.dummyShadowMap = null;\n    this.shadow = false;\n    this.programManager = null;\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    this.shadow = this.directionalLights.some(light => light.shadow);\n  }\n\n  preRender(gl, {layers, layerFilter, viewports, onViewportActive, views}) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._createLightMatrix();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl);\n    }\n    if (!this.programManager) {\n      // TODO - support multiple contexts\n      this.programManager = ProgramManager.getDefaultProgramManager(gl);\n      if (shadow) {\n        this.programManager.addDefaultModule(shadow);\n      }\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        moduleParameters: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices: this.shadowMatrices\n        }\n      });\n    }\n  }\n\n  getModuleParameters(layer) {\n    const parameters = this.shadow\n      ? {\n          shadowMaps: this.shadowMaps,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowColor: this.shadowColor,\n          shadowMatrices: this.shadowMatrices\n        }\n      : {};\n\n    // when not rendering to screen, turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    parameters.lightSources = {\n      ambientLight: this.ambientLight,\n      directionalLights: this.directionalLights.map(directionalLight =>\n        directionalLight.getProjectedLight({layer})\n      ),\n      pointLights: this.pointLights.map(pointLight => pointLight.getProjectedLight({layer}))\n    };\n\n    return parameters;\n  }\n\n  cleanup() {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n    this.shadowMaps.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow && this.programManager) {\n      this.programManager.removeDefaultModule(shadow);\n      this.programManager = null;\n    }\n  }\n\n  _createLightMatrix() {\n    const lightMatrices = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  _createShadowPasses(gl) {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const shadowPass = new ShadowPass(gl);\n      this.shadowPasses[i] = shadowPass;\n      this.shadowMaps[i] = shadowPass.shadowMap;\n    }\n  }\n\n  _applyDefaultLights() {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])\n      );\n    }\n  }\n}\n"],"file":"lighting-effect.js"}