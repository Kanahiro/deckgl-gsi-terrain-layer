{"version":3,"sources":["../../../src/lib/effect-manager.js"],"names":["DEFAULT_LIGHTING_EFFECT","LightingEffect","EffectManager","effects","_internalEffects","_needsRedraw","setEffects","props","length","opts","clearRedrawFlags","redraw","cleanup","_createInternalEffects","effect","slice","some","push"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,uBAAuB,GAAG,IAAIC,0BAAJ,EAAhC;;IAEqBC,a;AACnB,2BAAc;AAAA;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,YAAL,GAAoB,gBAApB;AACA,SAAKC,UAAL;AACD;;;;6BAEQC,K,EAAO;AACd,UAAI,aAAaA,KAAjB,EAAwB;AACtB,YAAIA,KAAK,CAACJ,OAAN,CAAcK,MAAd,KAAyB,KAAKL,OAAL,CAAaK,MAAtC,IAAgD,CAAC,0BAAUD,KAAK,CAACJ,OAAhB,EAAyB,KAAKA,OAA9B,CAArD,EAA6F;AAC3F,eAAKG,UAAL,CAAgBC,KAAK,CAACJ,OAAtB;AACA,eAAKE,YAAL,GAAoB,iBAApB;AACD;AACF;AACF;;;kCAE6C;AAAA,UAAlCI,IAAkC,uEAA3B;AAACC,QAAAA,gBAAgB,EAAE;AAAnB,OAA2B;AAC5C,UAAMC,MAAM,GAAG,KAAKN,YAApB;;AACA,UAAII,IAAI,CAACC,gBAAT,EAA2B;AACzB,aAAKL,YAAL,GAAoB,KAApB;AACD;;AACD,aAAOM,MAAP;AACD;;;iCAEY;AACX,aAAO,KAAKP,gBAAZ;AACD;;;+BAEU;AACT,WAAKQ,OAAL;AACD;;;iCAGwB;AAAA,UAAdT,OAAc,uEAAJ,EAAI;AACvB,WAAKS,OAAL;AACA,WAAKT,OAAL,GAAeA,OAAf;;AACA,WAAKU,sBAAL;AACD;;;8BAES;AAAA,iDACa,KAAKV,OADlB;AAAA;;AAAA;AACR,4DAAmC;AAAA,cAAxBW,MAAwB;AACjCA,UAAAA,MAAM,CAACF,OAAP;AACD;AAHO;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAKa,KAAKR,gBALlB;AAAA;;AAAA;AAKR,+DAA4C;AAAA,cAAjCU,OAAiC;;AAC1CA,UAAAA,OAAM,CAACF,OAAP;AACD;AAPO;AAAA;AAAA;AAAA;AAAA;;AAQR,WAAKT,OAAL,CAAaK,MAAb,GAAsB,CAAtB;AACA,WAAKJ,gBAAL,CAAsBI,MAAtB,GAA+B,CAA/B;AACD;;;6CAEwB;AACvB,WAAKJ,gBAAL,GAAwB,KAAKD,OAAL,CAAaY,KAAb,EAAxB;;AACA,UAAI,CAAC,KAAKZ,OAAL,CAAaa,IAAb,CAAkB,UAAAF,MAAM;AAAA,eAAIA,MAAM,YAAYb,0BAAtB;AAAA,OAAxB,CAAL,EAAoE;AAClE,aAAKG,gBAAL,CAAsBa,IAAtB,CAA2BjB,uBAA3B;AACD;AACF","sourcesContent":["import {deepEqual} from '../utils/deep-equal';\nimport {default as LightingEffect} from '../effects/lighting/lighting-effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nexport default class EffectManager {\n  constructor() {\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n        this.setEffects(props.effects);\n        this._needsRedraw = 'effects changed';\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._internalEffects;\n  }\n\n  finalize() {\n    this.cleanup();\n  }\n\n  // Private\n  setEffects(effects = []) {\n    this.cleanup();\n    this.effects = effects;\n    this._createInternalEffects();\n  }\n\n  cleanup() {\n    for (const effect of this.effects) {\n      effect.cleanup();\n    }\n\n    for (const effect of this._internalEffects) {\n      effect.cleanup();\n    }\n    this.effects.length = 0;\n    this._internalEffects.length = 0;\n  }\n\n  _createInternalEffects() {\n    this._internalEffects = this.effects.slice();\n    if (!this.effects.some(effect => effect instanceof LightingEffect)) {\n      this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n  }\n}\n"],"file":"effect-manager.js"}