{"version":3,"sources":["../../../src/views/first-person-view.js"],"names":["getDirectionFromBearingAndPitch","bearing","pitch","spherical","SphericalCoordinates","direction","toVector3","normalize","FirstPersonView","props","modelMatrix","up","dir","center","transformDirection","zoom","scale","Math","pow","viewMatrix","Matrix4","lookAt","eye","Viewport","Object","assign","_getControllerProps","type","FirstPersonController","View","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,SAASA,+BAAT,OAA2D;AAAA,MAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACzD,MAAMC,SAAS,GAAG,IAAIC,2BAAJ,CAAyB;AAACH,IAAAA,OAAO,EAAPA,OAAD;AAAUC,IAAAA,KAAK,EAALA;AAAV,GAAzB,CAAlB;AACA,MAAMG,SAAS,GAAGF,SAAS,CAACG,SAAV,GAAsBC,SAAtB,EAAlB;AACA,SAAOF,SAAP;AACD;;IAEoBG,e;;;;;;;;;;;;iCAONC,K,EAAO;AAAA,+BAQdA,KARc,CAIhBC,WAJgB;AAAA,UAIhBA,WAJgB,mCAIF,IAJE;AAAA,2BAQdD,KARc,CAKhBR,OALgB;AAAA,UAKhBA,OALgB,+BAKN,CALM;AAAA,yBAQdQ,KARc,CAMhBP,KANgB;AAAA,UAMhBA,KANgB,6BAMR,CANQ;AAAA,sBAQdO,KARc,CAOhBE,EAPgB;AAAA,UAOhBA,EAPgB,0BAOX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPW;AAWlB,UAAMC,GAAG,GAAGZ,+BAA+B,CAAC;AAC1CC,QAAAA,OAAO,EAAPA,OAD0C;AAE1CC,QAAAA,KAAK,EAAE,KAAKA;AAF8B,OAAD,CAA3C;AAMA,UAAMW,MAAM,GAAGH,WAAW,GAAGA,WAAW,CAACI,kBAAZ,CAA+BF,GAA/B,CAAH,GAAyCA,GAAnE;AAGA,UAAMG,IAAI,GAAG,+BAAaN,KAAb,CAAb;AACA,UAAMO,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,IAAZ,CAAd;AACA,UAAMI,UAAU,GAAG,IAAIC,aAAJ,GAAcC,MAAd,CAAqB;AAACC,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AAAiBT,QAAAA,MAAM,EAANA,MAAjB;AAAyBF,QAAAA,EAAE,EAAFA;AAAzB,OAArB,EAAmDK,KAAnD,CAAyDA,KAAzD,CAAnB;AAEA,aAAO,IAAIO,oBAAJ,CACLC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,KAAlB,EAAyB;AACvBM,QAAAA,IAAI,EAAJA,IADuB;AAEvBI,QAAAA,UAAU,EAAVA;AAFuB,OAAzB,CADK,CAAP;AAMD;;;wBApCgB;AACf,aAAO,KAAKO,mBAAL,CAAyB;AAC9BC,QAAAA,IAAI,EAAEC;AADwB,OAAzB,CAAP;AAGD;;;EAL0CC,gB;;;AAwC7CrB,eAAe,CAACsB,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {getMeterZoom} from '@math.gl/web-mercator';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from 'math.gl';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nexport default class FirstPersonView extends View {\n  get controller() {\n    return this._getControllerProps({\n      type: FirstPersonController\n    });\n  }\n\n  _getViewport(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing = 0,\n      pitch = 0,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      pitch: 90 + pitch\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = getMeterZoom(props);\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up}).scale(scale);\n\n    return new Viewport(\n      Object.assign({}, props, {\n        zoom,\n        viewMatrix\n      })\n    );\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"],"file":"first-person-view.js"}