import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import LayersPass from './layers-pass';

var DrawLayersPass = function (_LayersPass) {
  _inherits(DrawLayersPass, _LayersPass);

  var _super = _createSuper(DrawLayersPass);

  function DrawLayersPass() {
    _classCallCheck(this, DrawLayersPass);

    return _super.apply(this, arguments);
  }

  return DrawLayersPass;
}(LayersPass);

export { DrawLayersPass as default };
//# sourceMappingURL=draw-layers-pass.js.map