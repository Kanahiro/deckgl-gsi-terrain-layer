import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import { LIFECYCLE } from '../lifecycle/constants';
import { createProps } from './create-props';
import { PROP_SYMBOLS } from './constants';
var ASYNC_ORIGINAL = PROP_SYMBOLS.ASYNC_ORIGINAL,
    ASYNC_RESOLVED = PROP_SYMBOLS.ASYNC_RESOLVED,
    ASYNC_DEFAULTS = PROP_SYMBOLS.ASYNC_DEFAULTS;
import ComponentState from './component-state';
var defaultProps = {};
var counter = 0;

var Component = function () {
  function Component() {
    _classCallCheck(this, Component);

    this.props = createProps.apply(this, arguments);
    this.id = this.props.id;
    this.count = counter++;
    this.lifecycle = LIFECYCLE.NO_STATE;
    this.parent = null;
    this.context = null;
    this.state = null;
    this.internalState = null;
    Object.seal(this);
  }

  _createClass(Component, [{
    key: "clone",
    value: function clone(newProps) {
      var props = this.props;
      var asyncProps = {};

      for (var key in props[ASYNC_DEFAULTS]) {
        if (key in props[ASYNC_RESOLVED]) {
          asyncProps[key] = props[ASYNC_RESOLVED][key];
        } else if (key in props[ASYNC_ORIGINAL]) {
          asyncProps[key] = props[ASYNC_ORIGINAL][key];
        }
      }

      return new this.constructor(Object.assign({}, props, asyncProps, newProps));
    }
  }, {
    key: "_initState",
    value: function _initState() {
      this.internalState = new ComponentState({});
    }
  }, {
    key: "stats",
    get: function get() {
      return this.internalState.stats;
    }
  }]);

  return Component;
}();

export { Component as default };
Component.componentName = 'Component';
Component.defaultProps = defaultProps;
//# sourceMappingURL=component.js.map