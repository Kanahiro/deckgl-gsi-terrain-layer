{"version":3,"sources":["../../../src/lifecycle/prop-types.js"],"names":["TYPE_DEFINITIONS","validate","value","propType","equal","value1","value2","Boolean","number","Number","isFinite","max","min","color","optional","isArray","length","arrayEqual","accessor","valueType","getTypeOf","array","compare","array1","array2","len","i","parsePropTypes","propDefs","propTypes","defaultProps","deprecatedProps","Object","entries","propName","propDef","deprecatedFor","Array","parsePropType","name","normalizePropDefinition","type","assign","ArrayBuffer","isView"],"mappings":"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","sourcesContent":["const TYPE_DEFINITIONS = {\n  boolean: {\n    validate(value, propType) {\n      return true;\n    },\n    equal(value1, value2, propType) {\n      return Boolean(value1) === Boolean(value2);\n    }\n  },\n  number: {\n    validate(value, propType) {\n      return (\n        Number.isFinite(value) &&\n        (!('max' in propType) || value <= propType.max) &&\n        (!('min' in propType) || value >= propType.min)\n      );\n    }\n  },\n  color: {\n    validate(value, propType) {\n      return (\n        (propType.optional && !value) ||\n        (isArray(value) && (value.length === 3 || value.length === 4))\n      );\n    },\n    equal(value1, value2, propType) {\n      return arrayEqual(value1, value2);\n    }\n  },\n  accessor: {\n    validate(value, propType) {\n      const valueType = getTypeOf(value);\n      return valueType === 'function' || valueType === getTypeOf(propType.value);\n    },\n    equal(value1, value2, propType) {\n      if (typeof value2 === 'function') {\n        return true;\n      }\n      return arrayEqual(value1, value2);\n    }\n  },\n  array: {\n    validate(value, propType) {\n      return (propType.optional && !value) || isArray(value);\n    },\n    equal(value1, value2, propType) {\n      return propType.compare ? arrayEqual(value1, value2) : value1 === value2;\n    }\n  },\n  function: {\n    validate(value, propType) {\n      return (propType.optional && !value) || typeof value === 'function';\n    },\n    equal(value1, value2, propType) {\n      return !propType.compare || value1 === value2;\n    }\n  }\n};\n\nfunction arrayEqual(array1, array2) {\n  if (array1 === array2) {\n    return true;\n  }\n  if (!isArray(array1) || !isArray(array2)) {\n    return false;\n  }\n  const len = array1.length;\n  if (len !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function parsePropTypes(propDefs) {\n  const propTypes = {};\n  const defaultProps = {};\n  const deprecatedProps = {};\n\n  for (const [propName, propDef] of Object.entries(propDefs)) {\n    if (propDef && propDef.deprecatedFor) {\n      deprecatedProps[propName] = Array.isArray(propDef.deprecatedFor)\n        ? propDef.deprecatedFor\n        : [propDef.deprecatedFor];\n    } else {\n      const propType = parsePropType(propName, propDef);\n      propTypes[propName] = propType;\n      defaultProps[propName] = propType.value;\n    }\n  }\n  return {propTypes, defaultProps, deprecatedProps};\n}\n\n// Parses one property definition entry. Either contains:\n// * a valid prop type object ({type, ...})\n// * or just a default value, in which case type and name inference is used\nfunction parsePropType(name, propDef) {\n  switch (getTypeOf(propDef)) {\n    case 'object':\n      return normalizePropDefinition(name, propDef);\n\n    case 'array':\n      return normalizePropDefinition(name, {type: 'array', value: propDef, compare: false});\n\n    case 'boolean':\n      return normalizePropDefinition(name, {type: 'boolean', value: propDef});\n\n    case 'number':\n      return normalizePropDefinition(name, {type: 'number', value: propDef});\n\n    case 'function':\n      return normalizePropDefinition(name, {type: 'function', value: propDef, compare: true});\n    // return guessFunctionType(name, propDef);\n\n    default:\n      return {name, type: 'unknown', value: propDef};\n  }\n}\n\nfunction normalizePropDefinition(name, propDef) {\n  if (!('type' in propDef)) {\n    if (!('value' in propDef)) {\n      // If no type and value this object is likely the value\n      return {name, type: 'object', value: propDef};\n    }\n    return Object.assign({name, type: getTypeOf(propDef.value)}, propDef);\n  }\n  return Object.assign({name}, TYPE_DEFINITIONS[propDef.type], propDef);\n}\n\nfunction isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\n// improved version of javascript typeof that can distinguish arrays and null values\nfunction getTypeOf(value) {\n  if (isArray(value)) {\n    return 'array';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  return typeof value;\n}\n"],"file":"prop-types.js"}