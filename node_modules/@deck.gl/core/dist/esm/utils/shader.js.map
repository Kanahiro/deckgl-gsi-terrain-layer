{"version":3,"sources":["../../../src/utils/shader.js"],"names":["mergeShaders","target","source","result","Object","assign","defines","modules","concat","some","module","name","index","findIndex","splice","inject","mergedInjection","key"],"mappings":";;;;;;AAqBA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC;AAC3C,MAAI,CAACA,MAAL,EAAa;AACX,WAAOD,MAAP;AACD;;AACD,MAAME,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,EAA0BC,MAA1B,CAAf;;AAEA,MAAI,aAAaA,MAAjB,EAAyB;AACvBC,IAAAA,MAAM,CAACG,OAAP,GAAiBF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAM,CAACK,OAAzB,EAAkCJ,MAAM,CAACI,OAAzC,CAAjB;AACD;;AACD,MAAI,aAAaJ,MAAjB,EAAyB;AACvBC,IAAAA,MAAM,CAACI,OAAP,GAAiB,CAACN,MAAM,CAACM,OAAP,IAAkB,EAAnB,EAAuBC,MAAvB,CAA8BN,MAAM,CAACK,OAArC,CAAjB;;AAGA,QAAIL,MAAM,CAACK,OAAP,CAAeE,IAAf,CAAoB,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB;AAAA,KAA1B,CAAJ,EAAgE;AAC9D,UAAMC,KAAK,GAAGT,MAAM,CAACI,OAAP,CAAeM,SAAf,CAAyB,UAAAH,MAAM;AAAA,eAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB;AAAA,OAA/B,CAAd;;AACA,UAAIC,KAAK,IAAI,CAAb,EAAgB;AACdT,QAAAA,MAAM,CAACI,OAAP,CAAeO,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;AACF;AACF;;AACD,MAAI,YAAYV,MAAhB,EAAwB;AACtB,QAAI,CAACD,MAAM,CAACc,MAAZ,EAAoB;AAClBZ,MAAAA,MAAM,CAACY,MAAP,GAAgBb,MAAM,CAACa,MAAvB;AACD,KAFD,MAEO;AACL,UAAMC,eAAe,qBAAOf,MAAM,CAACc,MAAd,CAArB;;AACA,WAAK,IAAME,GAAX,IAAkBf,MAAM,CAACa,MAAzB,EAAiC;AAC/BC,QAAAA,eAAe,CAACC,GAAD,CAAf,GAAuB,CAACD,eAAe,CAACC,GAAD,CAAf,IAAwB,EAAzB,IAA+Bf,MAAM,CAACa,MAAP,CAAcE,GAAd,CAAtD;AACD;;AACDd,MAAAA,MAAM,CAACY,MAAP,GAAgBC,eAAhB;AACD;AACF;;AACD,SAAOb,MAAP;AACD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Merge two luma.gl shader descriptors\nexport function mergeShaders(target, source) {\n  if (!source) {\n    return target;\n  }\n  const result = Object.assign({}, target, source);\n\n  if ('defines' in source) {\n    result.defines = Object.assign({}, target.defines, source.defines);\n  }\n  if ('modules' in source) {\n    result.modules = (target.modules || []).concat(source.modules);\n\n    // Hack: prject32 and project64 cannot co-exist\n    if (source.modules.some(module => module.name === 'project64')) {\n      const index = result.modules.findIndex(module => module.name === 'project32');\n      if (index >= 0) {\n        result.modules.splice(index, 1);\n      }\n    }\n  }\n  if ('inject' in source) {\n    if (!target.inject) {\n      result.inject = source.inject;\n    } else {\n      const mergedInjection = {...target.inject};\n      for (const key in source.inject) {\n        mergedInjection[key] = (mergedInjection[key] || '') + source.inject[key];\n      }\n      result.inject = mergedInjection;\n    }\n  }\n  return result;\n}\n"],"file":"shader.js"}