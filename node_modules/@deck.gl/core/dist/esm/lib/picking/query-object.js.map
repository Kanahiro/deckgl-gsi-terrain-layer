{"version":3,"sources":["../../../../src/lib/picking/query-object.js"],"names":["log","NO_PICKED_OBJECT","pickedColor","pickedLayer","pickedObjectIndex","getClosestObject","pickedColors","layers","deviceX","deviceY","deviceRadius","deviceRect","x","y","width","height","minSquareDistanceToCenter","closestPixelIndex","i","row","dy","dy2","col","pickedLayerIndex","dx","d2","slice","decodePickingColor","Math","floor","pickedX","pickedY","error","getUniqueObjects","uniqueColors","Map","length","colorKey","join","has","set","Array","from","values"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport log from '../../utils/log';\n\nconst NO_PICKED_OBJECT = {\n  pickedColor: null,\n  pickedLayer: null,\n  pickedObjectIndex: -1\n};\n\n/* eslint-disable max-depth, max-statements */\n/**\n * Pick at a specified pixel with a tolerance radius\n * Returns the closest object to the pixel in shape `{pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getClosestObject({\n  pickedColors,\n  layers,\n  deviceX,\n  deviceY,\n  deviceRadius,\n  deviceRect\n}) {\n  if (pickedColors) {\n    // Traverse all pixels in picking results and find the one closest to the supplied\n    // [deviceX, deviceY]\n    const {x, y, width, height} = deviceRect;\n    let minSquareDistanceToCenter = deviceRadius * deviceRadius;\n    let closestPixelIndex = -1;\n    let i = 0;\n\n    for (let row = 0; row < height; row++) {\n      const dy = row + y - deviceY;\n      const dy2 = dy * dy;\n\n      if (dy2 > minSquareDistanceToCenter) {\n        // skip this row\n        i += 4 * width;\n      } else {\n        for (let col = 0; col < width; col++) {\n          // Decode picked layer from color\n          const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n          if (pickedLayerIndex >= 0) {\n            const dx = col + x - deviceX;\n            const d2 = dx * dx + dy2;\n\n            if (d2 <= minSquareDistanceToCenter) {\n              minSquareDistanceToCenter = d2;\n              closestPixelIndex = i;\n            }\n          }\n          i += 4;\n        }\n      }\n    }\n\n    if (closestPixelIndex >= 0) {\n      // Decode picked object index from color\n      const pickedLayerIndex = pickedColors[closestPixelIndex + 3] - 1;\n      const pickedColor = pickedColors.slice(closestPixelIndex, closestPixelIndex + 4);\n      const pickedLayer = layers[pickedLayerIndex];\n      if (pickedLayer) {\n        const pickedObjectIndex = pickedLayer.decodePickingColor(pickedColor);\n        const dy = Math.floor(closestPixelIndex / 4 / width);\n        const dx = closestPixelIndex / 4 - dy * width;\n        return {pickedColor, pickedLayer, pickedObjectIndex, pickedX: x + dx, pickedY: y + dy};\n      }\n      log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n    }\n  }\n  return NO_PICKED_OBJECT;\n}\n\n/**\n * Examines a picking buffer for unique colors\n * Returns array of unique objects in shape `{x, y, pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getUniqueObjects({pickedColors, layers}) {\n  const uniqueColors = new Map();\n\n  // Traverse all pixels in picking results and get unique colors\n  if (pickedColors) {\n    for (let i = 0; i < pickedColors.length; i += 4) {\n      // Decode picked layer from color\n      const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n      if (pickedLayerIndex >= 0) {\n        const pickedColor = pickedColors.slice(i, i + 4);\n        const colorKey = pickedColor.join(',');\n        // eslint-disable-next-line\n        if (!uniqueColors.has(colorKey)) {\n          const pickedLayer = layers[pickedLayerIndex];\n          // eslint-disable-next-line\n          if (pickedLayer) {\n            uniqueColors.set(colorKey, {\n              pickedColor,\n              pickedLayer,\n              pickedObjectIndex: pickedLayer.decodePickingColor(pickedColor)\n            });\n          } else {\n            log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n          }\n        }\n      }\n    }\n  }\n\n  return Array.from(uniqueColors.values());\n}\n"],"file":"query-object.js"}