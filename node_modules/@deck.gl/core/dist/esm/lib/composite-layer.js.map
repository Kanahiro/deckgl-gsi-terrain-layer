{"version":3,"sources":["../../../src/lib/composite-layer.js"],"names":["Layer","debug","flatten","TRACE_RENDER_LAYERS","CompositeLayer","internalState","subLayers","updateObject","setNeedsUpdate","info","object","isDataWrapped","__source","parent","id","Object","assign","index","data","overridingProps","props","_subLayerProps","length","DefaultLayerClass","type","row","sourceObject","sourceObjectIndex","accessor","objectInfo","target","x","i","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","newProps","overridingSublayerProps","overridingSublayerTriggers","updateTriggers","sublayerId","propTypes","constructor","_propTypes","key","propType","getSubLayerAccessor","all","extension","passThroughProps","getSubLayerProps","call","shouldUpdate","needsUpdate","renderLayers","Boolean","layer","getSubLayers","every","isLoaded","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // Updates selected state members and marks the composite layer to need rerender\n  setState(updateObject) {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    return Object.assign(info, {\n      // override object with picked data\n      object: object.__source.object,\n      index: object.__source.index\n    });\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  // Returns true if sub layer needs to be rendered\n  shouldRenderSubLayer(id, data) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (data && data.length) || (overridingProps && overridingProps[id]);\n  }\n\n  // Returns sub layer class for a specific sublayer\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps && overridingProps[id] && overridingProps[id].type) || DefaultLayerClass\n    );\n  }\n\n  // When casting user data into another format to pass to sublayers,\n  // add reference to the original object and object index\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  // Some composite layers cast user data into another format before passing to sublayers\n  // We need to unwrap them before calling the accessor so that they see the original data\n  // objects\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n        return accessor(x, i);\n      };\n    }\n    return accessor;\n  }\n\n  // Returns sub layer props for a specific sublayer\n  getSubLayerProps(sublayerProps = {}) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions\n    };\n\n    const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      for (const key in overridingSublayerProps) {\n        const propType = propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps,\n      {\n        id: `${this.props.id}-${sublayerId}`,\n        updateTriggers: Object.assign(\n          {\n            all: this.props.updateTriggers.all\n          },\n          sublayerProps.updateTriggers,\n          overridingSublayerTriggers\n        )\n      }\n    );\n\n    // Pass through extension props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n"],"file":"composite-layer.js"}