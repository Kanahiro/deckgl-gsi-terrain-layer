{"version":3,"sources":["../../../src/lib/init.js"],"names":["registerLoaders","ImageLoader","global","log","register","jsonLoader","version","DECK_VERSION","existingVersion","deck","VERSION","Error","process","env","NODE_ENV","Object","assign","_registerLoggers","imagebitmap","premultiplyAlpha"],"mappings":"AAoBA,SAAQA,eAAR,QAA8B,kBAA9B;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AAEA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,QAAR,QAAuB,UAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAKA,IAAMC,OAAO,GACX,mBAAuB,WAAvB,aAAmDJ,MAAM,CAACK,YAAP,IAAuB,qBAD5E;AAIA,IAAMC,eAAe,GAAGN,MAAM,CAACO,IAAP,IAAeP,MAAM,CAACO,IAAP,CAAYC,OAAnD;;AAEA,IAAIF,eAAe,IAAIA,eAAe,KAAKF,OAA3C,EAAoD;AAClD,QAAM,IAAIK,KAAJ,iDAAmDH,eAAnD,iBAAyEF,OAAzE,EAAN;AACD;;AAED,IAAI,CAACE,eAAL,EAAsB;AAEpB,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCX,IAAAA,GAAG,CAACA,GAAJ,CACE,CADF,oBAEaG,OAFb;AAID;;AAEDJ,EAAAA,MAAM,CAACO,IAAP,GAAcM,MAAM,CAACC,MAAP,CAAcd,MAAM,CAACO,IAAP,IAAe,EAA7B,EAAiC;AAC7CC,IAAAA,OAAO,EAAEJ,OADoC;AAE7CA,IAAAA,OAAO,EAAPA,OAF6C;AAG7CH,IAAAA,GAAG,EAAHA,GAH6C;AAK7Cc,IAAAA,gBAAgB,EAAEb;AAL2B,GAAjC,CAAd;AAQAJ,EAAAA,eAAe,CAAC,CAACK,UAAD,EAAa,CAACJ,WAAD,EAAc;AAACiB,IAAAA,WAAW,EAAE;AAACC,MAAAA,gBAAgB,EAAE;AAAnB;AAAd,GAAd,CAAb,CAAD,CAAf;AACD;;AAED,eAAejB,MAAM,CAACO,IAAtB","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {registerLoaders} from '@loaders.gl/core';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport {global} from 'probe.gl/env';\nimport log from '../utils/log';\nimport {register} from '../debug';\nimport jsonLoader from '../utils/json-loader';\n\n// Version detection using babel plugin\n// Fallback for tests and SSR since global variable is defined by Webpack.\n/* global __VERSION__ */\nconst version =\n  typeof __VERSION__ !== 'undefined' ? __VERSION__ : global.DECK_VERSION || 'untranspiled source';\n\n// Note: a `deck` object not created by deck.gl may exist in the global scope\nconst existingVersion = global.deck && global.deck.VERSION;\n\nif (existingVersion && existingVersion !== version) {\n  throw new Error(`deck.gl - multiple versions detected: ${existingVersion} vs ${version}`);\n}\n\nif (!existingVersion) {\n  // eslint-disable-next-line\n  if (process.env.NODE_ENV !== 'production') {\n    log.log(\n      0,\n      `deck.gl ${version} - set deck.log.level=1 (or higher) to trace attribute updates`\n    )();\n  }\n\n  global.deck = Object.assign(global.deck || {}, {\n    VERSION: version,\n    version,\n    log,\n    // experimental\n    _registerLoggers: register\n  });\n\n  registerLoaders([jsonLoader, [ImageLoader, {imagebitmap: {premultiplyAlpha: 'none'}}]]);\n}\n\nexport default global.deck;\n"],"file":"init.js"}