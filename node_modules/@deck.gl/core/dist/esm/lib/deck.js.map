{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","DeckRenderer","DeckPicker","Tooltip","log","deepEqual","typedArrayManager","deckGlobal","getBrowser","AnimationLoop","createGLContext","instrumentGLContext","setParameters","Timeline","lumaStats","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","onError","debug","drawPickingColors","_framebuffer","_animate","_pickable","_typedArrayManagerProps","defaultProps","_onMetrics","Deck","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","initialViewState","warn","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","start","stop","finalize","eventManager","destroy","tooltip","remove","parentElement","removeChild","get","timeStart","removed","_setCanvasSize","resolvedProps","create","_getViews","_getViewState","activateViewport","getViewports","timeEnd","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","needsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","rect","infos","_pick","result","length","depth","resources","forceUpdate","resourceManager","add","resourceId","data","resourceIds","method","statKey","getLayers","getViews","viewports","onViewportActive","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","autoResizeViewport","onCreateContext","onInitialize","onRender","Array","isArray","event","type","x","y","radius","leftButton","rightButton","pos","offsetCenter","context","mousePosition","mode","emptyInfo","pickedInfo","handled","info","layer","onHover","getTooltip","displayInfo","setTooltip","container","cursor","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","timeline","play","attachTimeline","events","pointerdown","pointermove","pointerleave","eventType","on","onInteractiveStateChange","viewport","deck","_updateCanvasSize","renderOptions","renderLayers","target","pass","getEffects","_setGLContext","animationProps","_getFrameStats","_getMetrics","reset","table","_updateCursor","updateLayers","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layerHandler","handler","rootHandler","call","pickObject","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","VERSION"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport deckGlobal from './init';\n\nimport {getBrowser} from 'probe.gl/env';\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n    _framebuffer: PropTypes.object,\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool,\n\n    // UNSAFE options - not exhaustively tested, not guaranteed to work in all cases, use at your own risk\n\n    // Set to false to disable picking - avoiding picking buffer creation can save memory for mobile web browsers\n    _pickable: PropTypes.bool,\n\n    // Adjust parameters of typed array manager, can save memory e.g. for mobile web browsers\n    _typedArrayManagerProps: PropTypes.object //  {overAlloc: number, poolSize: number}\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: null,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n    this.props = {};\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    if (getBrowser() === 'IE') {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setProps(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n\n      this.viewManager.finalize();\n      this.viewManager = null;\n\n      this.effectManager.finalize();\n      this.effectManager = null;\n\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n\n      this.deckPicker.finalize();\n      this.deckPicker = null;\n\n      this.eventManager.destroy();\n      this.eventManager = null;\n\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (props.initialViewState && !deepEqual(this.props.initialViewState, props.initialViewState)) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager.setProps(resolvedProps);\n      this.deckRenderer.setProps(resolvedProps);\n      this.deckPicker.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D} */\n  pickObject(opts) {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D, depth = 10} */\n  pickMultipleObjects(opts) {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* {x, y, width = 1, height = 1, layerIds = null} */\n  pickObjects(opts) {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  // Experimental\n\n  _addResources(resources, forceUpdate = false) {\n    for (const id in resources) {\n      this.layerManager.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  _removeResources(resourceIds) {\n    for (const id of resourceIds) {\n      this.layerManager.resourceManager.remove(id);\n    }\n  }\n\n  // Private Methods\n\n  _pick(method, statKey, opts) {\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method](\n      Object.assign(\n        {\n          layers: this.layerManager.getLayers(opts),\n          views: this.viewManager.getViews(),\n          viewports: this.getViewports(opts),\n          onViewportActive: this.layerManager.activateViewport\n        },\n        opts\n      )\n    );\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState() {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews() {\n    // Default to a full screen map view port\n    let views = this.props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = this.props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer.onHover(info, _pickRequest.event);\n      }\n      if (!handled && this.props.onHover) {\n        this.props.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Update tooltip\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  _updateCursor() {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          target: this.props._framebuffer,\n          layers: this.layerManager.getLayers(),\n          viewports: this.viewManager.getViewports(),\n          onViewportActive: this.layerManager.activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        this.viewManager.setProps({viewState: this.viewState});\n      }\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/visgl/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}