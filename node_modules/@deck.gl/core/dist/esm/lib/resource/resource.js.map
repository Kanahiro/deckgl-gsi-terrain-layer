{"version":3,"sources":["../../../../src/lib/resource/resource.js"],"names":["load","Resource","id","data","context","_loadCount","_subscribers","Set","setData","consumer","add","size","isLoaded","_error","Promise","reject","_content","_loader","then","getData","forceUpdate","_data","loadCount","loader","result","error","subscriber","onChange"],"mappings":";;;;;;;;;AAAA,SAAQA,IAAR,QAAmB,kBAAnB;;IAEqBC,Q;AACnB,oBAAYC,EAAZ,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAAA;;AAC7B,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKE,OAAL,GAAeA,OAAf;AAEA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AAEA,SAAKC,OAAL,CAAaL,IAAb;AACD;;;;8BAGSM,Q,EAAU;AAClB,WAAKH,YAAL,CAAkBI,GAAlB,CAAsBD,QAAtB;AACD;;;gCAEWA,Q,EAAU;AACpB,WAAKH,YAAL,WAAyBG,QAAzB;AACD;;;4BAEO;AACN,aAAO,KAAKH,YAAL,CAAkBK,IAAlB,GAAyB,CAAhC;AACD;;;8BAEQ,CAER;;;8BAES;AAAA;;AACR,aAAO,KAAKC,QAAL,GACH,KAAKC,MAAL,GACEC,OAAO,CAACC,MAAR,CAAe,KAAKF,MAApB,CADF,GAEE,KAAKG,QAHJ,GAIH,KAAKC,OAAL,CAAaC,IAAb,CAAkB;AAAA,eAAM,KAAI,CAACC,OAAL,EAAN;AAAA,OAAlB,CAJJ;AAKD;;;4BAEOhB,I,EAAMiB,W,EAAa;AAAA;;AACzB,UAAIjB,IAAI,KAAK,KAAKkB,KAAd,IAAuB,CAACD,WAA5B,EAAyC;AACvC;AACD;;AACD,WAAKC,KAAL,GAAalB,IAAb;AACA,UAAMmB,SAAS,GAAG,EAAE,KAAKjB,UAAzB;AAEA,UAAIkB,MAAM,GAAGpB,IAAb;;AACA,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BoB,QAAAA,MAAM,GAAGvB,IAAI,CAACG,IAAD,CAAb;AACD;;AACD,UAAIoB,MAAM,YAAYT,OAAtB,EAA+B;AAC7B,aAAKF,QAAL,GAAgB,KAAhB;AACA,aAAKK,OAAL,GAAeM,MAAM,CAClBL,IADY,CACP,UAAAM,MAAM,EAAI;AAEd,cAAI,MAAI,CAACnB,UAAL,KAAoBiB,SAAxB,EAAmC;AACjC,YAAA,MAAI,CAACV,QAAL,GAAgB,IAAhB;AACA,YAAA,MAAI,CAACC,MAAL,GAAc,IAAd;AACA,YAAA,MAAI,CAACG,QAAL,GAAgBQ,MAAhB;AACD;AACF,SARY,WASN,UAAAC,KAAK,EAAI;AACd,cAAI,MAAI,CAACpB,UAAL,KAAoBiB,SAAxB,EAAmC;AACjC,YAAA,MAAI,CAACV,QAAL,GAAgB,IAAhB;AACA,YAAA,MAAI,CAACC,MAAL,GAAcY,KAAK,IAAI,IAAvB;AACD;AACF,SAdY,CAAf;AAeD,OAjBD,MAiBO;AACL,aAAKb,QAAL,GAAgB,IAAhB;AACA,aAAKC,MAAL,GAAc,IAAd;AACA,aAAKG,QAAL,GAAgBb,IAAhB;AACD;;AAhCwB,iDAkCA,KAAKG,YAlCL;AAAA;;AAAA;AAkCzB,4DAA4C;AAAA,cAAjCoB,UAAiC;AAC1CA,UAAAA,UAAU,CAACC,QAAX,CAAoB,KAAKR,OAAL,EAApB;AACD;AApCwB;AAAA;AAAA;AAAA;AAAA;AAqC1B;;;;;;SAzEkBlB,Q","sourcesContent":["import {load} from '@loaders.gl/core';\n\nexport default class Resource {\n  constructor(id, data, context) {\n    this.id = id;\n    this.context = context;\n\n    this._loadCount = 0;\n    this._subscribers = new Set();\n\n    this.setData(data);\n  }\n\n  // consumer: {onChange: Function}\n  subscribe(consumer) {\n    this._subscribers.add(consumer);\n  }\n\n  unsubscribe(consumer) {\n    this._subscribers.delete(consumer);\n  }\n\n  inUse() {\n    return this._subscribers.size > 0;\n  }\n\n  delete() {\n    // Remove any resources created\n  }\n\n  getData() {\n    return this.isLoaded\n      ? this._error\n        ? Promise.reject(this._error)\n        : this._content\n      : this._loader.then(() => this.getData());\n  }\n\n  setData(data, forceUpdate) {\n    if (data === this._data && !forceUpdate) {\n      return;\n    }\n    this._data = data;\n    const loadCount = ++this._loadCount;\n\n    let loader = data;\n    if (typeof data === 'string') {\n      loader = load(data);\n    }\n    if (loader instanceof Promise) {\n      this.isLoaded = false;\n      this._loader = loader\n        .then(result => {\n          // check if source has changed\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = null;\n            this._content = result;\n          }\n        })\n        .catch(error => {\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = error || true;\n          }\n        });\n    } else {\n      this.isLoaded = true;\n      this._error = null;\n      this._content = data;\n    }\n\n    for (const subscriber of this._subscribers) {\n      subscriber.onChange(this.getData());\n    }\n  }\n}\n"],"file":"resource.js"}