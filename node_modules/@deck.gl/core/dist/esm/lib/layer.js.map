{"version":3,"sources":["../../../src/lib/layer.js"],"names":["COORDINATE_SYSTEM","AttributeManager","UniformTransitionManager","diffProps","validateProps","count","log","debug","withParameters","setParameters","assert","memoize","mergeShaders","projectPosition","getWorldPosition","typedArrayManager","Component","LayerState","worldToPixels","load","TRACE_CHANGE_FLAG","TRACE_INITIALIZE","TRACE_UPDATE","TRACE_FINALIZE","TRACE_MATCHED","EMPTY_ARRAY","Object","freeze","areViewportsEqual","oldViewport","viewport","equals","pickingColorCache","Uint8ClampedArray","defaultProps","data","type","value","async","dataComparator","_dataDiff","__diff","compare","optional","dataTransform","onDataLoad","fetch","url","propName","layer","resourceManager","context","loadOptions","getLoadOptions","inResourceManager","contains","add","resourceId","persistent","subscribe","onChange","internalState","reloadAsyncProp","consumerId","id","requestId","updateTriggers","visible","pickable","opacity","min","max","onHover","onClick","onDragStart","onDrag","onDragEnd","coordinateSystem","DEFAULT","coordinateOrigin","modelMatrix","wrapLongitude","positionFormat","colorFormat","parameters","uniforms","extensions","getPolygonOffset","layerIndex","highlightedObjectIndex","autoHighlight","highlightColor","Layer","className","constructor","layerName","name","props","updateObject","setChangeFlags","stateChanged","assign","state","setNeedsRedraw","redraw","needsRedraw","layerManager","setNeedsUpdate","String","needsUpdate","opts","clearRedrawFlags","_getNeedsRedraw","hasUniformTransition","shouldUpdateState","_getUpdateParams","uniformTransitions","active","models","model","attributeManager","xyz","worldPosition","pixelProjectionMatrix","x","y","z","length","xy","unproject","LNGLAT","CARTESIAN","info","pickingEvent","i","target","color","Uint8Array","i1","i2","i3","index","Error","shaders","extension","getShaders","call","oldProps","changeFlags","propsOrDataChanged","getAttributeManager","dataChanged","Array","isArray","dataRange","invalidateAll","neededPickingBuffer","needPickingBuffer","attributes","pickingColors","instancePickingColors","pickingColorsAttribute","constant","invalidate","getModels","finalize","unsubscribe","clear","draw","mode","object","viewportChanged","_update","diffReason","changedAttributes","_setModelAttributes","numInstances","getNumInstances","startIndices","getStartIndices","update","transitions","buffers","ignoreUnknownAttributes","getChangedAttributes","clearChangedFlags","updateAttributes","updateTransition","propsInTransition","create","key","defineProperty","attribute","cacheSize","allocate","size","copy","newCacheSize","pickingColor","encodePickingColor","subarray","excludeAttributes","userData","shaderAttributes","getShaderAttributes","setAttributes","colors","decodePickingColor","start","getVertexOffset","end","buffer","subData","offset","updateSubBuffer","startOffset","undefined","_initState","initializeState","propsChanged","extensionsChanged","_updateState","stateNeedsUpdate","currentProps","currentViewport","_updateUniformTransition","updateParams","oldModels","gl","updateState","error","modelChanged","_updateModules","isComposite","_renderLayers","_updateAttributes","setInstanceCount","clearChangeFlags","resetOldProps","finalizeState","moduleParameters","_updateAttributeTransition","Math","pow","setModuleParameters","offsets","polygonOffset","flags","flagChanged","concat","updateTriggersChanged","somethingChanged","newProps","invalidateAttribute","transitionsChanged","updateModuleSettings","forceUpdate","pickingSelectedColor","pickingHighlightColor","Number","isInteger","getOldProps","attributeManagerNeedsRedraw","getNeedsRedraw","stats","timeline","isFinite","_getAttributeManager","addInstanced","noAlloc","calculateInstancePickingColors","get","deprecated","onAsyncPropUpdated","_onAsyncPropUpdated","bind","setAsyncProps","oldLayer","isAsyncPropLoading"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable react/no-direct-mutation-state */\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute/attribute-manager';\nimport UniformTransitionManager from './uniform-transition-manager';\nimport {diffProps, validateProps} from '../lifecycle/props';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport debug from '../debug';\nimport GL from '@luma.gl/constants';\nimport {withParameters, setParameters} from '@luma.gl/core';\nimport assert from '../utils/assert';\nimport memoize from '../utils/memoize';\nimport {mergeShaders} from '../utils/shader';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\nimport typedArrayManager from '../utils/typed-array-manager';\n\nimport Component from '../lifecycle/component';\nimport LayerState from './layer-state';\n\nimport {worldToPixels} from '@math.gl/web-mercator';\n\nimport {load} from '@loaders.gl/core';\n\nconst TRACE_CHANGE_FLAG = 'layer.changeFlag';\nconst TRACE_INITIALIZE = 'layer.initialize';\nconst TRACE_UPDATE = 'layer.update';\nconst TRACE_FINALIZE = 'layer.finalize';\nconst TRACE_MATCHED = 'layer.matched';\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\n// Only compare the same two viewports once\nconst areViewportsEqual = memoize(({oldViewport, viewport}) => {\n  return oldViewport.equals(viewport);\n});\n\nlet pickingColorCache = new Uint8ClampedArray(0);\n\nconst defaultProps = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: null,\n  _dataDiff: {type: 'function', value: data => data && data.__diff, compare: false, optional: true},\n  dataTransform: {type: 'function', value: null, compare: false, optional: true},\n  onDataLoad: {type: 'function', value: null, compare: false, optional: true},\n  fetch: {\n    type: 'function',\n    value: (url, {propName, layer}) => {\n      const {resourceManager} = layer.context;\n      const loadOptions = layer.getLoadOptions();\n      let inResourceManager = resourceManager.contains(url);\n\n      if (!inResourceManager && !loadOptions) {\n        // If there is no layer-specific load options, then attempt to cache this resource in the data manager\n        resourceManager.add({resourceId: url, data: url, persistent: false});\n        inResourceManager = true;\n      }\n      if (inResourceManager) {\n        return resourceManager.subscribe({\n          resourceId: url,\n          onChange: data => layer.internalState.reloadAsyncProp(propName, data),\n          consumerId: layer.id,\n          requestId: propName\n        });\n      }\n\n      return load(url, loadOptions);\n    },\n    compare: false\n  },\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 1},\n\n  onHover: {type: 'function', value: null, compare: false, optional: true},\n  onClick: {type: 'function', value: null, compare: false, optional: true},\n  onDragStart: {type: 'function', value: null, compare: false, optional: true},\n  onDrag: {type: 'function', value: null, compare: false, optional: true},\n  onDragEnd: {type: 'function', value: null, compare: false, optional: true},\n\n  coordinateSystem: COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin: {type: 'array', value: [0, 0, 0], compare: true},\n  modelMatrix: {type: 'array', value: null, compare: true, optional: true},\n  wrapLongitude: false,\n  positionFormat: 'XYZ',\n  colorFormat: 'RGBA',\n\n  parameters: {},\n  uniforms: {},\n  extensions: [],\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: {\n    type: 'function',\n    value: ({layerIndex}) => [0, -layerIndex * 100],\n    compare: false\n  },\n\n  // Selection/Highlighting\n  highlightedObjectIndex: -1,\n  autoHighlight: false,\n  highlightColor: {type: 'accessor', value: [0, 0, 128, 128]}\n};\n\nexport default class Layer extends Component {\n  toString() {\n    const className = this.constructor.layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API\n\n  // Updates selected state members and marks the object for redraw\n  setState(updateObject) {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, updateObject);\n    this.setNeedsRedraw();\n  }\n\n  // Sets the redraw flag for this layer, will trigger a redraw next animation frame\n  setNeedsRedraw(redraw = true) {\n    if (this.internalState) {\n      this.internalState.needsRedraw = redraw;\n    }\n  }\n\n  // This layer needs a deep update\n  setNeedsUpdate() {\n    this.context.layerManager.setNeedsUpdate(String(this));\n    this.internalState.needsUpdate = true;\n  }\n\n  // Checks state of attributes and model\n  getNeedsRedraw(opts = {clearRedrawFlags: false}) {\n    return this._getNeedsRedraw(opts);\n  }\n\n  // Checks if layer attributes needs updating\n  needsUpdate() {\n    // Call subclass lifecycle method\n    return (\n      this.internalState.needsUpdate ||\n      this.hasUniformTransition() ||\n      this.shouldUpdateState(this._getUpdateParams())\n    );\n    // End lifecycle method\n  }\n\n  hasUniformTransition() {\n    return this.internalState.uniformTransitions.active;\n  }\n\n  get isLoaded() {\n    return this.internalState && !this.internalState.isAsyncPropLoading();\n  }\n\n  get wrapLongitude() {\n    return this.props.wrapLongitude;\n  }\n\n  // Returns true if the layer is pickable and visible.\n  isPickable() {\n    return this.props.pickable && this.props.visible;\n  }\n\n  // Return an array of models used by this layer, can be overriden by layer subclass\n  getModels() {\n    return this.state && (this.state.models || (this.state.model ? [this.state.model] : []));\n  }\n\n  getAttributeManager() {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  // Returns the most recent layer that matched to this state\n  // (When reacting to an async event, this layer may no longer be the latest)\n  getCurrentLayer() {\n    return this.internalState && this.internalState.layer;\n  }\n\n  // Returns the default parse options for async props\n  getLoadOptions() {\n    return this.props.loadOptions;\n  }\n\n  // PROJECTION METHODS\n\n  // Projects a point with current map state (lat, lon, zoom, pitch, bearing)\n  // From the current layer's coordinate system to screen\n  project(xyz) {\n    const {viewport} = this.context;\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  // Note: this does not reverse `project`.\n  // Always unprojects to the viewport's coordinate system\n  unproject(xy) {\n    const {viewport} = this.context;\n    return viewport.unproject(xy);\n  }\n\n  projectPosition(xyz) {\n    return projectPosition(xyz, {\n      viewport: this.context.viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n  }\n\n  use64bitPositions() {\n    const {coordinateSystem} = this.props;\n    return (\n      coordinateSystem === COORDINATE_SYSTEM.DEFAULT ||\n      coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n      coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n    );\n  }\n\n  // Event handling\n  onHover(info, pickingEvent) {\n    if (this.props.onHover) {\n      return this.props.onHover(info, pickingEvent);\n    }\n    return false;\n  }\n\n  onClick(info, pickingEvent) {\n    if (this.props.onClick) {\n      return this.props.onClick(info, pickingEvent);\n    }\n    return false;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i, target = []) {\n    target[0] = (i + 1) & 255;\n    target[1] = ((i + 1) >> 8) & 255;\n    target[2] = (((i + 1) >> 8) >> 8) & 255;\n    return target;\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  // //////////////////////////////////////////////////\n  // LIFECYCLE METHODS, overridden by the layer subclasses\n\n  // Called once to set up the initial state\n  // App can create WebGL resources\n  initializeState() {\n    throw new Error(`Layer ${this} has not defined initializeState`);\n  }\n\n  getShaders(shaders) {\n    for (const extension of this.props.extensions) {\n      shaders = mergeShaders(shaders, extension.getShaders.call(this, extension));\n    }\n    return shaders;\n  }\n\n  // Let's layer control if updateState should be called\n  shouldUpdateState({oldProps, props, context, changeFlags}) {\n    return changeFlags.propsOrDataChanged;\n  }\n\n  // Default implementation, all attributes will be invalidated and updated\n  // when data changes\n  /* eslint-disable-next-line complexity */\n  updateState({oldProps, props, context, changeFlags}) {\n    const attributeManager = this.getAttributeManager();\n    if (changeFlags.dataChanged && attributeManager) {\n      const {dataChanged} = changeFlags;\n      if (Array.isArray(dataChanged)) {\n        // is partial update\n        for (const dataRange of dataChanged) {\n          attributeManager.invalidateAll(dataRange);\n        }\n      } else {\n        attributeManager.invalidateAll();\n      }\n    }\n\n    const neededPickingBuffer = oldProps.highlightedObjectIndex >= 0 || oldProps.pickable;\n    const needPickingBuffer = props.highlightedObjectIndex >= 0 || props.pickable;\n    if (neededPickingBuffer !== needPickingBuffer && attributeManager) {\n      const {pickingColors, instancePickingColors} = attributeManager.attributes;\n      const pickingColorsAttribute = pickingColors || instancePickingColors;\n      if (pickingColorsAttribute) {\n        if (needPickingBuffer && pickingColorsAttribute.constant) {\n          pickingColorsAttribute.constant = false;\n          attributeManager.invalidate(pickingColorsAttribute.id);\n        }\n        if (!pickingColorsAttribute.value && !needPickingBuffer) {\n          pickingColorsAttribute.constant = true;\n          pickingColorsAttribute.value = [0, 0, 0];\n        }\n      }\n    }\n  }\n\n  // Called once when layer is no longer matched and state will be discarded\n  // App can destroy WebGL resources here\n  finalizeState() {\n    for (const model of this.getModels()) {\n      model.delete();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n    this.context.resourceManager.unsubscribe({consumerId: this.id});\n    this.internalState.uniformTransitions.clear();\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts) {\n    for (const model of this.getModels()) {\n      model.draw(opts);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode}) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n  // //////////////////////////////////////////////////\n\n  // INTERNAL METHODS\n  activateViewport(viewport) {\n    const oldViewport = this.internalState.viewport;\n    this.internalState.viewport = viewport;\n\n    if (!oldViewport || !areViewportsEqual({oldViewport, viewport})) {\n      this.setChangeFlags({viewportChanged: true});\n      this._update();\n    }\n  }\n\n  // Default implementation of attribute invalidation, can be redefined\n  invalidateAttribute(name = 'all', diffReason = '') {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      attributeManager.invalidateAll();\n    } else {\n      attributeManager.invalidate(name);\n    }\n  }\n\n  updateAttributes(changedAttributes) {\n    for (const model of this.getModels()) {\n      this._setModelAttributes(model, changedAttributes);\n    }\n  }\n\n  // Calls attribute manager to update any WebGL attributes\n  _updateAttributes(props) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    // Figure out data length\n    const numInstances = this.getNumInstances(props);\n    const startIndices = this.getStartIndices(props);\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      startIndices,\n      props,\n      transitions: props.transitions,\n      buffers: props.data.attributes,\n      context: this,\n      // Don't worry about non-attribute props\n      ignoreUnknownAttributes: true\n    });\n\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.updateAttributes(changedAttributes);\n  }\n\n  // Update attribute transitions. This is called in drawLayer, no model updates required.\n  _updateAttributeTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  // Update uniform (prop) transitions. This is called in updateState, may result in model updates.\n  _updateUniformTransition() {\n    const {uniformTransitions} = this.internalState;\n    if (uniformTransitions.active) {\n      // clone props\n      const propsInTransition = uniformTransitions.update();\n      const props = Object.create(this.props);\n      for (const key in propsInTransition) {\n        Object.defineProperty(props, key, {value: propsInTransition[key]});\n      }\n      return props;\n    }\n    return this.props;\n  }\n\n  calculateInstancePickingColors(attribute, {numInstances}) {\n    if (attribute.constant) {\n      return;\n    }\n\n    // calculateInstancePickingColors always generates the same sequence.\n    // pickingColorCache saves the largest generated sequence for reuse\n    const cacheSize = pickingColorCache.length / 3;\n\n    if (cacheSize < numInstances) {\n      pickingColorCache = typedArrayManager.allocate(pickingColorCache, numInstances, {\n        size: 3,\n        copy: true\n      });\n      // If the attribute is larger than the cache, resize the cache and populate the missing chunk\n      const newCacheSize = pickingColorCache.length / 3;\n      const pickingColor = [];\n      assert(newCacheSize < 16777215, 'index out of picking color range');\n\n      for (let i = cacheSize; i < newCacheSize; i++) {\n        this.encodePickingColor(i, pickingColor);\n        pickingColorCache[i * 3 + 0] = pickingColor[0];\n        pickingColorCache[i * 3 + 1] = pickingColor[1];\n        pickingColorCache[i * 3 + 2] = pickingColor[2];\n      }\n    }\n\n    attribute.value = pickingColorCache.subarray(0, numInstances * 3);\n  }\n\n  _setModelAttributes(model, changedAttributes) {\n    const attributeManager = this.getAttributeManager();\n    const excludeAttributes = model.userData.excludeAttributes || {};\n    const shaderAttributes = attributeManager.getShaderAttributes(\n      changedAttributes,\n      excludeAttributes\n    );\n\n    model.setAttributes(shaderAttributes);\n  }\n\n  // Sets the specified instanced picking color to null picking color. Used for multi picking.\n  clearPickingColor(color) {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    const i = this.decodePickingColor(color);\n    const start = colors.getVertexOffset(i);\n    const end = colors.getVertexOffset(i + 1);\n\n    // Fill the sub buffer with 0s\n    colors.buffer.subData({\n      data: new Uint8Array(end - start),\n      offset: start // 1 byte per element\n    });\n  }\n\n  restorePickingColors() {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    colors.updateSubBuffer({startOffset: 0});\n  }\n\n  // Deduces numer of instances. Intention is to support:\n  // - Explicit setting of numInstances\n  // - Auto-deduction for ES6 containers that define a size member\n  // - Auto-deduction for Classic Arrays via the built-in length attribute\n  // - Auto-deduction via arrays\n  getNumInstances(props) {\n    props = props || this.props;\n\n    // First Check if app has provided an explicit value\n    if (props.numInstances !== undefined) {\n      return props.numInstances;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    return count(props.data);\n  }\n\n  // Buffer layout describes how many attribute values are packed for each data object\n  // The default (null) is one value each object.\n  // Some data formats (e.g. paths, polygons) have various length. Their buffer layout\n  //  is in the form of [L0, L1, L2, ...]\n  getStartIndices(props) {\n    props = props || this.props;\n\n    // First Check if startIndices is provided as an explicit value\n    if (props.startIndices !== undefined) {\n      return props.startIndices;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.startIndices) {\n      return this.state.startIndices;\n    }\n\n    return null;\n  }\n\n  // LAYER MANAGER API\n  // Should only be called by the deck.gl LayerManager class\n\n  // Called by layer manager when a new layer is found\n  /* eslint-disable max-statements */\n  _initialize() {\n    debug(TRACE_INITIALIZE, this);\n\n    this._initState();\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n    // Initialize extensions\n    for (const extension of this.props.extensions) {\n      extension.initializeState.call(this, this.context, extension);\n    }\n    // End subclass lifecycle methods\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({\n      dataChanged: true,\n      propsChanged: true,\n      viewportChanged: true,\n      extensionsChanged: true\n    });\n\n    this._updateState();\n  }\n\n  // Called by layer manager\n  // if this layer is new (not matched with an existing layer) oldProps will be empty object\n  _update() {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n    debug(TRACE_UPDATE, this, stateNeedsUpdate);\n\n    if (stateNeedsUpdate) {\n      this._updateState();\n    }\n  }\n\n  // Common code for _initialize and _update\n  _updateState() {\n    const currentProps = this.props;\n    const currentViewport = this.context.viewport;\n    const propsInTransition = this._updateUniformTransition();\n    this.internalState.propsInTransition = propsInTransition;\n    // Overwrite this.context.viewport during update to use the last activated viewport on this layer\n    // In multi-view applications, a layer may only be drawn in one of the views\n    // Which would make the \"active\" viewport different from the shared context\n    this.context.viewport = this.internalState.viewport || currentViewport;\n    // Overwrite this.props during update to use in-transition prop values\n    this.props = propsInTransition;\n\n    const updateParams = this._getUpdateParams();\n    const oldModels = this.getModels();\n\n    // Safely call subclass lifecycle methods\n    if (this.context.gl) {\n      this.updateState(updateParams);\n    } else {\n      try {\n        this.updateState(updateParams);\n      } catch (error) {\n        // ignore error if gl context is missing\n      }\n    }\n    // Execute extension updates\n    for (const extension of this.props.extensions) {\n      extension.updateState.call(this, updateParams, extension);\n    }\n\n    const modelChanged = this.getModels()[0] !== oldModels[0];\n    this._updateModules(updateParams, modelChanged);\n    // End subclass lifecycle methods\n\n    if (this.isComposite) {\n      // Render or update previously rendered sublayers\n      this._renderLayers(updateParams);\n    } else {\n      this.setNeedsRedraw();\n      // Add any subclass attributes\n      this._updateAttributes(this.props);\n\n      // Note: Automatic instance count update only works for single layers\n      if (this.state.model) {\n        this.state.model.setInstanceCount(this.getNumInstances());\n      }\n    }\n\n    // Restore shared context\n    this.context.viewport = currentViewport;\n    this.props = currentProps;\n    this.clearChangeFlags();\n    this.internalState.needsUpdate = false;\n    this.internalState.resetOldProps();\n  }\n  /* eslint-enable max-statements */\n\n  // Called by manager when layer is about to be disposed\n  // Note: not guaranteed to be called on application shutdown\n  _finalize() {\n    debug(TRACE_FINALIZE, this);\n    assert(this.internalState && this.state);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // Finalize extensions\n    for (const extension of this.props.extensions) {\n      extension.finalizeState.call(this, extension);\n    }\n  }\n\n  // Calculates uniforms\n  drawLayer({moduleParameters = null, uniforms = {}, parameters = {}}) {\n    this._updateAttributeTransition();\n\n    const currentProps = this.props;\n    // Overwrite this.props during redraw to use in-transition prop values\n    // `internalState.propsInTransition` could be missing if `updateState` failed\n    this.props = this.internalState.propsInTransition || currentProps;\n\n    const {opacity} = this.props;\n    // apply gamma to opacity to make it visually \"linear\"\n    uniforms.opacity = Math.pow(opacity, 1 / 2.2);\n\n    // TODO/ib - hack move to luma Model.draw\n    if (moduleParameters) {\n      this.setModuleParameters(moduleParameters);\n    }\n\n    // Apply polygon offset to avoid z-fighting\n    // TODO - move to draw-layers\n    const {getPolygonOffset} = this.props;\n    const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n\n    setParameters(this.context.gl, {polygonOffset: offsets});\n\n    // Call subclass lifecycle method\n    withParameters(this.context.gl, parameters, () => {\n      const opts = {moduleParameters, uniforms, parameters, context: this.context};\n\n      // extensions\n      for (const extension of this.props.extensions) {\n        extension.draw.call(this, opts, extension);\n      }\n\n      this.draw(opts);\n    });\n\n    // End lifecycle method\n\n    this.props = currentProps;\n  }\n\n  // Helper methods\n  getChangeFlags() {\n    return this.internalState.changeFlags;\n  }\n\n  // Dirty some change flags, will be handled by updateLayer\n  /* eslint-disable complexity */\n  setChangeFlags(flags) {\n    const {changeFlags} = this.internalState;\n\n    /* eslint-disable no-fallthrough, max-depth */\n    for (const key in flags) {\n      if (flags[key]) {\n        let flagChanged = false;\n        switch (key) {\n          case 'dataChanged':\n            // changeFlags.dataChanged may be `false`, a string (reason) or an array of ranges\n            if (Array.isArray(changeFlags[key])) {\n              changeFlags[key] = Array.isArray(flags[key])\n                ? changeFlags[key].concat(flags[key])\n                : flags[key];\n              flagChanged = true;\n            }\n\n          default:\n            if (!changeFlags[key]) {\n              changeFlags[key] = flags[key];\n              flagChanged = true;\n            }\n        }\n        if (flagChanged) {\n          debug(TRACE_CHANGE_FLAG, this, key, flags);\n        }\n      }\n    }\n    /* eslint-enable no-fallthrough, max-depth */\n\n    // Update composite flags\n    const propsOrDataChanged =\n      changeFlags.dataChanged ||\n      changeFlags.updateTriggersChanged ||\n      changeFlags.propsChanged ||\n      changeFlags.extensionsChanged;\n    changeFlags.propsOrDataChanged = propsOrDataChanged;\n    changeFlags.somethingChanged =\n      propsOrDataChanged || flags.viewportChanged || flags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  // Clear all changeFlags, typically after an update\n  clearChangeFlags() {\n    this.internalState.changeFlags = {\n      // Primary changeFlags, can be strings stating reason for change\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n      extensionsChanged: false,\n\n      // Derived changeFlags\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  // Compares the layers props with old props from a matched older layer\n  // and extracts change flags that describe what has change so that state\n  // can be update correctly with minimal effort\n  diffProps(newProps, oldProps) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this.invalidateAttribute(key);\n        }\n      }\n    }\n\n    // trigger uniform transitions\n    if (changeFlags.transitionsChanged) {\n      for (const key in changeFlags.transitionsChanged) {\n        // prop changed and transition is enabled\n        this.internalState.uniformTransitions.add(\n          key,\n          oldProps[key],\n          newProps[key],\n          newProps.transitions[key]\n        );\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  // Called by layer manager to validate props (in development)\n  validateProps() {\n    validateProps(this.props);\n  }\n\n  setModuleParameters(moduleParameters) {\n    for (const model of this.getModels()) {\n      model.updateModuleSettings(moduleParameters);\n    }\n  }\n\n  // PRIVATE METHODS\n  _updateModules({props, oldProps}, forceUpdate) {\n    // Picking module parameters\n    const {autoHighlight, highlightedObjectIndex, highlightColor} = props;\n    if (\n      forceUpdate ||\n      oldProps.autoHighlight !== autoHighlight ||\n      oldProps.highlightedObjectIndex !== highlightedObjectIndex ||\n      oldProps.highlightColor !== highlightColor\n    ) {\n      const parameters = {};\n      if (!autoHighlight) {\n        parameters.pickingSelectedColor = null;\n      }\n      if (Array.isArray(highlightColor)) {\n        parameters.pickingHighlightColor = highlightColor;\n      }\n\n      // highlightedObjectIndex will overwrite any settings from auto highlighting.\n      if (Number.isInteger(highlightedObjectIndex)) {\n        parameters.pickingSelectedColor =\n          highlightedObjectIndex >= 0 ? this.encodePickingColor(highlightedObjectIndex) : null;\n      }\n\n      this.setModuleParameters(parameters);\n    }\n  }\n\n  _getUpdateParams() {\n    return {\n      props: this.props,\n      oldProps: this.internalState.getOldProps(),\n      context: this.context,\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  // Checks state of attributes and model\n  _getNeedsRedraw(opts) {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !opts.clearRedrawFlags;\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw = attributeManager && attributeManager.getNeedsRedraw(opts);\n    redraw = redraw || attributeManagerNeedsRedraw;\n\n    return redraw;\n  }\n\n  // Create new attribute manager\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats,\n      timeline: this.context.timeline\n    });\n  }\n\n  _initState() {\n    assert(!this.internalState && !this.state);\n    assert(isFinite(this.props.coordinateSystem), `${this.id}: invalid coordinateSystem`);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          noAlloc: true,\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState({\n      attributeManager,\n      layer: this\n    });\n    this.clearChangeFlags(); // populate this.internalState.changeFlags\n\n    this.state = {};\n    // for backwards compatibility with older layers\n    // TODO - remove in next release\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(this.state, 'attributeManager', {\n      get: () => {\n        log.deprecated('layer.state.attributeManager', 'layer.getAttributeManager()');\n        return attributeManager;\n      }\n    });\n    /* eslint-enable accessor-pairs */\n\n    this.internalState.layer = this;\n    this.internalState.uniformTransitions = new UniformTransitionManager(this.context.timeline);\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n  }\n\n  // Called by layer manager to transfer state from an old layer\n  _transferState(oldLayer) {\n    debug(TRACE_MATCHED, this, this === oldLayer);\n\n    const {state, internalState} = oldLayer;\n    assert(state && internalState);\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState;\n    this.internalState.layer = this;\n\n    // Move state\n    this.state = state;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    this.diffProps(this.props, this.internalState.getOldProps());\n  }\n\n  _onAsyncPropUpdated() {\n    this.diffProps(this.props, this.internalState.getOldProps());\n    this.setNeedsUpdate();\n  }\n}\n\nLayer.layerName = 'Layer';\nLayer.defaultProps = defaultProps;\n"],"file":"layer.js"}