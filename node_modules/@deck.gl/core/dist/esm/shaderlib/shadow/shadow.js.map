{"version":3,"sources":["../../../../src/shaderlib/shadow/shadow.js"],"names":["COORDINATE_SYSTEM","PROJECTION_MODE","project","Vector3","Matrix4","memoize","pixelsToWorld","vs","fs","getMemoizedViewportCenterPosition","getViewportCenterPosition","getMemoizedViewProjectionMatrices","getViewProjectionMatrices","DEFAULT_SHADOW_COLOR","VECTOR_TO_POINT_MATRIX","screenToCommonSpace","xyz","pixelUnprojectionMatrix","x","y","z","coord","Number","isFinite","viewport","center","viewProjectionMatrix","invert","transform","shadowMatrices","projectionMatrices","farZ","isGeospatial","undefined","corners","width","height","map","pixel","shadowMatrix","viewMatrix","clone","translate","negate","positions","corner","projectionMatrix","ortho","left","Math","min","position","right","max","bottom","top","near","far","push","multiplyRight","createShadowUniforms","opts","context","uniforms","shadow_uDrawShadowMap","Boolean","drawToShadowMap","shadow_uUseShadowMap","shadowMaps","length","shadow_uColor","shadowColor","shadow_uLightId","shadowLightId","shadow_uLightCount","project_uCenter","projectCenters","viewProjectionMatrices","slice","i","viewProjectionMatrixCentered","project_uCoordinateSystem","LNGLAT","project_uProjectionMode","WEB_MERCATOR","dummyShadowMap","name","dependencies","inject","getUniforms","shadowUniforms","shadowEnabled","Object","assign"],"mappings":"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","sourcesContent":["// Copyright (c) 2015-2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\nimport project from '../project/project';\nimport {Vector3, Matrix4} from 'math.gl';\nimport memoize from '../../utils/memoize';\nimport {pixelsToWorld} from '@math.gl/web-mercator';\n\nconst vs = `\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n`;\n\nconst fs = `\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n`;\n\nconst getMemoizedViewportCenterPosition = memoize(getViewportCenterPosition);\nconst getMemoizedViewProjectionMatrices = memoize(getViewProjectionMatrices);\n\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 1.0];\nconst VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\n\nfunction screenToCommonSpace(xyz, pixelUnprojectionMatrix) {\n  const [x, y, z] = xyz;\n  const coord = pixelsToWorld([x, y, z], pixelUnprojectionMatrix);\n\n  if (Number.isFinite(z)) {\n    return coord;\n  }\n  return [coord[0], coord[1], 0];\n}\n\nfunction getViewportCenterPosition({viewport, center}) {\n  return new Matrix4(viewport.viewProjectionMatrix).invert().transform(center);\n}\n\nfunction getViewProjectionMatrices({viewport, shadowMatrices}) {\n  const projectionMatrices = [];\n  const pixelUnprojectionMatrix = viewport.pixelUnprojectionMatrix;\n  const farZ = viewport.isGeospatial ? undefined : 1;\n  const corners = [\n    [0, 0, farZ], // top left ground\n    [viewport.width, 0, farZ], // top right ground\n    [0, viewport.height, farZ], // bottom left ground\n    [viewport.width, viewport.height, farZ], // bottom right ground\n    [0, 0, -1], // top left near\n    [viewport.width, 0, -1], // top right near\n    [0, viewport.height, -1], // bottom left near\n    [viewport.width, viewport.height, -1] // bottom right near\n  ].map(pixel => screenToCommonSpace(pixel, pixelUnprojectionMatrix));\n\n  for (const shadowMatrix of shadowMatrices) {\n    const viewMatrix = shadowMatrix.clone().translate(new Vector3(viewport.center).negate());\n    const positions = corners.map(corner => viewMatrix.transform(corner));\n    const projectionMatrix = new Matrix4().ortho({\n      left: Math.min(...positions.map(position => position[0])),\n      right: Math.max(...positions.map(position => position[0])),\n      bottom: Math.min(...positions.map(position => position[1])),\n      top: Math.max(...positions.map(position => position[1])),\n      near: Math.min(...positions.map(position => -position[2])),\n      far: Math.max(...positions.map(position => -position[2]))\n    });\n    projectionMatrices.push(projectionMatrix.multiplyRight(shadowMatrix));\n  }\n  return projectionMatrices;\n}\n\nfunction createShadowUniforms(opts = {}, context = {}) {\n  const uniforms = {\n    shadow_uDrawShadowMap: Boolean(opts.drawToShadowMap),\n    shadow_uUseShadowMap: opts.shadowMaps ? opts.shadowMaps.length > 0 : false,\n    shadow_uColor: opts.shadowColor || DEFAULT_SHADOW_COLOR,\n    shadow_uLightId: opts.shadowLightId || 0,\n    shadow_uLightCount: opts.shadowMatrices.length\n  };\n\n  const center = getMemoizedViewportCenterPosition({\n    viewport: opts.viewport,\n    center: context.project_uCenter\n  });\n\n  const projectCenters = [];\n  const viewProjectionMatrices = getMemoizedViewProjectionMatrices({\n    shadowMatrices: opts.shadowMatrices,\n    viewport: opts.viewport\n  }).slice();\n\n  for (let i = 0; i < opts.shadowMatrices.length; i++) {\n    const viewProjectionMatrix = viewProjectionMatrices[i];\n    const viewProjectionMatrixCentered = viewProjectionMatrix\n      .clone()\n      .translate(new Vector3(opts.viewport.center).negate());\n\n    if (\n      context.project_uCoordinateSystem === COORDINATE_SYSTEM.LNGLAT &&\n      context.project_uProjectionMode === PROJECTION_MODE.WEB_MERCATOR\n    ) {\n      viewProjectionMatrices[i] = viewProjectionMatrixCentered;\n      projectCenters[i] = center;\n    } else {\n      viewProjectionMatrices[i] = viewProjectionMatrix\n        .clone()\n        .multiplyRight(VECTOR_TO_POINT_MATRIX);\n      projectCenters[i] = viewProjectionMatrixCentered.transform(center);\n    }\n  }\n\n  for (let i = 0; i < viewProjectionMatrices.length; i++) {\n    uniforms[`shadow_uViewProjectionMatrices[${i}]`] = viewProjectionMatrices[i];\n    uniforms[`shadow_uProjectCenters[${i}]`] = projectCenters[i];\n\n    if (opts.shadowMaps && opts.shadowMaps.length > 0) {\n      uniforms[`shadow_uShadowMap${i}`] = opts.shadowMaps[i];\n    } else {\n      uniforms[`shadow_uShadowMap${i}`] = opts.dummyShadowMap;\n    }\n  }\n  return uniforms;\n}\n\nexport default {\n  name: 'shadow',\n  dependencies: [project],\n  vs,\n  fs,\n  inject: {\n    'vs:DECKGL_FILTER_GL_POSITION': `\n    position = shadow_setVertexPosition(geometry.position);\n    `,\n    'fs:DECKGL_FILTER_COLOR': `\n    color = shadow_filterShadowColor(color);\n    `\n  },\n  getUniforms: (opts = {}, context = {}) => {\n    if (opts.drawToShadowMap || (opts.shadowMaps && opts.shadowMaps.length > 0)) {\n      const shadowUniforms = {};\n      const {shadowEnabled = true} = opts;\n      if (shadowEnabled && opts.shadowMatrices && opts.shadowMatrices.length > 0) {\n        Object.assign(shadowUniforms, createShadowUniforms(opts, context));\n      } else {\n        Object.assign(shadowUniforms, {\n          shadow_uDrawShadowMap: false,\n          shadow_uUseShadowMap: false\n        });\n      }\n\n      return shadowUniforms;\n    }\n    return {};\n  }\n};\n"],"file":"shadow.js"}