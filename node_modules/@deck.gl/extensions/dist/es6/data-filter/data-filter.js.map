{"version":3,"sources":["../../../src/data-filter/data-filter.js"],"names":["LayerExtension","shaderModule","shaderModule64","aggregator","readPixelsToArray","clear","defaultProps","getFilterValue","type","value","onFilteredItemsChange","compare","filterEnabled","filterRange","filterSoftRange","filterTransformSize","filterTransformColor","DATA_TYPE_FROM_SIZE","DataFilterExtension","constructor","filterSize","fp64","countItems","Error","getShaders","extension","opts","modules","defines","DATAFILTER_TYPE","DATAFILTER_DOUBLE","Boolean","initializeState","context","attributeManager","getAttributeManager","add","filterValues","size","accessor","shaderAttributes","divisor","instanceFilterValues","gl","useFloatTarget","supportsFloatTarget","filterIndices","vertexOffset","normalized","object","index","i","__source","Math","floor","filterPrevIndices","filterFBO","getFramebuffer","filterModel","getModel","setState","updateState","props","oldProps","state","filterNeedsUpdate","attributes","needsUpdate","draw","params","setVertexCount","getNumInstances","framebuffer","color","updateModuleSettings","moduleParameters","setAttributes","getShaderAttributes","parameters","viewport","width","height","count","length","id","finalizeState","delete","extensionName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport {shaderModule, shaderModule64} from './shader-module';\nimport * as aggregator from './aggregator';\nimport {readPixelsToArray, clear} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst defaultProps = {\n  getFilterValue: {type: 'accessor', value: 0},\n  onFilteredItemsChange: {type: 'function', value: null, compare: false},\n\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\n\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\nexport default class DataFilterExtension extends LayerExtension {\n  constructor({filterSize = 1, fp64 = false, countItems = false} = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({filterSize, fp64, countItems});\n  }\n\n  getShaders(extension) {\n    const {filterSize, fp64} = extension.opts;\n\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? GL.DOUBLE : GL.FLOAT,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    const {gl} = this.context;\n    if (attributeManager && extension.opts.countItems) {\n      const useFloatTarget = aggregator.supportsFloatTarget(gl);\n      // This attribute is needed for variable-width data, e.g. Path, SolidPolygon, Text\n      // The vertex shader checks if a vertex has the same \"index\" as the previous vertex\n      // so that we only write one count cross multiple vertices of the same object\n      attributeManager.add({\n        filterIndices: {\n          size: useFloatTarget ? 1 : 2,\n          vertexOffset: 1,\n          type: GL.UNSIGNED_BYTE,\n          normalized: true,\n          accessor: (object, {index}) => {\n            const i = object && object.__source ? object.__source.index : index;\n            return useFloatTarget ? (i + 1) % 255 : [(i + 1) % 255, Math.floor(i / 255) % 255];\n          },\n          shaderAttributes: {\n            filterPrevIndices: {\n              vertexOffset: 0\n            },\n            filterIndices: {\n              vertexOffset: 1\n            }\n          }\n        }\n      });\n\n      const filterFBO = aggregator.getFramebuffer(gl, useFloatTarget);\n      const filterModel = aggregator.getModel(gl, extension.getShaders(extension), useFloatTarget);\n      this.setState({filterFBO, filterModel});\n    }\n  }\n\n  updateState({props, oldProps}) {\n    if (this.state.filterModel) {\n      const attributeManager = this.getAttributeManager();\n      const filterNeedsUpdate =\n        attributeManager.attributes.filterValues.needsUpdate() ||\n        props.filterEnabled !== oldProps.filterEnabled ||\n        props.filterRange !== oldProps.filterRange ||\n        props.filterSoftRange !== oldProps.filterSoftRange;\n      if (filterNeedsUpdate) {\n        this.setState({filterNeedsUpdate});\n      }\n    }\n  }\n\n  draw(params, extension) {\n    const {filterFBO, filterModel, filterNeedsUpdate} = this.state;\n    const {onFilteredItemsChange} = this.props;\n    if (filterNeedsUpdate && onFilteredItemsChange && filterModel) {\n      const {\n        attributes: {filterValues, filterIndices}\n      } = this.getAttributeManager();\n      filterModel.setVertexCount(this.getNumInstances());\n\n      const {gl} = this.context;\n      clear(gl, {framebuffer: filterFBO, color: [0, 0, 0, 0]});\n\n      filterModel\n        .updateModuleSettings(params.moduleParameters)\n        .setAttributes({\n          ...filterValues.getShaderAttributes(),\n          ...(filterIndices && filterIndices.getShaderAttributes())\n        })\n        .draw({\n          framebuffer: filterFBO,\n          parameters: {\n            ...aggregator.parameters,\n            viewport: [0, 0, filterFBO.width, filterFBO.height]\n          }\n        });\n      const color = readPixelsToArray(filterFBO);\n      let count = 0;\n      for (let i = 0; i < color.length; i++) {\n        count += color[i];\n      }\n      onFilteredItemsChange({id: this.id, count});\n\n      this.state.filterNeedsUpdate = false;\n    }\n  }\n\n  finalizeState() {\n    const {filterFBO, filterModel} = this.state;\n    if (filterFBO) {\n      filterFBO.color.delete();\n      filterFBO.delete();\n      filterModel.delete();\n    }\n  }\n}\n\nDataFilterExtension.extensionName = 'DataFilterExtension';\nDataFilterExtension.defaultProps = defaultProps;\n"],"file":"data-filter.js"}