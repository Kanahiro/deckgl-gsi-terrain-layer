{"version":3,"sources":["../../../src/data-filter/data-filter.js"],"names":["LayerExtension","shaderModule","shaderModule64","aggregator","readPixelsToArray","clear","defaultProps","getFilterValue","type","value","onFilteredItemsChange","compare","filterEnabled","filterRange","filterSoftRange","filterTransformSize","filterTransformColor","DATA_TYPE_FROM_SIZE","DataFilterExtension","filterSize","fp64","countItems","Error","extension","opts","modules","defines","DATAFILTER_TYPE","DATAFILTER_DOUBLE","Boolean","context","attributeManager","getAttributeManager","add","filterValues","size","accessor","shaderAttributes","divisor","instanceFilterValues","gl","useFloatTarget","supportsFloatTarget","filterIndices","vertexOffset","normalized","object","index","i","__source","Math","floor","filterPrevIndices","filterFBO","getFramebuffer","filterModel","getModel","getShaders","setState","props","oldProps","state","filterNeedsUpdate","attributes","needsUpdate","params","setVertexCount","getNumInstances","framebuffer","color","updateModuleSettings","moduleParameters","setAttributes","getShaderAttributes","draw","parameters","viewport","width","height","count","length","id","extensionName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport {shaderModule, shaderModule64} from './shader-module';\nimport * as aggregator from './aggregator';\nimport {readPixelsToArray, clear} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst defaultProps = {\n  getFilterValue: {type: 'accessor', value: 0},\n  onFilteredItemsChange: {type: 'function', value: null, compare: false},\n\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\n\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\nexport default class DataFilterExtension extends LayerExtension {\n  constructor({filterSize = 1, fp64 = false, countItems = false} = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({filterSize, fp64, countItems});\n  }\n\n  getShaders(extension) {\n    const {filterSize, fp64} = extension.opts;\n\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? GL.DOUBLE : GL.FLOAT,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    const {gl} = this.context;\n    if (attributeManager && extension.opts.countItems) {\n      const useFloatTarget = aggregator.supportsFloatTarget(gl);\n      // This attribute is needed for variable-width data, e.g. Path, SolidPolygon, Text\n      // The vertex shader checks if a vertex has the same \"index\" as the previous vertex\n      // so that we only write one count cross multiple vertices of the same object\n      attributeManager.add({\n        filterIndices: {\n          size: useFloatTarget ? 1 : 2,\n          vertexOffset: 1,\n          type: GL.UNSIGNED_BYTE,\n          normalized: true,\n          accessor: (object, {index}) => {\n            const i = object && object.__source ? object.__source.index : index;\n            return useFloatTarget ? (i + 1) % 255 : [(i + 1) % 255, Math.floor(i / 255) % 255];\n          },\n          shaderAttributes: {\n            filterPrevIndices: {\n              vertexOffset: 0\n            },\n            filterIndices: {\n              vertexOffset: 1\n            }\n          }\n        }\n      });\n\n      const filterFBO = aggregator.getFramebuffer(gl, useFloatTarget);\n      const filterModel = aggregator.getModel(gl, extension.getShaders(extension), useFloatTarget);\n      this.setState({filterFBO, filterModel});\n    }\n  }\n\n  updateState({props, oldProps}) {\n    if (this.state.filterModel) {\n      const attributeManager = this.getAttributeManager();\n      const filterNeedsUpdate =\n        attributeManager.attributes.filterValues.needsUpdate() ||\n        props.filterEnabled !== oldProps.filterEnabled ||\n        props.filterRange !== oldProps.filterRange ||\n        props.filterSoftRange !== oldProps.filterSoftRange;\n      if (filterNeedsUpdate) {\n        this.setState({filterNeedsUpdate});\n      }\n    }\n  }\n\n  draw(params, extension) {\n    const {filterFBO, filterModel, filterNeedsUpdate} = this.state;\n    const {onFilteredItemsChange} = this.props;\n    if (filterNeedsUpdate && onFilteredItemsChange && filterModel) {\n      const {\n        attributes: {filterValues, filterIndices}\n      } = this.getAttributeManager();\n      filterModel.setVertexCount(this.getNumInstances());\n\n      const {gl} = this.context;\n      clear(gl, {framebuffer: filterFBO, color: [0, 0, 0, 0]});\n\n      filterModel\n        .updateModuleSettings(params.moduleParameters)\n        .setAttributes({\n          ...filterValues.getShaderAttributes(),\n          ...(filterIndices && filterIndices.getShaderAttributes())\n        })\n        .draw({\n          framebuffer: filterFBO,\n          parameters: {\n            ...aggregator.parameters,\n            viewport: [0, 0, filterFBO.width, filterFBO.height]\n          }\n        });\n      const color = readPixelsToArray(filterFBO);\n      let count = 0;\n      for (let i = 0; i < color.length; i++) {\n        count += color[i];\n      }\n      onFilteredItemsChange({id: this.id, count});\n\n      this.state.filterNeedsUpdate = false;\n    }\n  }\n\n  finalizeState() {\n    const {filterFBO, filterModel} = this.state;\n    if (filterFBO) {\n      filterFBO.color.delete();\n      filterFBO.delete();\n      filterModel.delete();\n    }\n  }\n}\n\nDataFilterExtension.extensionName = 'DataFilterExtension';\nDataFilterExtension.defaultProps = defaultProps;\n"],"file":"data-filter.js"}