{"version":3,"sources":["../../../src/brushing/brushing.js"],"names":["LayerExtension","shaderModule","defaultProps","getBrushingTarget","type","value","brushingTarget","brushingEnabled","brushingRadius","BrushingExtension","extension","modules","context","attributeManager","getAttributeManager","add","brushingTargets","size","accessor","update","props","useConstantTargetPositions","shaderAttributes","divisor","instanceBrushingTargets","onMouseMove","getCurrentLayer","setNeedsRedraw","deck","eventManager","on","pointermove","pointerleave","off","attribute","constant","Float32Array","extensionName"],"mappings":";;;;;;;;;;AAoBA,SAAQA,cAAR,QAA6B,eAA7B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,iBAAiB,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAA1B,GADA;AAGnBC,EAAAA,cAAc,EAAE,QAHG;AAInBC,EAAAA,eAAe,EAAE,IAJE;AAKnBC,EAAAA,cAAc,EAAE;AALG,CAArB;;IAQqBC,iB;;;;;;;;;;;;;+BACRC,S,EAAW;AACpB,aAAO;AACLC,QAAAA,OAAO,EAAE,CAACV,YAAD;AADJ,OAAP;AAGD;;;oCAEeW,O,EAASF,S,EAAW;AAAA;;AAClC,UAAMG,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;;AACA,UAAID,gBAAJ,EAAsB;AACpBA,QAAAA,gBAAgB,CAACE,GAAjB,CAAqB;AACnBC,UAAAA,eAAe,EAAE;AACfC,YAAAA,IAAI,EAAE,CADS;AAEfC,YAAAA,QAAQ,EAAE,mBAFK;AAKfC,YAAAA,MAAM,EAAE,CAAC,KAAKC,KAAL,CAAWjB,iBAAZ,IAAiCO,SAAS,CAACW,0BALpC;AAMfC,YAAAA,gBAAgB,EAAE;AAChBN,cAAAA,eAAe,EAAE;AACfO,gBAAAA,OAAO,EAAE;AADM,eADD;AAIhBC,cAAAA,uBAAuB,EAAE;AACvBD,gBAAAA,OAAO,EAAE;AADc;AAJT;AANH;AADE,SAArB;AAiBD;;AAIDb,MAAAA,SAAS,CAACe,WAAV,GAAwB,YAAM;AAC5B,QAAA,KAAI,CAACC,eAAL,GAAuBC,cAAvB;AACD,OAFD;;AAGA,UAAI,KAAKf,OAAL,CAAagB,IAAjB,EAAuB;AACrB,aAAKhB,OAAL,CAAagB,IAAb,CAAkBC,YAAlB,CAA+BC,EAA/B,CAAkC;AAChCC,UAAAA,WAAW,EAAErB,SAAS,CAACe,WADS;AAEhCO,UAAAA,YAAY,EAAEtB,SAAS,CAACe;AAFQ,SAAlC;AAID;AACF;;;kCAEaf,S,EAAW;AAEvB,UAAI,KAAKE,OAAL,CAAagB,IAAjB,EAAuB;AACrB,aAAKhB,OAAL,CAAagB,IAAb,CAAkBC,YAAlB,CAA+BI,GAA/B,CAAmC;AACjCF,UAAAA,WAAW,EAAErB,SAAS,CAACe,WADU;AAEjCO,UAAAA,YAAY,EAAEtB,SAAS,CAACe;AAFS,SAAnC;AAID;AACF;;;+CAE0BS,S,EAAW;AACpCA,MAAAA,SAAS,CAACC,QAAV,GAAqB,IAArB;AACAD,MAAAA,SAAS,CAAC7B,KAAV,GAAkB,IAAI+B,YAAJ,CAAiB,CAAjB,CAAlB;AACA;AACD;;;;EAxD4CpC,c;;SAA1BS,iB;AA2DrBA,iBAAiB,CAAC4B,aAAlB,GAAkC,mBAAlC;AACA5B,iBAAiB,CAACP,YAAlB,GAAiCA,YAAjC","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport shaderModule from './shader-module';\n\nconst defaultProps = {\n  getBrushingTarget: {type: 'accessor', value: [0, 0]},\n\n  brushingTarget: 'source',\n  brushingEnabled: true,\n  brushingRadius: 10000\n};\n\nexport default class BrushingExtension extends LayerExtension {\n  getShaders(extension) {\n    return {\n      modules: [shaderModule]\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        brushingTargets: {\n          size: 2,\n          accessor: 'getBrushingTarget',\n          // Hack: extension's defaultProps is not merged with the layer's defaultProps,\n          // So we can't use the standard accessor when the prop is undefined\n          update: !this.props.getBrushingTarget && extension.useConstantTargetPositions,\n          shaderAttributes: {\n            brushingTargets: {\n              divisor: 0\n            },\n            instanceBrushingTargets: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    // Trigger redraw when mouse moves\n    // TODO - expose this in a better way\n    extension.onMouseMove = () => {\n      this.getCurrentLayer().setNeedsRedraw();\n    };\n    if (this.context.deck) {\n      this.context.deck.eventManager.on({\n        pointermove: extension.onMouseMove,\n        pointerleave: extension.onMouseMove\n      });\n    }\n  }\n\n  finalizeState(extension) {\n    // Remove event listeners\n    if (this.context.deck) {\n      this.context.deck.eventManager.off({\n        pointermove: extension.onMouseMove,\n        pointerleave: extension.onMouseMove\n      });\n    }\n  }\n\n  useConstantTargetPositions(attribute) {\n    attribute.constant = true;\n    attribute.value = new Float32Array(2);\n    return;\n  }\n}\n\nBrushingExtension.extensionName = 'BrushingExtension';\nBrushingExtension.defaultProps = defaultProps;\n"],"file":"brushing.js"}