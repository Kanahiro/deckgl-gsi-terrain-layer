{"version":3,"sources":["../../../src/fp64/project64.js"],"names":["fp64","fp64ify","fp64ifyMatrix4","project","_memoize","memoize","project64Shader","name","dependencies","vs","getUniforms","DEFAULT_MODULE_OPTIONS","getMemoizedUniforms","calculateUniforms","opts","viewport","viewProjectionMatrix","scale","glViewProjectionMatrixFP64","scaleFP64","project_uViewProjectionMatrixFP64","project64_uViewProjectionMatrix","project64_uScale"],"mappings":"AAoBA,SAAQA,IAAR,QAAmB,sBAAnB;IACOC,O,GAA2BD,I,CAA3BC,O;IAASC,c,GAAkBF,I,CAAlBE,c;AAChB,SAAQC,OAAR,EAAiBC,QAAQ,IAAIC,OAA7B,QAA2C,eAA3C;AAEA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,WADO;AAEbC,EAAAA,YAAY,EAAE,CAACL,OAAD,EAAUH,IAAV,CAFD;AAGbS,EAAAA,EAAE,EAAEH,eAHS;AAIbI,EAAAA,WAAW,EAAXA;AAJa,CAAf;AAUA,IAAMC,sBAAsB,GAAG,EAA/B;AACA,IAAMC,mBAAmB,GAAGP,OAAO,CAACQ,iBAAD,CAAnC;;AAEA,SAASH,WAAT,GAAoD;AAAA,MAA/BI,IAA+B,uEAAxBH,sBAAwB;;AAClD,MAAIG,IAAI,CAACC,QAAT,EAAmB;AAAA,yBACqBD,IAAI,CAACC,QAD1B;AAAA,QACVC,oBADU,kBACVA,oBADU;AAAA,QACYC,KADZ,kBACYA,KADZ;AAGjB,WAAOL,mBAAmB,CAAC;AAACI,MAAAA,oBAAoB,EAApBA,oBAAD;AAAuBC,MAAAA,KAAK,EAALA;AAAvB,KAAD,CAA1B;AACD;;AACD,SAAO,EAAP;AACD;;AAED,SAASJ,iBAAT,OAA0D;AAAA,MAA9BG,oBAA8B,QAA9BA,oBAA8B;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACxD,MAAMC,0BAA0B,GAAGhB,cAAc,CAACc,oBAAD,CAAjD;AACA,MAAMG,SAAS,GAAGlB,OAAO,CAACgB,KAAD,CAAzB;AAEA,SAAO;AACLG,IAAAA,iCAAiC,EAAEF,0BAD9B;AAELG,IAAAA,+BAA+B,EAAEH,0BAF5B;AAGLI,IAAAA,gBAAgB,EAAEH;AAHb,GAAP;AAKD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {fp64} from '@luma.gl/shadertools';\nconst {fp64ify, fp64ifyMatrix4} = fp64;\nimport {project, _memoize as memoize} from '@deck.gl/core';\n\nimport project64Shader from './project64.glsl';\n\nexport default {\n  name: 'project64',\n  dependencies: [project, fp64],\n  vs: project64Shader,\n  getUniforms\n};\n\n// TODO - this module should calculate the 64 bit uniforms\n// It is currently done by project to minimize duplicated work\n\nconst DEFAULT_MODULE_OPTIONS = {};\nconst getMemoizedUniforms = memoize(calculateUniforms);\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  if (opts.viewport) {\n    const {viewProjectionMatrix, scale} = opts.viewport;\n    // We only need to update fp64 uniforms if fp32 projection is being updated\n    return getMemoizedUniforms({viewProjectionMatrix, scale});\n  }\n  return {};\n}\n\nfunction calculateUniforms({viewProjectionMatrix, scale}) {\n  const glViewProjectionMatrixFP64 = fp64ifyMatrix4(viewProjectionMatrix);\n  const scaleFP64 = fp64ify(scale);\n\n  return {\n    project_uViewProjectionMatrixFP64: glViewProjectionMatrixFP64,\n    project64_uViewProjectionMatrix: glViewProjectionMatrixFP64,\n    project64_uScale: scaleFP64\n  };\n}\n"],"file":"project64.js"}