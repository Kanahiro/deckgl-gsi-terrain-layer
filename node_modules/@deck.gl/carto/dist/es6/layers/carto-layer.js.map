{"version":3,"sources":["../../../src/layers/carto-layer.js"],"names":["CompositeLayer","MVTLayer","defaultProps","data","credentials","CartoLayer","initializeState","state","tilejson","updateState","changeFlags","props","dataChanged","_updateTileJSON","Error","onHover","info","pickingEvent","mvtLayer","getSubLayers","renderLayers","updateTriggers","getSubLayerProps","id","tiles","layerName"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,eAA7B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe,MAAMC,UAAN,SAAyBL,cAAzB,CAAwC;AACrDM,EAAAA,eAAe,GAAG;AAChB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,WAAW,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAgB;AACzB,UAAM;AAACP,MAAAA;AAAD,QAAS,KAAKQ,KAApB;;AACA,QAAID,WAAW,CAACE,WAAZ,IAA2BT,IAA/B,EAAqC;AACnC,WAAKU,eAAL;AACD;AACF;;AAED,QAAMA,eAAN,GAAwB;AACtB,UAAM,IAAIC,KAAJ,iEAAN;AACD;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB;AAC1B,UAAM,CAACC,QAAD,IAAa,KAAKC,YAAL,EAAnB;AACA,WAAOD,QAAQ,GAAGA,QAAQ,CAACH,OAAT,CAAiBC,IAAjB,EAAuBC,YAAvB,CAAH,GAA0C,MAAMF,OAAN,CAAcC,IAAd,EAAoBC,YAApB,CAAzD;AACD;;AAEDG,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC,KAAKb,KAAL,CAAWC,QAAhB,EAA0B,OAAO,IAAP;AAE1B,UAAM;AAACa,MAAAA;AAAD,QAAmB,KAAKV,KAA9B;AAEA,WAAO,IAAIV,QAAJ,CACL,KAAKU,KADA,EAEL,KAAKW,gBAAL,CAAsB;AACpBC,MAAAA,EAAE,EAAE,KADgB;AAEpBpB,MAAAA,IAAI,EAAE,KAAKI,KAAL,CAAWC,QAAX,CAAoBgB,KAFN;AAGpBH,MAAAA;AAHoB,KAAtB,CAFK,CAAP;AAQD;;AApCoD;AAuCvDhB,UAAU,CAACoB,SAAX,GAAuB,YAAvB;AACApB,UAAU,CAACH,YAAX,GAA0BA,YAA1B","sourcesContent":["import {CompositeLayer} from '@deck.gl/core';\nimport {MVTLayer} from '@deck.gl/geo-layers';\n\nconst defaultProps = {\n  data: null,\n  credentials: null\n};\n\nexport default class CartoLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tilejson: null\n    };\n  }\n\n  updateState({changeFlags}) {\n    const {data} = this.props;\n    if (changeFlags.dataChanged && data) {\n      this._updateTileJSON();\n    }\n  }\n\n  async _updateTileJSON() {\n    throw new Error(`You must use one of the specific carto layers: BQ or SQL type`);\n  }\n\n  onHover(info, pickingEvent) {\n    const [mvtLayer] = this.getSubLayers();\n    return mvtLayer ? mvtLayer.onHover(info, pickingEvent) : super.onHover(info, pickingEvent);\n  }\n\n  renderLayers() {\n    if (!this.state.tilejson) return null;\n\n    const {updateTriggers} = this.props;\n\n    return new MVTLayer(\n      this.props,\n      this.getSubLayerProps({\n        id: 'mvt',\n        data: this.state.tilejson.tiles,\n        updateTriggers\n      })\n    );\n  }\n}\n\nCartoLayer.layerName = 'CartoLayer';\nCartoLayer.defaultProps = defaultProps;\n"],"file":"carto-layer.js"}